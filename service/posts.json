[{"id":"110","title":"Trigger (Tetikleyici) Nedir ? Nas\u0131l Kullan\u0131l\u0131r ?","content_half":"<div style=\"text-align: left;\">\nBu yaz\u0131mda <b>TRIGGER<\/b>'lar\u0131 <b>MYSQL<\/b> kullanarak inceleyece\u011fiz.<br \/>\n<b>INSERT , UPDATE , DELETE<\/b> i\u015flemlerinin ger\u00e7ekle\u015fmesi halinde devreye girebilen <b>STORED PROCEDURE(SAKLI YORDAM) <\/b>yap\u0131s\u0131d\u0131r.Hassas verilerin de\u011fi\u015fiminin veritaban\u0131nda kay\u0131tlar\u0131n\u0131 tutmay\u0131 , gerek eski haline getirmek ,gerek ise olu\u015fan durumlara g\u00f6re belirledi\u011fimiz i\u015flemleri yapabilmemizi sa\u011flar.<br \/>\n","content_full":"<div style=\"text-align: left;\">\nBu yaz\u0131mda <b>TRIGGER<\/b>'lar\u0131 <b>MYSQL<\/b> kullanarak inceleyece\u011fiz.<br \/>\n<b>INSERT , UPDATE , DELETE<\/b> i\u015flemlerinin ger\u00e7ekle\u015fmesi halinde devreye girebilen <b>STORED PROCEDURE(SAKLI YORDAM) <\/b>yap\u0131s\u0131d\u0131r.Hassas verilerin de\u011fi\u015fiminin veritaban\u0131nda kay\u0131tlar\u0131n\u0131 tutmay\u0131 , gerek eski haline getirmek ,gerek ise olu\u015fan durumlara g\u00f6re belirledi\u011fimiz i\u015flemleri yapabilmemizi sa\u011flar.<br \/>\n<br \/>\n<b>TRIGGER<\/b> \u00e7al\u0131\u015fmaya ba\u015flamadan \u00f6nce bir <b>TRANSACTION <\/b>a\u00e7\u0131l\u0131r.<b>TRANSACTION <\/b>konusuna burada detayl\u0131 olarak girmiyorum.Fakat temel bir \u015fekilde kullan\u0131m\u0131 \u015fu \u015fekilde ger\u00e7ekle\u015fiyor.E\u011fer <b>TRIGGER <\/b>blo\u011funda bir&nbsp;<b>ROLLBACK &nbsp;<\/b>var&nbsp;ifadesi \u00e7al\u0131\u015ft\u0131r\u0131l\u0131rsa olu\u015fan durumlarda son i\u015flem ge\u00e7ersiz olur ve yap\u0131lan i\u015flemler eski haline d\u00f6nderilir , e\u011fer yok ise otomatik olarak <b>COMMIT <\/b>yap\u0131l\u0131r ve i\u015flem ger\u00e7ekle\u015ftirilir.Bunu \u015f\u00f6yle \u00f6rnekleyelim ; \u00f6rne\u011fin bir ATM'den birisine para transferi yap\u0131yorsunuz,para hesab\u0131n\u0131zdan d\u00fc\u015ft\u00fc fakat g\u00f6nderdi\u011finiz ki\u015finin hesab\u0131na para ula\u015fmad\u0131.\u0130\u015fte bu durumlarda <b>TRANSACTION <\/b>devreye giriyor ve yapt\u0131\u011f\u0131 kontrol ile paray\u0131 sizin hesab\u0131n\u0131za tekrar yat\u0131r\u0131yor<b>.<\/b><br \/>\n<b><br \/><\/b>\n<br \/>\n<ul>\n<li><b>INSERT <\/b>i\u015fleminde&nbsp;sadece <b>NEW<\/b> kullan\u0131l\u0131r.<\/li>\n<li><b>UPDATE<\/b> i\u015fleminde hem <b>NEW<\/b> hem de <b>OLD<\/b> kullan\u0131l\u0131r.<\/li>\n<li><b>DELETE<\/b> i\u015fleminde ise sadece <b>OLD<\/b> kullan\u0131l\u0131r.<\/li>\n<\/ul>\n<br \/>\nSyntax'\u0131 (Yaz\u0131m Kural\u0131):<br \/>\n<br \/>\n<div>\n<br \/><\/div>\n<\/div>\n<sh class=\"brush : sql\">CREATE [ DEFINER={ &lt; kullanici ad\u0131 &gt;} | CURRENT_USER} ] TRIGGER &lt; trigger ad\u0131 &gt;\n{ BEFORE | AFTER }\n{ UPDATE | INSERT | DELETE }\nON &lt; tablo ad &gt;\nFOR EACH ROW\nBEGIN\n..\n\u2026\nEND ; <\/sh>\n\u00d6rnek bir uygulama ile daha anla\u015f\u0131l\u0131r bir hale getirelim.<br \/>\nYap\u0131lan <b>INSERT <\/b>ve <b>DELETE <\/b>i\u015flemlerinde tetiklenecek birer <b>TRIGGER <\/b>olu\u015ftural\u0131m.\nBir futbol tak\u0131m\u0131 i\u00e7in m\u00fclakat se\u00e7imi yap\u0131ls\u0131n , &nbsp;e\u011fer ki j\u00fcrinin verdi\u011fi puanlarla toplamda 85 puan\u0131n \u00fczerinde olan ki\u015fileri futbol tak\u0131m\u0131na ald\u0131\u011f\u0131m\u0131z\u0131 varsayal\u0131m.Tak\u0131m al\u0131nan her ki\u015fiye otomatik olarak 1-100 aras\u0131nda tak\u0131m numaralar\u0131 verilmektedir.Daha sonra tak\u0131mdan ayr\u0131lanlar\u0131 da belirtelim.<br \/>\n<br \/>\n<br \/>\n\u00d6ncelikle tablolar\u0131m\u0131z\u0131 olu\u015fturuyoruz ;\n\n<br \/>\n<sh class=\"brush: sql\">CREATE TABLE mulakat_listesi (tcno INT NOT NULL,isim VARCHAR(20),soyisim VARCHAR(20),\nmulakat_puani INT,PRIMARY(tcno));\n<\/sh>\nM\u00fclakat listesine kat\u0131lan ki\u015filerin <b>tcno , isim , soyisim<\/b> ve m\u00fclakattan ald\u0131klar\u0131 puan i\u00e7in  <b>mulakat_puani<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.\n<br \/>\n<sh class=\"brush: sql\">CREATE TABLE futbol_takimi(takimno INT NOT NULL,ad VARCHAR (20),soyad VARCHAR(30),\ntarih TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);\n<\/sh>\nFutbol tak\u0131m\u0131na se\u00e7ilecek olan ki\u015filer i\u00e7in <b>futbol_takimi<\/b> tablosunda her bir ki\u015finin bir <b>takimno , ad , soyad ve tarih<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.\n<br \/>\n<sh class=\"brush: sql\">CREATE TABLE ayrilan (ayrilan_isim VARCHAR(20),ayrilan_soyisim VARCHAR(20),\ngiris_tarih VARCHAR(100),ayrilma_tarih TIMESTAMPS NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);\n<\/sh>\nTak\u0131mdan ayr\u0131lanlar\u0131 tutaca\u011f\u0131m\u0131z ayrilan tablosunda <b>ayrilan_isim , ayrilan_soyisim , giris_tarih<\/b> ve <b>ayrilma_tarih<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.\n\n<br \/>\n<br \/>\n<br \/>\nArd\u0131ndan <b>TRIGGER'<\/b>\u0131m\u0131z\u0131 olu\u015fturuyoruz.<br \/>\n<br \/>\n<sh class=\"brush: sql\">DELIMITER $$\n\nCREATE TRIGGER takima_girmek\n BEFORE INSERT ON mulakat_listesi\n  FOR EACH ROW\n   BEGIN\n    IF(NEW.mulakat_puani&gt;85) THEN\n     INSERT INTO futbol_takimi (takimno,ad,soyad) VALUES  ((FLOOR(RAND()*100)),NEW.isim,NEW.soyisim);\n    END IF;\n   END;$$ <\/sh>\nBurada yapm\u0131\u015f oldu\u011fumuz \u015fey , e\u011fer se\u00e7melerde <b>m\u00fclakat puan\u0131<\/b> 85'ten y\u00fcksek olan bir ki\u015fi var ise &nbsp;bu ki\u015finin bilgilerini al\u0131p , 1 ile 100 aras\u0131nda bir tak\u0131m numaras\u0131 verip , <b>futbol tak\u0131m\u0131 <\/b>tablosuna eklemek.Bu <b>TRIGGER'<\/b>\u0131 olu\u015fturup \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda sistem bizim yerimize <b>TRIGGER <\/b>ko\u015fulunu sa\u011flayan durumda bu i\u015flemleri ger\u00e7ekle\u015ftirecektir.<br \/>\n<span style=\"background-color: white; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 14px; line-height: 15.3999996185303px; white-space: nowrap;\">DELIMITER $$<\/span><br \/>\n<span style=\"background-color: white; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 14px; line-height: 15.3999996185303px; white-space: nowrap;\"><br \/><\/span>\n<br \/>\n<sh class=\"brush : sql\">CREATE TRIGGER ayrilma_islemi\n AFTER DELETE ON futbol_takimi\n  FOR EACH ROW\n   BEGIN\n    INSERT INTO ayrilan (ayrilan_isim,ayrilan_soyisim,giris_tarih)\n    VALUES(OLD.ad,OLD.soyad,OLD.tarih);\n   END;$$\n<\/sh>\nBurada ise e\u011fer tak\u0131mdan ayr\u0131lan olursa bu ki\u015finin ad\u0131n\u0131 , soyad\u0131n\u0131 tak\u0131ma giri\u015f tarihini ve \u00e7\u0131k\u0131\u015f tarihini ayr\u0131lan tablosuna ekliyor.","date":"1428973662","tags":"mysql , trigger , tetikleyici , mysql trigger , sql , sql trigger nas\u0131l kullan\u0131l\u0131r , sql trigger nedir , mysql trigger nedir","link":"trigger-tetikleyici-nedir-nasil-kullanilir"},{"id":"111","title":"Java -  S\u0131n\u0131flar","content_half":"<p>Bu yaz\u0131mda Java - S\u0131n\u0131flar&#39;\u0131 anlatmaya &ccedil;al\u0131\u015ft\u0131m.<br \/>\nUmar\u0131m yararl\u0131 olur.<br \/>\nBasit bir s\u0131n\u0131f olu\u015ftural\u0131m.<br \/>\n<br \/>\n&nbsp;<\/p>","content_full":"<p>Bu yaz\u0131mda Java - S\u0131n\u0131flar&#39;\u0131 anlatmaya &ccedil;al\u0131\u015ft\u0131m.<br \/>\nUmar\u0131m yararl\u0131 olur.<br \/>\nBasit bir s\u0131n\u0131f olu\u015ftural\u0131m.<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n double width;\n double height;\n double depth;\n}\n<\/sh>\n\n<p><strong>Rectangle&nbsp;<\/strong>adl\u0131 s\u0131n\u0131f\u0131m\u0131z , 3 de\u011fi\u015fken tan\u0131ml\u0131yor:&nbsp;<strong>width,height ve depth&nbsp;<\/strong>olarak.\u015eu anda bu s\u0131n\u0131f method i&ccedil;ermiyor.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass mainClass{\n public static void main(String args[]){\n  Rectangle myRectangle = new Rectangle ();\n  double result;\n  Rectangle.width = 5;\n  Rectangle.height = 3;\n  Rectangle.depth = 2;\n  result = Rectangle.width * Rectangle.height * Rectangle.depth ;\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in : &quot; + result);\n }\n}\n Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nDikd&ouml;rtgenin Hacmi : 30 \n<\/sh>\n\n<p>Bu program &ccedil;al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131 zaman 2 adet s\u0131n\u0131f olu\u015fturulur , ilki&nbsp;<strong>Rectangle&nbsp;<\/strong>s\u0131n\u0131f\u0131 di\u011feri ise&nbsp;<strong>mainClass&nbsp;<\/strong>s\u0131n\u0131f\u0131d\u0131r.Burada olu\u015fturdu\u011fumuz&nbsp;<strong>myRectangle&nbsp;<\/strong>ise<strong>&nbsp;<\/strong>bir <strong>local <\/strong>de\u011fi\u015fkendir ve olu\u015fturuldu\u011fu s\u0131n\u0131f\u0131n tipini referans etmektedir.E\u011fer bir s\u0131n\u0131f i&ccedil;erisindeki verilere(de\u011fi\u015fken) ve davran\u0131\u015flara(method) eri\u015fmek istiyorsak o s\u0131n\u0131f\u0131 referans eden de\u011fi\u015fkenleri olu\u015fturmak zorunday\u0131z.E\u011fer bu program\u0131 &ccedil;al\u0131\u015ft\u0131rmak istiyorsak&nbsp;<strong>mainClass&nbsp;<\/strong>s\u0131n\u0131f\u0131n\u0131 &ccedil;al\u0131\u015ft\u0131rmak zorunday\u0131z.Burada yapt\u0131\u011f\u0131m\u0131z i\u015flem olu\u015fturdu\u011fumuz bir dikd&ouml;rtgenin hacmini hesaplamak.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass mainClass{\n public static void main(String args[]){\n  Rectangle myRectangle = new Rectangle ();\n  Rectangle myRectangle2 = new Rectangle ();\n  double result;\n  myRectangle.width = 5;\n  myRectangle.height = 3;\n  myRectangle.depth = 2;\n  myRectangle2.width = 7;\n  myRectangle2.height = 5;\n  myRectangle2.depth = 4;\n\n  result = myRectangle.width * myRectangle.height * myRectangle.depth;\n  System.out.println(&quot;(myRectangle i&ccedil;in)  \\n Dikd&ouml;rtgenin Hacmi : &quot; + result);\n  result = myRectangle2.width * myRectangle2.height * myRectangle2.depth;\n  System.out.println(&quot;(myRectangle2 i&ccedil;in) \\n Dikd&ouml;rtgenin Hacmi : &quot; + result);\n\n }\n} \nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\n(myRectangle i&ccedil;in) \nDikd&ouml;rtgenin Hacmi : 140\n(myRectangle2 i&ccedil;in) \nDikd&ouml;rtgenin Hacmi : 30 \n<\/sh>\n\n<p>Bir nesnenin de\u011fi\u015fkenine herhangi bir de\u011fi\u015fiklik yaparsak bundan di\u011fer nesnelerin de\u011fi\u015fkenleri etkilenmez.&Ouml;rne\u011fin yukar\u0131daki programda bir &ouml;nceki program gibi&nbsp;<strong>myRectangle&nbsp;<\/strong>i\u015fleminin sonucu yine 30&#39;dur.&Ccedil;\u0131kt\u0131dan anla\u015f\u0131ld\u0131\u011f\u0131 gibi iki nesneninde verileri birbirinden farkl\u0131d\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1425725563","tags":"java,Javase, Java Class , Java S\u0131n\u0131flar ,S\u0131n\u0131flar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---siniflar"},{"id":"112","title":"Java - Methodlar","content_half":"<p>Bu yaz\u0131mda bir &ouml;nceki yaz\u0131mda kulland\u0131\u011f\u0131m yap\u0131lar\u0131n devam\u0131 olarak Methodlar&#39;\u0131 anlataca\u011f\u0131m.<br \/>\n<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-1-snflar.html\">&quot; Java - S\u0131n\u0131flar &quot; konulu yaz\u0131ma bu adresten ula\u015fabilirsiniz.<\/a><br \/>\nMethodlar ;<br \/>","content_full":"<p>Bu yaz\u0131mda bir &ouml;nceki yaz\u0131mda kulland\u0131\u011f\u0131m yap\u0131lar\u0131n devam\u0131 olarak Methodlar&#39;\u0131 anlataca\u011f\u0131m.<br \/>\n<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-1-snflar.html\">&quot; Java - S\u0131n\u0131flar &quot; konulu yaz\u0131ma bu adresten ula\u015fabilirsiniz.<\/a><br \/>\nMethodlar ;<br \/>\n<strong>&nbsp; 1 - Geriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/>\n<strong>&nbsp; &nbsp; 1.1 - Parametresiz g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/>\n<strong>&nbsp; &nbsp; 1.2 -&nbsp;<\/strong><strong>Parametreli g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/>\n<strong>&nbsp; 2 - Geriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/>\n<strong>&nbsp; &nbsp; 2.1 - Parametresiz g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/>\n<strong>&nbsp; &nbsp; 2.2 - Parametreli g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/>\n&nbsp; olmak &uuml;zere ikiye ayr\u0131l\u0131rlar.<br \/>\n<br \/>\n<strong>1-Geriye De\u011fer D&ouml;nd&uuml;rmeyen Methodlar&nbsp;<\/strong><br \/>\nDaha &ouml;nce tan\u0131mlad\u0131\u011f\u0131m\u0131z <strong>result <\/strong>de\u011fi\u015fkenine atad\u0131\u011f\u0131m\u0131z de\u011fi\u015fkenleri ba\u015fka i\u015flemlerde kullanmak i&ccedil;in tekrar toplama i\u015flemini olu\u015fturmam\u0131z gerekicektir.Bu i\u015flemi <strong>mainClass <\/strong>s\u0131n\u0131f\u0131n\u0131n yerine <strong>Rectangle<\/strong> s\u0131n\u0131f\u0131n\u0131n yapmas\u0131 daha iyi olucakt\u0131r.<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n double width;\n double height;\n double depth;\nvoid volume (){\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  : &quot;+(width * height * depth);\n }\n}<\/sh>\n\n<p>Olu\u015fturdu\u011fumuz her nesne i&ccedil;in bu methodu &ccedil;a\u011f\u0131rabiliriz.B&ouml;ylelikle daha sade bir kullan\u0131m olu\u015ftu.<\/p>\n\n<sh class=\"brush: java\">\nclass mainClass {\n public static void main(String args[]) {\n  Rectangle myRectangle = new Rectangle ();\n  Rectangle myRectangle2 = new Rectangle ();\n  double result;\n  myRectangle.width = 5;\n  myRectangle.height = 3;\n  myRectangle.depth = 2;\n  myRectangle2.width = 7;\n  myRectangle2.height = 5;\n  myRectangle2.depth = 4;\n  myRectangle2.volume();\n  myRectangle.volume();\n }\n} \nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nDikd&ouml;rtgenin Hacmi  i&ccedil;in : 140 \/\/myRectangle2\nDikd&ouml;rtgenin Hacmi  i&ccedil;in  : 30 \/\/myRectangle\n<\/sh>\n\n\n<p>Bu \u015fekilde program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda bir &ouml;nceki programda oldu\u011fu gibi sonucun ayn\u0131 oldu\u011funu g&ouml;r&uuml;yoruz.B&ouml;ylelikle yap\u0131lan tekrarlardan kurtulup daha sade bir kullan\u0131m elde ettik.<br \/>\n<br \/>\nAma bu \u015fekilde kullan\u0131mda yeterli de\u011fildir.Daha dinamik bir hale getirmek i&ccedil;in geriye de\u011fer d&ouml;nd&uuml;ren method \u015fekilde kullanmam\u0131z gereklidir.<br \/>\n<br \/>\n<strong>2 - Geriye De\u011fer D&ouml;nd&uuml;ren Methodlar<\/strong><br \/>\n<br \/>\nBir &ouml;nceki programda &ccedil;a\u011f\u0131rd\u0131m\u0131z <strong>volume <\/strong>methodunda sonucu ekrana yazd\u0131ran bir i\u015flem yap\u0131yorduk , bunu her zaman kullanmak mecburiyetinde de\u011filiz.\u0130stenildi\u011fi zaman program\u0131n &ccedil;\u0131kt\u0131s\u0131 al\u0131nabilir.Bunun d\u0131\u015f\u0131nda di\u011fer i\u015flemler i&ccedil;in kullan\u0131lmal\u0131d\u0131r.Program\u0131 tekrar olu\u015ftural\u0131m.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n double width;\n double height\n double depth;\n\n double volume (){\n  return width * height * depth ;\n }\n}\n<\/sh>\n\n<p><br \/>\nBurada <strong>volume&nbsp;<\/strong>methodunun &ouml;n&uuml;ne kulland\u0131\u011f\u0131m\u0131z <strong>double<\/strong> ifadesi methodun geriye d&ouml;nderece\u011fi de\u011ferin veri tipini belirtir.E\u011fer geriye bir <strong>boolean <\/strong>veri tipine sahip bir de\u011fer d&ouml;nd&uuml;rmek istiyorsan\u0131z bu methodun tipini <strong>int <\/strong>olarak tan\u0131mlayamazs\u0131n\u0131z.Geriye de\u011fer d&ouml;nd&uuml;ren methodlarda her zaman <strong>return <\/strong>ifadesi kullan\u0131lmak zorundad\u0131r.Aksi takdirde program derlenme esnas\u0131nda hata vericektir.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass mainClass {\n public static void main(String args[]) {\n  Rectangle myRectangle = new Rectangle ();\n  Rectangle myRectangle2 = new Rectangle ();\n  double result;\n  myRectangle.width = 5;\n  myRectangle.height = 3;\n  myRectangle.depth = 2;\n  myRectangle2.width = 7;\n  myRectangle2.height = 5;\n  myRectangle2.depth = 4;\n\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle2 i&ccedil;in :  &quot;+myRectangle2.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle i&ccedil;in : &quot;+myRectangle.volume());\n }\n} \nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nDikd&ouml;rtgenin Hacmi&nbsp;myRectangle2 i&ccedil;in : 140 \nDikd&ouml;rtgenin Hacmi&nbsp;myRectangle i&ccedil;in  : 30\n<\/sh>\n\n<p><br \/>\nBu program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda ise &ccedil;\u0131kt\u0131n\u0131n yine ayn\u0131 oldu\u011funu g&ouml;r&uuml;r&uuml;z.E\u011fer referans eden de\u011fi\u015fkenlere bir i\u015flem yapt\u0131rmak istiyorsak bunu o s\u0131n\u0131f i&ccedil;erisinde olu\u015fturup gerekli i\u015flem i&ccedil;in &ccedil;a\u011fr\u0131lmaya haz\u0131r hale getirmeliyiz.Yap\u0131 dinamik olursa e\u011fer bir&ccedil;ok i\u015flemde kullan\u0131labilir hale gelir.<br \/>\n<br \/>\n<strong>Parametreli Methodlar<\/strong><br \/>\n<br \/>\nYukar\u0131da ki programlar parametresiz methodlar\u0131n kullan\u0131m\u0131n\u0131 belirtiyordu.<br \/>\nE\u011fer kodu daha dinamik bir hale getirmek istiyorsak de\u011fi\u015fkenlere sadece s\u0131n\u0131f\u0131n methodu i&ccedil;erisinde de\u011fer vermeliyiz.Bu durum hem g&uuml;venlik a&ccedil;\u0131s\u0131ndan hemde kodun sadeli\u011fi a&ccedil;\u0131s\u0131ndan olduk&ccedil;a &ouml;nemlidir.Daha sonra bu konuya <strong>Sarmalama(Encapsulation) <\/strong>yaz\u0131s\u0131nda &nbsp;ayr\u0131nt\u0131l\u0131 olarak de\u011finece\u011fiz.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n double width;\n double height;\n double depth;\n\n double setValues(double w , double h , double d){\n  width = w;\n  height = h;\n  depth = d;\n }\n\n double volume (){\n  return width * height * depth ;\n }\n}\n<\/sh>\n\n<p><br \/>\nKodumuzu bu \u015fekilde d&uuml;zenledi\u011fimizde art\u0131k her nesne de\u011fi\u015fkeni i&ccedil;in tek tek atama yapmak yerine ayn\u0131 i\u015flemi bir methodda toplad\u0131k.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\nclass mainClass {\n public static void main(String args[]) {\n  Rectangle myRectangle = new Rectangle ();\n  Rectangle myRectangle2 = new Rectangle ();\n  myRectangle.setValues(5,3,2);\n  myRectangle2.setValues(7,5,4);\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle2 i&ccedil;in :  &quot;+myRectangle2.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle i&ccedil;in : &quot;+myRectangle.volume());\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nDikd&ouml;rtgenin Hacmi myRectangle2 i&ccedil;in : 140\nDikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in  : 30\n<\/sh>\n\n<p>Bu program\u0131n &ccedil;\u0131kt\u0131s\u0131 yine ayn\u0131 \u015fekildedir , fakat daha dinamik ve kullan\u0131\u015fl\u0131 bir hale d&ouml;n&uuml;\u015fm&uuml;\u015ft&uuml;r.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1425725563","tags":"java,Javase , Java Methodlar ,Methodlar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---methodlar"},{"id":"113","title":"Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )","content_half":"<p><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-2-methodlar.html\">Java - Methodlar<\/a> adl\u0131 yaz\u0131m\u0131n devam\u0131 olarak bu yaz\u0131 da <strong>Yap\u0131land\u0131r\u0131c\u0131lar(Constractor)<\/strong>&#39;\u0131 anlataca\u011f\u0131m.<\/p>","content_full":"<p><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-2-methodlar.html\">Java - Methodlar<\/a> adl\u0131 yaz\u0131m\u0131n devam\u0131 olarak bu yaz\u0131 da <strong>Yap\u0131land\u0131r\u0131c\u0131lar(Constractor)<\/strong>&#39;\u0131 anlataca\u011f\u0131m.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n&nbsp;double width;\n&nbsp;double height;\n&nbsp;double depth;\n&nbsp;double volume {\n&nbsp; return width * height * depth ;\n&nbsp;}\n&nbsp;void setValues(double w , double h , double d){\n&nbsp; width = w;\n&nbsp; height = h;\n&nbsp; depth = d;\n&nbsp;}\n}\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>Burada kulland\u0131\u011f\u0131m\u0131z <strong>setValues()<\/strong> methodu uygun ve kullan\u0131\u015fl\u0131 g&ouml;z&uuml;kse de , bu i\u015flemleri nesne ilk olu\u015fturuldu\u011funda yapmak daha &ouml;zl&uuml; ve kullan\u0131\u015fl\u0131 bir hale getirecektir.Java&#39;da Yap\u0131land\u0131r\u0131c\u0131lar nesne olu\u015fturulduktan hemen sonra onu ilk kullan\u0131ma haz\u0131r hale getirirler.<\/p>\n\n<p><strong>setValues() <\/strong>methodunu bir yap\u0131land\u0131r\u0131c\u0131 ile de\u011fi\u015ftirelim.<br \/>\n<br \/>\n<strong>Parametresiz Yap\u0131land\u0131r\u0131c\u0131<\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n&nbsp;double width;\n&nbsp;double height;\n&nbsp;double depth;\n&nbsp;double volume {\n&nbsp; return width * height * depth ;\n&nbsp;}\n\n&nbsp;Rectangle(){\n&nbsp; width = 15;\n&nbsp; height = 15;\n&nbsp; depth = 15;\n\n&nbsp;}\n}\n<\/sh>\n\n<p>S\u0131n\u0131f ile ayn\u0131 isme sahip bir method oldu\u011funu g&ouml;r&uuml;yoruz . \u0130\u015fte bu bir yap\u0131land\u0131r\u0131c\u0131 oluyor. Yap\u0131land\u0131r\u0131c\u0131lar her zaman bulundu\u011fu s\u0131n\u0131f ile ayn\u0131 isme sahip olmak zorundad\u0131r.Aksi takdirde bu bir yap\u0131land\u0131r\u0131c\u0131 &ouml;zelli\u011fi ta\u015f\u0131maz. Burada ki<strong> Rectangle()<\/strong> yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131n yapt\u0131\u011f\u0131 i\u015f , olu\u015fturulan nesnelere ilk de\u011fer atamas\u0131 yapmak.Olu\u015fturulan nesnelere varsay\u0131lan de\u011fer olarak de\u011fi\u015fkenlerine 15 de\u011feri atan\u0131yor.<br \/>\n<br \/>\n<strong>Parametreli Yap\u0131land\u0131r\u0131c\u0131<\/strong><br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle{\n&nbsp;double width;\n&nbsp;double height;\n&nbsp;double depth;\n\n&nbsp;double volume(){\n&nbsp; return width * height * depth;\n&nbsp;}\n&nbsp;Rectangle (double w , double h , double d){\n&nbsp; width = w;\n&nbsp; height = h;\n&nbsp; depth = d;\n&nbsp;}\n}\n\nclass mainClass{\n&nbsp;public static void main(string args[]){\n&nbsp; Rectangle myRectangle = new Rectangle(5,3,2);\n&nbsp; Rectangle myRectangle2 = new Rectangle(7,5,4);\n&nbsp; System.out.println(&quot;Dikd&ouml;rtgenin Hacmi &nbsp;myRectangle2 i&ccedil;in : &nbsp;&quot;+myRectangle2.volume());\n&nbsp; System.out.println(&quot;Dikd&ouml;rtgenin Hacmi &nbsp;myRectangle i&ccedil;in : &quot;+myRectangle.volume());\n\n&nbsp;}\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nDikd&ouml;rtgenin Hacmi myRectangle2 i&ccedil;in : 140\nDikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in &nbsp;: 30\n<\/sh>\n\n<p><br \/>\nAyr\u0131 bir <strong>setValues()<\/strong>&nbsp;gibi de\u011fer atamas\u0131n\u0131 yapaca\u011f\u0131m\u0131z methodlara gerek kalmadan yap\u0131land\u0131r\u0131c\u0131 ile kodumuzu daha k\u0131sa bir halde getirdik.<\/p>\n","date":"1449480440","tags":"java ,javase , Constructor , Java Yap\u0131land\u0131r\u0131c\u0131lar ,Yap\u0131land\u0131r\u0131c\u0131lar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---yapilandiricilar-constructors"},{"id":"114","title":"Git\/GitHub  nedir ? Git\/GitHub ile Proje Y\u00f6netimi Nas\u0131l Yap\u0131l\u0131r ?","content_half":"Bu yaz\u0131mda Git ile ilgili kurulum ve gerekli i\u015flemleri nas\u0131l yapabilece\u011fimizi anlataca\u011f\u0131m.<br \/>\n\u00d6ncelikle kurulum i\u00e7in&nbsp;<a href=\"http:\/\/git-scm.com\/downloads\">http:\/\/git-scm.com\/downloads<\/a>&nbsp;bu adresten platformumuza uygun olan kurulum dosyas\u0131n\u0131 indirip , standart next next mant\u0131\u011f\u0131yla program\u0131 kuruyoruz.<b>(Ben \u00f6yle kurdum kuruum ayarlar\u0131n\u0131 de\u011fi\u015ftirmek size kalm\u0131\u015f :) , tabi bir sorun olu\u015fursa sorumlulukta sizde )<\/b><br \/>","content_full":"Bu yaz\u0131mda Git ile ilgili kurulum ve gerekli i\u015flemleri nas\u0131l yapabilece\u011fimizi anlataca\u011f\u0131m.<br \/>\n\u00d6ncelikle kurulum i\u00e7in&nbsp;<a href=\"http:\/\/git-scm.com\/downloads\">http:\/\/git-scm.com\/downloads<\/a>&nbsp;bu adresten platformumuza uygun olan kurulum dosyas\u0131n\u0131 indirip , standart next next mant\u0131\u011f\u0131yla program\u0131 kuruyoruz.<b>(Ben \u00f6yle kurdum kuruum ayarlar\u0131n\u0131 de\u011fi\u015ftirmek size kalm\u0131\u015f :) , tabi bir sorun olu\u015fursa sorumlulukta sizde )<\/b><br \/>\n<br \/>\n<b>1 - Bilgisayardaki projeleri GitHub hesab\u0131m\u0131za y\u00fcklemek :<\/b><br \/>\n<br \/>\nKurulum i\u015flemlerini bitirdiken sonra GitHub hesab\u0131m\u0131za girip proje klas\u00f6r\u00fcm\u00fcz ile ayn\u0131 ada sahip bir repository olu\u015fturuyoruz.<br \/>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/4.bp.blogspot.com\/-H1uW4eh5-PA\/VU4oO8gE76I\/AAAAAAAABl4\/pSqF8EPOt7o\/s1600\/New_2.jpg\" data-lightbox=\"image\" data-title=\"My caption\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/4.bp.blogspot.com\/-H1uW4eh5-PA\/VU4oO8gE76I\/AAAAAAAABl4\/pSqF8EPOt7o\/s1600\/New_2.jpg\" \/><\/a><\/div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/1.bp.blogspot.com\/-wg-grX6-jlA\/VU4sOut7IFI\/AAAAAAAABmY\/QUSOCTD-geE\/s1600\/New_3.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-wg-grX6-jlA\/VU4sOut7IFI\/AAAAAAAABmY\/QUSOCTD-geE\/s1600\/New_3.jpg\" \/><\/a><\/div>\n<br \/>\n<br \/>\nBilgisayar\u0131m\u0131zda bulunan bir projeyi GitHub hesab\u0131m\u0131za y\u00fcklemek i\u00e7in projemizin klasor\u00fcne sa\u011f t\u0131klay\u0131p \"Git Bash\"'i \u00e7al\u0131\u015ft\u0131r\u0131yoruz :<br \/>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/2.bp.blogspot.com\/-azgIDuILs-E\/VU4oW-lgRmI\/AAAAAAAABmA\/YsaFCJlxiFI\/s1600\/New_1.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-azgIDuILs-E\/VU4oW-lgRmI\/AAAAAAAABmA\/YsaFCJlxiFI\/s1600\/New_1.jpg\" \/><\/a><\/div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<\/div>\nGit'in Komut \u0130stemcisi geliyor ekran\u0131m\u0131za.<br \/>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/2.bp.blogspot.com\/-jYVCWCeziwA\/VU4p9F8cSpI\/AAAAAAAABmM\/HI4uT9Dfmek\/s1600\/New_5.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-jYVCWCeziwA\/VU4p9F8cSpI\/AAAAAAAABmM\/HI4uT9Dfmek\/s1600\/New_5.jpg\" \/><\/a><\/div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<br \/><\/div>\nBuraya aynen \u015fu komutlar\u0131 uyguluyoruz.<br \/>\n<sh class=\"brush: java\"> git init\n\ngit add --all\n\ngit commit -m \"Buras\u0131 yorum b\u00f6l\u00fcm\u00fc\"\n\ngit remote add origin &lt; Repository'inizin https ya da ssh adresi &gt;\n\ngit push origin master\n<\/sh>\n<br \/>\nBu komutlar\u0131 \u00e7al\u0131\u015ft\u0131rd\u0131ktan sonra sizden kullan\u0131c\u0131 ad\u0131 ve parola isteyecektir,bilgileri do\u011fru girdi\u011finiz takdirde dosyalar\u0131n\u0131z ba\u015far\u0131l\u0131 bir \u015fekilde GitHub hesab\u0131n\u0131za y\u00fcklenmi\u015f olur.<br \/>\n<br \/>\n\u00d6rnek olarak ben bir proje ekledim.<br \/>\n<br \/>\n<sh class=\"brush: java\">git init\n\ngit add --all\n\ngit commit -m \"This is my little commit\"\n\ngit remote add origin https:\/\/github.com\/kustemura\/StudentInformationSystem.git \n\ngit push origin master\n<\/sh>\n<br \/>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/1.bp.blogspot.com\/-OCowI8FfvV0\/VU4tDad-NzI\/AAAAAAAABmg\/pOQLUJzHW_w\/s1600\/New_4.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/1.bp.blogspot.com\/-OCowI8FfvV0\/VU4tDad-NzI\/AAAAAAAABmg\/pOQLUJzHW_w\/s1600\/New_4.jpg\" \/><\/a><\/div>\n<br \/>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http:\/\/2.bp.blogspot.com\/-cbWB9EHTnVM\/VU4tNN1fwNI\/AAAAAAAABmo\/Ct3Sao_2ZPU\/s1600\/New_6.jpg\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-cbWB9EHTnVM\/VU4tNN1fwNI\/AAAAAAAABmo\/Ct3Sao_2ZPU\/s1600\/New_6.jpg\" \/><\/a><\/div>","date":"1431168763","tags":"git , github , git ile proje , git ile , github ile proje , gihub ile , git ile proje y\u00f6netimi , git ile proje yonetimi , github ile proje yonetimi , git kullan\u0131m\u0131 , github kullan\u0131m\u0131 , git nedir , github nedir","link":"git-github-nedir-git-github-ile-proje-yonetimi-nasil-yapilir"},{"id":"115","title":"Apache Tomcat Kurulumu ve Eclipse Entregrasyonu","content_half":"<p>Bu yaz\u0131mda <strong>Apache Tomcat <\/strong>Kurulumunu yapaca\u011f\u0131z , ard\u0131ndan kurulumu ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015ftirdikden sonra<strong> Eclipse IDE<\/strong>&#39;ye entegrasyonunu yap\u0131p &ccedil;al\u0131\u015ft\u0131raca\u011f\u0131z. &Ouml;ncelikle bu&nbsp;<a href=\"https:\/\/www.blogger.com\/%3Ca%20href=%22http:\/\/tomcat.apache.org\/%22%3E%3C\/a%3E\">ba\u011f","content_full":"<p>Bu yaz\u0131mda <strong>Apache Tomcat <\/strong>Kurulumunu yapaca\u011f\u0131z , ard\u0131ndan kurulumu ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015ftirdikden sonra<strong> Eclipse IDE<\/strong>&#39;ye entegrasyonunu yap\u0131p &ccedil;al\u0131\u015ft\u0131raca\u011f\u0131z. &Ouml;ncelikle bu&nbsp;<a href=\"https:\/\/www.blogger.com\/%3Ca%20href=%22http:\/\/tomcat.apache.org\/%22%3E%3C\/a%3E\">ba\u011flant\u0131<\/a>dan<strong>&nbsp;Apache Tomcat<\/strong>&#39;in &nbsp;kurulmas\u0131n\u0131 istedi\u011fimiz s&uuml;r&uuml;m&uuml;n&uuml; indiriyoruz , ben bu yaz\u0131mda <strong>Tomcat 7<\/strong> kurulumunu yapaca\u011f\u0131m.<br \/>\n<a href=\"http:\/\/4.bp.blogspot.com\/-DFJRljj_g50\/VU6KqTGzVAI\/AAAAAAAABn4\/g4E-KS7BqKE\/s1600\/apache-tomcat.jpg\"><img src=\"http:\/\/4.bp.blogspot.com\/-DFJRljj_g50\/VU6KqTGzVAI\/AAAAAAAABn4\/g4E-KS7BqKE\/s1600\/apache-tomcat.jpg\" \/><\/a><br \/>\n1 - .zip dosyas\u0131n\u0131 indirip.Bilgisayar\u0131m\u0131zda herhangi bir s&uuml;r&uuml;c&uuml; i&ccedil;erisine ta\u015f\u0131mak. <strong>&Ouml;rne\u011fin : ( C:\\tomcat_7 )<\/strong><br \/>\n<br \/>\n2 - Ard\u0131ndan <strong>Komut \u0130stemcisini y&ouml;netici <\/strong>olarak &ccedil;al\u0131\u015f\u0131r\u0131p \u015fu komutlar\u0131 &ccedil;al\u0131\u015ft\u0131rmam\u0131z gerekli.<strong>( Bunu bir .txt dosyas\u0131 olu\u015fturup daha sonra .bat uzant\u0131l\u0131 olarak komutlar\u0131 kaydedip &ccedil;al\u0131\u015ft\u0131rabilirsiniz,ben komut olarak tek tek &ccedil;al\u0131\u015ft\u0131rmay\u0131 seviyorum. se&ccedil;im sizin :) )<\/strong><br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: sql\">\nset PATH= &lt; JDK&#39;n\u0131n bulundu\u011fu dosya konumu &gt; &nbsp;\\bin;%PATH%\nset JAVA_HOME= &lt; JDK&#39;n\u0131n bulundu\u011fu dosya konumu &nbsp;&gt;\nset CATALINA= &lt; Tomcat&#39;in bulundu\u011fu dosya konumu &gt;\n<\/sh>\n\n<p>&Ouml;rnek olarak Ortam De\u011fi\u015fkenlerini ayarlayay\u0131m ve Catalina Classpath Ayarlar\u0131 Servlet olsun.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: sql\">\nset PATH=C:\\Program Files\\Java\\jdk1.8.0_25\\bin;%PATH%\nset JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_25\nset CATALINA=C:\\Tomcat_7\nset CLASSPATH=%CATALINA%\\common\\lib\\servlet-api.jar;%CLASSPATH%\n<\/sh>\n\n<p>\u015eimdi Eclipse Entegrasyonuna ge&ccedil;elim.<br \/>\n<br \/>\n3 - Eclipse&#39;te bir Web Uygulamas\u0131 a&ccedil;t\u0131\u011f\u0131m\u0131z zaman alt b&ouml;l&uuml;mlerdeki <strong>&quot;Servers&quot; <\/strong>k\u0131sm\u0131na t\u0131kl\u0131yoruz.<br \/>\nArd\u0131ndan olu\u015fturdu\u011fumuz projeler &uuml;zerinden bu ad\u0131mlar\u0131 s\u0131rayla ger&ccedil;ekle\u015ftiriyoruz.<br \/>\n&nbsp;<\/p>\n\n<p><a href=\"http:\/\/1.bp.blogspot.com\/-hSbMx7_-ad4\/VU6Rm67_snI\/AAAAAAAABoI\/a6keuBrl2Dw\/s1600\/1.jpg\"><img src=\"http:\/\/1.bp.blogspot.com\/-hSbMx7_-ad4\/VU6Rm67_snI\/AAAAAAAABoI\/a6keuBrl2Dw\/s1600\/1.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-kFmKLm6BGLA\/VU6RokNkuKI\/AAAAAAAABoU\/U704HYeB4Q4\/s1600\/2.jpg\"><img src=\"http:\/\/3.bp.blogspot.com\/-kFmKLm6BGLA\/VU6RokNkuKI\/AAAAAAAABoU\/U704HYeB4Q4\/s1600\/2.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/2.bp.blogspot.com\/-43rLQmr9zO4\/VU6RonJ5_zI\/AAAAAAAABoQ\/FxyNk32DvTU\/s1600\/3.jpg\"><img src=\"http:\/\/2.bp.blogspot.com\/-43rLQmr9zO4\/VU6RonJ5_zI\/AAAAAAAABoQ\/FxyNk32DvTU\/s1600\/3.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-ONG-vDaCdHo\/VU6RopfQbHI\/AAAAAAAABow\/9WGRqqBRSxU\/s1600\/4.jpg\"><img src=\"http:\/\/4.bp.blogspot.com\/-ONG-vDaCdHo\/VU6RopfQbHI\/AAAAAAAABow\/9WGRqqBRSxU\/s1600\/4.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-EOMBssjzFC4\/VU6RpXMDkiI\/AAAAAAAABok\/qQbe9S1tgA0\/s1600\/5.jpg\"><img src=\"http:\/\/3.bp.blogspot.com\/-EOMBssjzFC4\/VU6RpXMDkiI\/AAAAAAAABok\/qQbe9S1tgA0\/s1600\/5.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-3gm1Zkzwap8\/VU6RplJVheI\/AAAAAAAABoc\/M1cG0OLeSws\/s1600\/6.bmp\"><img src=\"http:\/\/4.bp.blogspot.com\/-3gm1Zkzwap8\/VU6RplJVheI\/AAAAAAAABoc\/M1cG0OLeSws\/s1600\/6.bmp\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n","date":"1431255163","tags":"tomcat,apache tomcat , tomcat eclipse , tomcat ayarlar\u0131 , tomcat ayar eclipse , tomcat kurulum , eclipse kurulum, tomcat eclipse entegrasyon","link":"apache-tomcat-kurulumu-ve-eclipse-entregrasyonu"},{"id":"116","title":"Java - Kal\u0131t\u0131m","content_half":"<p>Bu yaz\u0131ma bir &ouml;nceki yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m &ouml;rnek &uuml;zerinden devam ediyorum.<br \/>\n<a href=\"http:\/\/kustemura.blogspot.com.tr\/search\/label\/Java\">Bir &ouml;nceki yaz\u0131lar\u0131ma buradan ula\u015fabilirsiniz<\/a>.E\u011fer bir &ouml;nceki konularla ilgili bilginiz k\u0131s\u0131tl\u0131 ise bu konuyu okumadan &ouml;nce onlar\u0131 okumakta fayda var.<br ","content_full":"<p>Bu yaz\u0131ma bir &ouml;nceki yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m &ouml;rnek &uuml;zerinden devam ediyorum.<br \/>\n<a href=\"http:\/\/kustemura.blogspot.com.tr\/search\/label\/Java\">Bir &ouml;nceki yaz\u0131lar\u0131ma buradan ula\u015fabilirsiniz<\/a>.E\u011fer bir &ouml;nceki konularla ilgili bilginiz k\u0131s\u0131tl\u0131 ise bu konuyu okumadan &ouml;nce onlar\u0131 okumakta fayda var.<br \/>\nKal\u0131t\u0131m , Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n en &ouml;nemli &ouml;zelliklerinden biridir.<br \/>\nKal\u0131t\u0131m\u0131 kullanarak olu\u015fturudu\u011funuz alt s\u0131n\u0131flar\u0131n gizli olmayan &ouml;rnek de\u011fi\u015fkenlerine ve metodlar\u0131na eri\u015febilirsiniz.<br \/>\nJava&#39;da olu\u015fturdu\u011funuz herhangi bir s\u0131n\u0131f i&ccedil;in yaln\u0131zca bir &uuml;st s\u0131n\u0131f belirtebilirsiniz , &ccedil;&uuml;nk&uuml; bir alt s\u0131n\u0131f\u0131n birden fazla t&uuml;retilmesini Java desteklemez.A\u015fa\u011f\u0131da Anne&#39;den t&uuml;reyen &Ccedil;ocuk &ouml;rne\u011fi verilmektedir.<br \/>\nOlu\u015fturdu\u011funuz &uuml;st s\u0131n\u0131flardan t&uuml;reyen alt s\u0131n\u0131flara kendilerine has &ouml;zellikler ekleyerek , bir &uuml;st s\u0131n\u0131f\u0131n &ouml;zelliklerini devredebilirsiniz.<br \/>\n<br \/>\nJava&#39;da kat\u0131l\u0131m yoluyla al\u0131nan s\u0131n\u0131fa <strong>&uuml;st s\u0131n\u0131f (superclass) ( t&uuml;reten )<\/strong> , kal\u0131t\u0131m\u0131 alan <strong>( t&uuml;retilen )<\/strong> s\u0131n\u0131fa ise alt s\u0131n\u0131f<strong> ( subclass) <\/strong>ad\u0131 verilir.Bu y&uuml;zden alt s\u0131n\u0131f, &uuml;st s\u0131n\u0131f\u0131n daha &ouml;zelle\u015fmi\u015f bir halidir.<br \/>\n<br \/>\nBir s\u0131n\u0131ftan kal\u0131t\u0131m t&uuml;retmek i&ccedil;in Java&#39;da <strong>extends <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; kullan\u0131l\u0131r.<br \/>\nA\u015fa\u011f\u0131daki program <strong>Mother<\/strong> ad\u0131nda bir &uuml;st s\u0131n\u0131f ve <strong>Child<\/strong> ad\u0131nda bir alt s\u0131n\u0131f olu\u015fturur.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Mother {\n String hairColor = &quot;Siyah&quot;;\n\n void theCharacteristicsOfMother() {\n  System.out.println(&quot;Mother : \\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor);\n }\n}\n\nclass Child extends Mother {\n String eye = &quot;Mavi&quot;;\n\n void theCharacteristicsOfChild() {\n  System.out.println(&quot;Child :  \\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor\n    + &quot; \\n &quot; + &quot; G&ouml;z Rengi : &quot; + eye);\n }\n}\n\nclass SimpleInheritance {\n public static void main(String[] args) {\n  final Mother rose = new Mother();\n  final Child jack = new Child();\n  jack.theCharacteristicsOfMother();\n  jack.theCharacteristicsOfChild();\n }\n\n}\n\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nMother : \n  Sa&ccedil; Rengi : Siyah\nChild :  \n  Sa&ccedil; Rengi : Siyah \n  G&ouml;z Rengi : Mavi\n<\/sh>\n\n<p>Burada , Child alt s\u0131n\u0131f\u0131 , &uuml;st s\u0131n\u0131f\u0131 olan Mother s\u0131n\u0131f\u0131n\u0131n t&uuml;m &uuml;yelerini i&ccedil;erir.Bu y&uuml;zden jack hairColor &ouml;rnek de\u011fi\u015fkenine eri\u015febilir ve theCharacteristicsOfMother methodunu &ccedil;a\u011f\u0131rabilir.Yani burada jack sa&ccedil; rengini annesinden alm\u0131\u015ft\u0131r , fakat g&ouml;z rengi kendine has bir &ouml;zelliktir.Mother , Child i&ccedil;in bir &uuml;st s\u0131n\u0131f olmas\u0131na ra\u011fmen tamamen ba\u011f\u0131ms\u0131z bir s\u0131n\u0131ft\u0131r. &Uuml;st s\u0131n\u0131ftan kal\u0131t\u0131m\u0131 devralan bir alt s\u0131n\u0131f deklerasyonu \u015fu \u015fekilde olmal\u0131d\u0131r :<\/p>\n\n<sh class=\"brush: java\">\n \nclass alt-sinif-adi extends ust-sinif-adi{\n \/\/S\u0131n\u0131f\u0131n G&ouml;vdesi\n}\n<\/sh>\n\n<p>Kal\u0131t\u0131m&#39;da &Uuml;ye Eri\u015fimi Bir alt s\u0131n\u0131f , &uuml;st s\u0131n\u0131f\u0131n t&uuml;m &uuml;yelerini i&ccedil;ermesine ra\u011fmen <strong>private <\/strong>olarak tan\u0131ml\u0131 olan hi&ccedil;bir &uuml;yesine eri\u015femez.<br \/>\n&Ouml;rne\u011fimiz &uuml;zerinden devam edelim.<\/p>\n\n<sh>\nclass Mother {\n String hairColor = &quot;Siyah&quot;;\n private final String gender = &quot;Kad\u0131n&quot;;\n\n void theCharacteristicsOfMother() {\n  System.out.println(&quot;Mother : \\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor\n    + &quot; Cinsiyet : &quot; + gender);\n }\n}\n\nclass Child extends Mother {\n String eye = &quot;Mavi&quot;;\n\n void theCharacteristicsOfChild() {\n  System.out.println(&quot;Child :  \\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor\n    + &quot; \\n &quot; + &quot; G&ouml;z Rengi : &quot; + eye + &quot; Cinsiyet : &quot; + gender); \n  \/\/ Burada gender &ouml;rnek de\u011fi\u015fkenine eri\u015felemez ,\n        \/\/  program derlenmeden sonlan\u0131r.\n }\n}\n\nclass SimpleInheritance {\n public static void main(String[] args) {\n  final Mother rose = new Mother();\n  final Child jack = new Child();\n  jack.theCharacteristicsOfMother();\n  jack.theCharacteristicsOfChild();\n\n }\n\n}\n\n<\/sh>\n\n<p>Daha iyi bir &ouml;rnekle anlatmaya &ccedil;al\u0131\u015faca\u011f\u0131m,&ouml;nceki derslerde Rectangle s\u0131n\u0131f\u0131 &uuml;zerinden &ouml;rnekler vermi\u015ftir , ayn\u0131 s\u0131n\u0131f ve yap\u0131 &uuml;zerinden &ouml;rneklerimize devam edelim. Box s\u0131n\u0131f\u0131n\u0131 geni\u015fleterek yeni bir &ouml;zellik daha ekliyoruz , 3 &ouml;zelli\u011fimiz vard\u0131(width , height , depth) eklenen &ouml;zellik weight olsun .Bu \u015fekilde dikd&ouml;rtgenimizin geni\u015fli\u011fi,y&uuml;ksekli\u011fi,derinli\u011fi ve a\u011f\u0131rl\u0131\u011f\u0131 oldu.<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle {\n double width;\n double height;\n double depth;\n\n Rectangle(Rectangle clone) {\n  width = clone.width;\n  height = clone.height;\n  depth = clone.depth;\n }\n\n Rectangle(double width, double height, double depth) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n }\n\n Rectangle() {\n  width = -1;\n  height = -1;\n  depth = -1;\n }\n\n double volume() {\n  return width * height * depth;\n }\n\n}\n\nclass RectangleWeight extends Rectangle {\n double weight;\n\n RectangleWeight(RectangleWeight clone) {\n  width = clone.width;\n  height = clone.height;\n  depth = clone.depth;\n  weight = clone.weight;\n }\n\n RectangleWeight(double width, double height, double depth, double w) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n  weight = w;\n\n }\n\n RectangleWeight() {\n  width = -1;\n  height = -1;\n  depth = -1;\n  weight = -1;\n }\n\n}\n\nclass DemoRectangleWeight {\n public static void main(String[] args) {\n  final RectangleWeight myRectangle = new RectangleWeight(5, 10, 15, 25);\n  final RectangleWeight myRectangle2 = new RectangleWeight(myRectangle);\n\n  System.out.println(&quot;(myRectangle i&ccedil;in)\\nDikd&ouml;rtgenin Hacmi :  &quot;\n    + myRectangle.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle.weight);\n  System.out.println();\n  System.out.println(&quot;(myRectangle2 i&ccedil;in)\\nDikd&ouml;rtgenin Hacmi  : &quot;\n    + myRectangle2.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle2.weight);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \n(myRectangle i&ccedil;in)\nDikd&ouml;rtgenin Hacmi :  750.0\nDikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0\n\n(myRectangle2 i&ccedil;in)\nDikd&ouml;rtgenin Hacmi  : 750.0\nDikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0\n\n\n<\/sh>\n\n<p>Burada RectangleWeight , Rectangle s\u0131n\u0131f\u0131n\u0131n &ouml;zelliklerini kal\u0131t\u0131m yoluyla devral\u0131r ve onlara weight &ouml;zelli\u011finide ekler.Bir kez daha geni\u015fletelim.<\/p>\n\n<sh class=\"brush: java\">\nclass ColorRectangle extends Rectangle {\n  String color;\n\n ColorRectangle(double width,double height,double depth,String c){\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n  color = c;\n\n }\n}\n<\/sh>\n\n<p>Burada ise Rectangle s\u0131n\u0131f\u0131n\u0131m\u0131z\u0131 geni\u015fletip bir renk &ouml;zelli\u011fi verdik.<\/p>\n","date":"1431255163","tags":"java,javase , java kal\u0131t\u0131m , java extends , java kal\u0131t\u0131m nedir , java extends nedir , extends nedir , kal\u0131t\u0131m nedir , java ile kal\u0131t\u0131m nas\u0131l yap\u0131l\u0131r , java kal\u0131t\u0131m yapma","link":"java---kalitim"},{"id":"117","title":"this Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"<p>Bu yaz\u0131mda this anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m , bu konuyu daha iyi anlamak i&ccedil;in bir &ouml;nceki yaz\u0131m&nbsp;<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-3-yaplandrclar.html\">Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )<\/a>&nbsp;konusuna bakmakta fayda var.<br \/>\r\n&nbsp;<\/p>\r\n\r\n<pre","content_full":"<p>Bu yaz\u0131mda this anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m , bu konuyu daha iyi anlamak i&ccedil;in bir &ouml;nceki yaz\u0131m&nbsp;<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-3-yaplandrclar.html\">Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )<\/a>&nbsp;konusuna bakmakta fayda var.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nclass Rectangle {\n double width;\n double height;\n double depth;\n\n Rectangle(final double w, final double h, final double d) {\n  width = w;\n  height = h;\n  depth = d;\n }\n Rectangle(double w,double h){\n  width = w;\n  height = h;\n }\n\n Rectangle() {\n  width = -1;\n  height = -1;\n  depth = -1;\n }\n\n double volume() {\n  return width * height * depth;\n }\n}\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p>Bir &ouml;nceki &ouml;rnekde parametreli yap\u0131land\u0131r\u0131c\u0131m\u0131z\u0131 tan\u0131mlarken parametre isimlerini&nbsp;<strong>w , h , d<\/strong>&nbsp;olarak tan\u0131mlam\u0131\u015ft\u0131k.Farkl\u0131 isimlerde tan\u0131mlamam\u0131z\u0131n sebebi s\u0131n\u0131f\u0131n de\u011fi\u015fkenleri ile ayn\u0131 isme sahip olmamas\u0131ndan kaynaklan\u0131r.&nbsp;<strong>this&nbsp;<\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; ile s\u0131n\u0131f\u0131n de\u011fi\u015fkenlerini referans edip ayn\u0131 ismi verebiliriz.Bunu bir &ouml;rnekle inceleyelim ;<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nclass Rectangle {\n double width;\n double height;\n double depth;\n\n Rectangle(final double width, final double height, final double depth) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n }\n \n Rectangle(double width,double height){\n  this.width=width;\n  this.height=height;\n }\n \n Rectangle() {\n  width = -1;\n  height = -1;\n  depth = -1;\n }\n\n double volume() {\n  return width * height * depth;\n }\n}\n<\/sh>\n\n<p><br \/>\nBurada ki&nbsp;<strong>this.<\/strong>&nbsp;ile ba\u015flayan de\u011fi\u015fkenlerin hepsi asl\u0131nda s\u0131n\u0131f\u0131n de\u011fi\u015fkenlerini referans etmektedir.Daha sonra koda bakt\u0131\u011f\u0131m\u0131zda anla\u015f\u0131labilirli\u011fi artt\u0131rmak i&ccedil;in bu y&ouml;ntem kullan\u0131labilir.<br \/>\n<br \/>\n<em><strong>this&#39;in Di\u011fer Kullan\u0131m\u0131<\/strong><\/em><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nthis(arg&uuml;man listesi);<\/sh>\n\n<p><br \/>\nBurada arg&uuml;man listesine kar\u015f\u0131l\u0131k gelen yap\u0131land\u0131r\u0131c\u0131 &ccedil;a\u011fr\u0131l\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nclass Rectangle {\n double width;\n double height;\n double depth;\n\n Rectangle(final double width, final double height) {\n  this.width = width;\n  this.height = height;\n }\n\n Rectangle(final double width, final double height, final double depth) {\n  this(width, height);\n  this.depth = depth;\n }\n\n Rectangle() {\n  this(-1, -1, -1);\n }\n\n double volume() {\n  return width * height * depth;\n }\n}\n<\/sh>\n\n<p>Bu programda bir &ouml;nceki program ile ayn\u0131 i\u015flemi yapar.&Uuml;&ccedil; parametreli <strong>constructor <\/strong>&ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda iki parametreli <strong>constructor&#39;e <\/strong>g&ouml;ndermede bulunur.<br \/>\n<br \/>\n<strong>1 - Ayn\u0131 anda hem this() hemde super() kullan\u0131lamaz.<\/strong><br \/>\n<strong>2 - Yap\u0131land\u0131r\u0131c\u0131ya ait herhangi bir de\u011fi\u015fken kullan\u0131lamaz.<\/strong><\/p>\n\n<p>&nbsp;<\/p>\n","date":"1431427963","tags":"java,javase, this , c# this , this kullan\u0131m\u0131 , this nedir , this programlama , this ne i\u015fe yarar , javada this","link":"this-anahtar-sozcugu"},{"id":"118","title":"super Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"<p>Bir &ouml;nceki &nbsp;<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-ile-oop-4-kaltm.html\">Java - Kal\u0131t\u0131m<\/a>&nbsp;adl\u0131 yaz\u0131mdan kald\u0131\u011f\u0131m yerden devam ediyorum.<br \/>\n&Ouml;nceki konularda kulland\u0131\u011f\u0131m\u0131z &ouml;rnekler bu yaz\u0131mda da devam etmektedir.<br \/>\n<br \/>\n&Ouml;rne\u011fin , ","content_full":"<p>Bir &ouml;nceki &nbsp;<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-ile-oop-4-kaltm.html\">Java - Kal\u0131t\u0131m<\/a>&nbsp;adl\u0131 yaz\u0131mdan kald\u0131\u011f\u0131m yerden devam ediyorum.<br \/>\n&Ouml;nceki konularda kulland\u0131\u011f\u0131m\u0131z &ouml;rnekler bu yaz\u0131mda da devam etmektedir.<br \/>\n<br \/>\n&Ouml;rne\u011fin , <strong>RectangleWeight&#39;in&nbsp;(<\/strong>subclasss) yap\u0131land\u0131r\u0131c\u0131s\u0131 , <strong>Rectangle <\/strong>( superclass )&#39;\u0131n <strong>width,height ve depth<\/strong> alanlar\u0131na a&ccedil;\u0131kca de\u011fer atamas\u0131 yapabilir.Bu i\u015flem yaln\u0131zca &uuml;st s\u0131n\u0131ftan kodu kopyalay\u0131p verimi azaltmaz , ayn\u0131 zamanda bir alt s\u0131n\u0131f\u0131n &uuml;yelere eri\u015fimini de sa\u011flar.<br \/>\n&Uuml;st s\u0131n\u0131f\u0131n alanlar\u0131n\u0131 kapatmak isteyece\u011fimiz ( yani , veri &uuml;yelerini <strong>private <\/strong>olarak korumak) zamanlar olucakt\u0131r. Bu durumda bir &ouml;nceki &ouml;rneklerde kulland\u0131\u011f\u0131m\u0131z yap\u0131y\u0131 kullanamay\u0131z.Bu y&ouml;ntem ise&nbsp;<strong>Sarmalama <\/strong>olarak adland\u0131r\u0131l\u0131r.Nesneye y&ouml;nelimli programlaman\u0131n birincil &ouml;zellikli\u011fidir.<br \/>\nBir alt s\u0131n\u0131f\u0131n , &uuml;st s\u0131n\u0131f\u0131na g&ouml;ndermede bulunmas\u0131 gerekirse bunu <strong>super <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak yapmal\u0131y\u0131z.<br \/>\n<strong>super <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n iki genel formu vard\u0131r,Birincisi &nbsp;, &uuml;st s\u0131n\u0131f\u0131n yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131 &ccedil;a\u011f\u0131r\u0131r.\u0130kincisi ise bir &uuml;st s\u0131n\u0131f\u0131n,bir alt s\u0131n\u0131f &uuml;yesi taraf\u0131ndan gizlenen bir &uuml;yesine eri\u015fmek i&ccedil;in kullan\u0131l\u0131r.<br \/>\n<br \/>\n<strong>1 - &Uuml;st S\u0131n\u0131f Yap\u0131land\u0131r\u0131c\u0131lar\u0131n\u0131 &Ccedil;a\u011f\u0131rmak \u0130&ccedil;in super Kullanmak<\/strong><br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle {\n private final double width;\n private final double height;\n private final double depth;\n\n Rectangle(Rectangle clone) {\n  width = clone.width;\n  height = clone.height;\n  depth = clone.depth;\n }\n\n Rectangle(double width, double height, double depth) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n }\n\n Rectangle() {\n  width = -1;\n  height = -1;\n  depth = -1;\n }\n\n double volume() {\n  return width * height * depth;\n }\n\n}\n\nclass RectangleWeight extends Rectangle {\n double weight;\n\n RectangleWeight(RectangleWeight clone) {\n  super(clone);\n  weight = clone.weight;\n }\n\n RectangleWeight(double width, double height, double depth, double weight) {\n  super(width, height, depth);\n  this.weight = weight;\n\n }\n\n RectangleWeight() {\n  super();\n  weight = -1;\n }\n\n}\n\nclass DemoRectangleWeight {\n public static void main(String[] args) {\n  final RectangleWeight myRectangle = new RectangleWeight(5, 10, 15, 25);\n  final RectangleWeight myRectangle2 = new RectangleWeight(myRectangle);\n\n  System.out.println(&quot;(myRectangle i&ccedil;in)\\nDikd&ouml;rtgenin Hacmi :  &quot;\n    + myRectangle.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle.weight);\n  System.out.println();\n  System.out.println(&quot;(myRectangle2 i&ccedil;in)\\nDikd&ouml;rtgenin Hacmi  : &quot;\n    + myRectangle2.volume());\n  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle2.weight);\n }\n}\n(myRectangle i&ccedil;in)\nDikd&ouml;rtgenin Hacmi :  750.0\nDikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0\n\n(myRectangle2 i&ccedil;in)\nDikd&ouml;rtgenin Hacmi  : 750.0\nDikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0\n\n<\/sh>\n\n<p>Bu program\u0131n &ccedil;\u0131kt\u0131s\u0131 da bir &ouml;nceki yaz\u0131mda yazd\u0131\u011f\u0131m program ile ayn\u0131d\u0131r.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nRectangleWeight(double width, double height, double depth, double w) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n  weight = w;\n \n }<\/sh>\n\n<p>Yani bu program ile ,<\/p>\n\n<sh class=\"brush: java\">\nRectangleWeight(double width, double height, double depth, double w) {\n  super(width, height, depth);\n  weight = w;\n\n }\n<\/sh>\n\n<p>bu program\u0131n yapt\u0131\u011f\u0131 i\u015f ayn\u0131d\u0131r.Fakat ikinci program hem verimlili\u011fi artt\u0131r\u0131r , tekrarlamay\u0131 &ouml;nler ve ayr\u0131ca <strong>Sarmalama <\/strong>&ouml;zelli\u011fini birebir uygular.<br \/>\n<br \/>\n<strong>2 - super&#39;in \u0130kinci Bir Kullan\u0131m\u0131<\/strong><br \/>\n<br \/>\nsuper&#39;in ikinci kullan\u0131m\u0131 bir a&ccedil;\u0131dan <strong>this <\/strong>gibidir.Tek fark\u0131,her zaman , kullan\u0131ld\u0131\u011f\u0131 alt s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131na g&ouml;ndermede bulunuyor olmas\u0131d\u0131r.<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nsuper.uye\n<\/sh>\n\n<p>Burada ki uye , ya bir method ya da bir &ouml;rnek de\u011fi\u015fkendir. super&#39;in bu ikinci kullan\u0131m\u0131 , bir alt s\u0131n\u0131f\u0131n &uuml;ye adlar\u0131n\u0131n , &uuml;st s\u0131n\u0131f i&ccedil;inde ki ayn\u0131 adl\u0131 &uuml;yeler ile gizlendi\u011fi durumlarda &ccedil;ok s\u0131k g&ouml;r&uuml;l&uuml;r.Bunu bir &ouml;rnek ile inceleyelim.<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n int i;\n}\n\nclass B extends A {\n int i;\n\n B(int a, int b) {\n  super.i = a;\n  i = b;\n }\n\n void show() {\n  System.out.println(&quot; Superclass i = &quot; + super.i);\n  System.out.println(&quot; Subclass i = &quot; + i);\n }\n}\n\nclass useSuper {\n public static void main(String[] args) {\n  final B subClone = new B(1, 2);\n\n  subClone.show();\n }\n}\n Superclass i = 1\n Subclass i = 2\n\n<\/sh>\n\n<p><strong>B<\/strong>&#39;deki <strong>i<\/strong> &ouml;rnek de\u011fi\u015fkeni <strong>A<\/strong>&#39;dakini gizlemesine ra\u011fmen <strong>super<\/strong> , &uuml;st s\u0131n\u0131f i&ccedil;erisinde tan\u0131mlanan <strong>i<\/strong>&#39;ye eri\u015fime izin verir.G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi <strong>super <\/strong>, ayr\u0131ca alt s\u0131n\u0131f taraf\u0131ndan gizlenen methodlar\u0131 &ccedil;a\u011f\u0131rmak i&ccedil;in de kullan\u0131labilir.<\/p>\n","date":"1431427963","tags":"java,javase,super , java super , java super kullan\u0131m\u0131 , java super nedir , java super nasil calisir , java super kullanmak","link":"super-anahtar-sozcugu"},{"id":"119","title":"Java - Kal\u0131t\u0131m #2  \u00c7ok D\u00fczeyli Bir Hiyerar\u015fi Olu\u015fturmak","content_half":"<p>Bir &ouml;nceki yaz\u0131lar\u0131mda kal\u0131t\u0131m ile ilgili , bir &uuml;st s\u0131n\u0131f birde alt s\u0131n\u0131f olu\u015fturmu\u015ftuk.Bu yap\u0131y\u0131 istedi\u011finiz kadar kal\u0131t\u0131m katman\u0131 i&ccedil;eren bir hiyerar\u015fi olu\u015fturabilirsiniz.Olu\u015fturulmu\u015f bir alt s\u0131n\u0131f\u0131n &nbsp;( subclass) ba\u015fka bir s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131 olabilece\u011finden &ouml;nceki yaz\u0131lar\u0131mda bahs","content_full":"<p>Bir &ouml;nceki yaz\u0131lar\u0131mda kal\u0131t\u0131m ile ilgili , bir &uuml;st s\u0131n\u0131f birde alt s\u0131n\u0131f olu\u015fturmu\u015ftuk.Bu yap\u0131y\u0131 istedi\u011finiz kadar kal\u0131t\u0131m katman\u0131 i&ccedil;eren bir hiyerar\u015fi olu\u015fturabilirsiniz.Olu\u015fturulmu\u015f bir alt s\u0131n\u0131f\u0131n &nbsp;( subclass) ba\u015fka bir s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131 olabilece\u011finden &ouml;nceki yaz\u0131lar\u0131mda bahsetmi\u015ftim.<br \/>\n\u015eimdi &ouml;rne\u011fimize kald\u0131\u011f\u0131m\u0131z yerden devam edelim ve bu &ouml;rne\u011fe yeni bir s\u0131n\u0131f ekleyelim.<strong>Dikd&ouml;rtgen<\/strong> &ouml;rne\u011finde <strong>Dikd&ouml;rtgene A\u011f\u0131rl\u0131k <\/strong>&ouml;zelli\u011fi vermi\u015ftik , \u015fimdi size bir <strong>Nakliye <\/strong>&ouml;zelli\u011fi ekleyelim ve bu <strong>Dikd&ouml;rtgenimizin <\/strong>bir &uuml;r&uuml;n veya mal oldu\u011funu d&uuml;\u015f&uuml;nelim.<br \/>\n&quot;<strong>Shipment<\/strong>&quot; ad\u0131nda bir s\u0131n\u0131f ekliyorum.<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle {\n private final double width;\n private final double height;\n private final double depth;\n\n Rectangle(Rectangle clone) {\n  width = clone.width;\n  height = clone.height;\n  depth = clone.depth;\n }\n\n Rectangle(double width, double height, double depth) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n }\n\n Rectangle() {\n  width = -1;\n  height = -1;\n  depth = -1;\n }\n\n double volume() {\n  return width * height * depth;\n }\n\n}\n\nclass RectangleWeight extends Rectangle {\n double weight;\n\n RectangleWeight(RectangleWeight clone) {\n  super(clone);\n  weight = clone.weight;\n }\n\n RectangleWeight(double width, double height, double depth, double weight) {\n  super(width, height, depth);\n  this.weight = weight;\n\n }\n\n RectangleWeight() {\n  super();\n  weight = -1;\n }\n}\n\nclass Shipment extends RectangleWeight {\n double cost;\n\n Shipment(Shipment clone) {\n  super(clone);\n  cost = clone.cost;\n }\n\n Shipment(double width, double height, double depth, double weight,\n   double cost) {\n  super(width, height, depth, weight);\n  this.cost = cost;\n }\n\n Shipment() {\n  super();\n  cost = -1;\n }\n\n}\n\nclass DemoShipment {\n public static void main(String args[]) {\n  final Shipment shipment = new Shipment(5, 10, 15, 20, 30);\n  final Shipment shipment2 = new Shipment(shipment);\n\n  double vol;\n  vol = shipment.volume();\n  System.out.println(&quot;( shipment i&ccedil;in ) \\n Dikd&ouml;rtgenin Hacmi &quot; + vol\n    + &quot; \\n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + shipment.weight\n    + &quot; \\n Nakliye &Uuml;creti : $&quot; + shipment.cost);\n  System.out.println();\n  vol = shipment2.volume();\n  System.out.println(&quot;( shipment2 i&ccedil;in ) \\n Dikd&ouml;rtgenin Hacmi &quot; + vol\n    + &quot; \\n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + shipment2.weight\n    + &quot; \\n Nakliye &Uuml;creti : $&quot; + shipment2.cost);\n }\n}\n( shipment i&ccedil;in ) \n Dikd&ouml;rtgenin Hacmi 750.0 \n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 20.0 \n Nakliye &Uuml;creti : $30.0\n\n( shipment2 i&ccedil;in ) \n Dikd&ouml;rtgenin Hacmi 750.0 \n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 20.0 \n Nakliye &Uuml;creti : $30.0\n<\/sh>\n\n<p>super() devaml\u0131 en yak\u0131ndaki &uuml;st s\u0131n\u0131f\u0131n yap\u0131land\u0131r\u0131c\u0131s\u0131na g&ouml;ndermede bulunur.Shipment i&ccedil;indeki super(),RectangleWeight i&ccedil;erisindeki yap\u0131land\u0131r\u0131c\u0131y\u0131 &ccedil;a\u011f\u0131r\u0131r .RectangleWeight i&ccedil;erisindeki super() , Rectangle i&ccedil;indeki yap\u0131land\u0131r\u0131c\u0131y\u0131 &ccedil;a\u011f\u0131r\u0131r.&Ouml;rneklerimin daha iyi anla\u015f\u0131lmas\u0131 i&ccedil;in ayn\u0131 dosya i&ccedil;erisinde olu\u015fturarak anlat\u0131yorum , asl\u0131nda ger&ccedil;ekte her s\u0131n\u0131f\u0131n farkl\u0131 dosyalarda tutulmas\u0131 bir standartt\u0131r.<\/p>\n","date":"1431427963","tags":"java,javase, kal\u0131t\u0131m , kal\u0131t\u0131m , java kal\u0131t\u0131m olu\u015fturmak , java hiyerarsi , java cok duzeyli hiyerarsi , java coklu kal\u0131t\u0131m , java cok kal\u0131t\u0131m","link":"java---kalitim-sharp2-cok-duzeyli-bir-hiyerarsi-olusturmak"},{"id":"120","title":"Java - Kal\u0131t\u0131m #3 Yap\u0131land\u0131r\u0131c\u0131lar\u0131n \u00c7a\u011fr\u0131lma S\u0131ras\u0131","content_half":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde t&uuml;retilme s\u0131ras\u0131na g&ouml;re &ccedil;a\u011fr\u0131l\u0131rlar .Yani &uuml;st s\u0131n\u0131ftan alt s\u0131n\u0131flara do\u011fru bir \u015fekilde. Bunu basit bir &ouml;rnek ile ele alal\u0131m.<\/p>","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde t&uuml;retilme s\u0131ras\u0131na g&ouml;re &ccedil;a\u011fr\u0131l\u0131rlar .Yani &uuml;st s\u0131n\u0131ftan alt s\u0131n\u0131flara do\u011fru bir \u015fekilde. Bunu basit bir &ouml;rnek ile ele alal\u0131m.<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n A() {\n  System.out.println(&quot; Ben A&#39;n\u0131n Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;);\n }\n}\n\nclass B extends A {\n B() {\n  System.out.println(&quot; Ben B&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;);\n }\n}\n\nclass C extends B {\n C() {\n  System.out.println(&quot; Ben C&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;);\n }\n}\n\nclass CallingConstuructors {\n public static void main(String args[]) {\n  final C c = new C();\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \n Ben A&#39;n\u0131n Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !\n Ben B&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !\n Ben C&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !\n<\/sh>\n\n<p>Mant\u0131kl\u0131 olarak bu &ccedil;a\u011fr\u0131lman\u0131n sebebi bellidir.Bir &uuml;st s\u0131n\u0131f hi&ccedil;bir \u015fekilde bir alt s\u0131n\u0131f\u0131n bilgisine sahip de\u011fildir.<\/p>\n","date":"1431427963","tags":"java,javase, yap\u0131land\u0131r\u0131c\u0131 , java constructors , java yap\u0131land\u0131r\u0131c\u0131 olu\u015fturmak , java yap\u0131land\u0131r\u0131c\u0131lar\u0131n ca\u011fr\u0131lma s\u0131ras\u0131 , c# constructors , c# yap\u0131land\u0131r\u0131c\u0131","link":"java---kalitim-sharp3-yapilandiricilarin-cagrilma-sirasi"},{"id":"121","title":"Java - Kal\u0131t\u0131m #4 - Methodu Ezmek","content_half":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim.<\/p>\n","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim.<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n int i, j;\n\n A(int a, int b) {\n  i = a;\n  j = b;\n }\n\n void show() {\n  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j);\n }\n\n}\n\nclass B extends A {\n int k;\n\n B(int a, int b, int c) {\n  super(a, b);\n  k = c;\n }\n\n void show() {\n  System.out.println(&quot;k = &quot; + k);\n }\n}\n\nclass Override {\n public static void main(String args[]) {\n  final B subClone = new B(5, 10, 15);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nk = 15\n<\/sh>\n\n<p><strong>B<\/strong> tipinde olu\u015fturulan bir nesne &uuml;zerinden , <strong>show()<\/strong> methodunu &ccedil;a\u011f\u0131rd\u0131\u011f\u0131m\u0131zda <strong>B<\/strong> i&ccedil;inde tan\u0131ml\u0131 olan <strong>show() <\/strong>methodu &ccedil;a\u011fr\u0131l\u0131r , &ccedil;&uuml;nk&uuml; <strong>show()&#39;<\/strong>un <strong>B <\/strong>i&ccedil;erisinde ki versiyonu <strong>A <\/strong>i&ccedil;erisindeki versiyonu ezer.<strong>(Override)<\/strong>Yine ezilen versiyona ula\u015fmak i&ccedil;in <strong>super <\/strong>kullan\u0131l\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n int i, j;\n\n A(int a, int b) {\n  i = a;\n  j = b;\n }\n\n void show() {\n  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j);\n }\n\n}\n\nclass B extends A {\n int k;\n\n B(int a, int b, int c) {\n  super(a, b);\n  k = c;\n }\n\n\n void show() {\n  super.show();\n  System.out.println(&quot;k = &quot; + k);\n }\n}\n\nclass Override {\n public static void main(String args[]) {\n  final B subClone = new B(5, 10, 15);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \ni = 5 j = 10\nk = 15\n<\/sh>\n\n<p>Method ezmesi sadece ayn\u0131 ad\u0131 ve tip imzas\u0131n\u0131 ta\u015f\u0131mas\u0131 durumunda ge&ccedil;erlidir.Aksi takdirde bir method ezmesi de\u011fil , a\u015f\u0131r\u0131 y&uuml;klenme olu\u015fur.Bunu bir &ouml;rnekle a&ccedil;\u0131klayay\u0131m.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n int i, j;\n\n A(int a, int b) {\n  i = a;\n  j = b;\n }\n\n void show() {\n  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j);\n }\n\n}\n\nclass B extends A {\n int k;\n\n B(int a, int b, int c) {\n  super(a, b);\n  k = c;\n }\n\n void show(String msg) {\n\n  System.out.println(msg + k);\n }\n}\n\nclass Override {\n public static void main(String args[]) {\n  final B subClone = new B(5, 10, 15);\n  subClone.show(&quot;k ad\u0131nda bir de\u011fi\u015fken = &quot;);\n  subClone.show();\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nk ad\u0131nda bir de\u011fi\u015fken = 15\ni = 5 j = 10\n<\/sh>\n\n<p>Burada B i&ccedil;erisinde ki show() methodu , A i&ccedil;erisindeki show() methodunu a\u015f\u0131r\u0131 y&uuml;klemi\u015ftir.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1431427963","tags":"java,javase, metot, java kal\u0131t\u0131m , java metot ezme , java metod nedir , java method , java method ezmek , java method ezme , c# method , c# metot","link":"java---kalitim-sharp4---methodu-ezmek"},{"id":"122","title":"Java - Kal\u0131t\u0131m #5 Abstract S\u0131n\u0131flar\u0131 Kullanmak ( \u00d6zet\/Soyut)","content_half":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim. &Ouml;nceki ","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim. &Ouml;nceki yaz\u0131lar\u0131mda &nbsp;<a href=\"http:\/\/kustemura.blogspot.com.tr\/search?q=java+kal%C4%B1t%C4%B1m\">Java - Kal\u0131t\u0131m<\/a> konular\u0131n\u0131 i\u015flemi\u015ftik. \u015eimdi kald\u0131\u011f\u0131m\u0131z yerden devam ediyoruz.E\u011fer bu konu hakk\u0131nda pek bir bilginiz yok ise &ouml;nceki konulara bakmakta yarar var.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&Ouml;nceki &ouml;rneklerimizde kulland\u0131\u011f\u0131m\u0131z yap\u0131lar\u0131n hepsinde i&ccedil;eri\u011fi hep &uuml;st s\u0131n\u0131f taraf\u0131ndan doldurulan ve ona eklemeler yapan alt s\u0131n\u0131flar\u0131 incelemi\u015ftik.Bazen yaln\u0131zca alt s\u0131n\u0131flar taraf\u0131ndan payla\u015f\u0131lacak ve i&ccedil;eri\u011fi onlar taraf\u0131ndan doldurulacak , genel bir form tan\u0131mlayan &uuml;st s\u0131n\u0131flar olu\u015fturmak isteyebilirsiniz.B&ouml;yle bir s\u0131n\u0131f , alt s\u0131n\u0131flar\u0131n ger&ccedil;ekle\u015ftirmek zorunda oldu\u011fu methodlar\u0131n do\u011fas\u0131n\u0131 belirler.<\/p>\n\n<p>Bu durumda alt s\u0131n\u0131f\u0131n ger&ccedil;ekten de t&uuml;m gerekli methodlar\u0131 ezmesini sa\u011flamak i&ccedil;in bir yol olmas\u0131 gerekir.Java bu problemi <strong><em>&ouml;zet-soyut method<\/em> ( abstract method ) <\/strong>kavram\u0131 ile &ccedil;&ouml;zer.<\/p>\n\n<p>&Ouml;zet bir method deklara etmek i&ccedil;in a\u015fa\u011f\u0131daki genel form kullan\u0131l\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><strong>abstract tip_adi ( <em>parametre listesi<\/em> );<\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi , bir method g&ouml;vdesi yoktur.<\/p>\n\n<p>Bir s\u0131n\u0131f\u0131 &ouml;zet olarak deklere etmek i&ccedil;in <strong><em>class <\/em><\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n sol taraf\u0131nda <strong><em>abstract <\/em><\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanmak yeterlidir.<\/p>\n\n<p>Anlatt\u0131\u011f\u0131m \u015feyleri bir &ouml;rnek &uuml;zerinde inceleyelim.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush:java\">\nabstract class A {\n abstract void callMe();\n\n void callMeToo() {\n  System.out.println(&quot;Bu bir somut methoddur.&quot;);\n }\n}\n\nclass B extends A {\n @Override\n void callMe() {\n  System.out.println(&quot;B A&#39;daki callMe() methodunu i&ccedil;ermek zorundad\u0131r. &quot;);\n }\n}\n\nclass AbstractDemo {\n public static void main(String args[]) {\n  final B b = new B();\n  b.callMe();\n  b.callMeToo();\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nB A&#39;daki callMe() methodunu i&ccedil;ermek zorundad\u0131r. \nBu bir somut methoddur.\n<\/sh>\n\n<p>Programda A s\u0131n\u0131f\u0131ndan bir nesne deklare edilmedi\u011fine dikkat edin.&Ouml;zet bir s\u0131n\u0131f\u0131 &ouml;rneklendirmek m&uuml;mk&uuml;n de\u011fildir.Bir ba\u015fka nokta : A s\u0131n\u0131f\u0131 callMeToo() ad\u0131nda somut bir method&#39;a sahiptir.&Ouml;zet s\u0131n\u0131flar &ouml;rneklendirmek i&ccedil;in kullan\u0131lamazlar , sadece nesne referanslar\u0131 olu\u015fturmak i&ccedil;in kullan\u0131labilirler.&Ccedil;&uuml;nk&uuml; Java&#39;n\u0131n &ccedil;al\u0131\u015fma zaman\u0131 &ccedil;ok bi&ccedil;imlili\u011fine yakla\u015f\u0131m\u0131 , &uuml;st s\u0131n\u0131f referanslar\u0131 arac\u0131l\u0131\u011f\u0131yla ger&ccedil;ekle\u015fir.Bu y&uuml;zden bir alt s\u0131n\u0131f nesnesine i\u015faret etmek &uuml;zere , &ouml;zet bir s\u0131n\u0131fa referans olu\u015fturmak m&uuml;mk&uuml;nd&uuml;r. Bunu bir &ouml;rnek ile ele alal\u0131m.<\/p>\n\n<sh class=\"brush: java\">\nabstract class Figure {\n double dim1;\n double dim2;\n\n Figure(double a, double b) {\n  dim1 = a;\n  dim2 = b;\n }\n\n abstract double area();\n}\n\nclass Rectangle extends Figure {\n Rectangle(double a, double b) {\n  super(a, b);\n }\n\n @Override\n double area() {\n  System.out.println(&quot;Dikd&ouml;rtgen&#39;in \u0130&ccedil; Alan\u0131 &quot;);\n  return dim1 * dim2;\n }\n}\n\nclass Triangle extends Figure {\n Triangle(double a, double b) {\n  super(a, b);\n }\n\n @Override\n double area() {\n  System.out.println(&quot;&Uuml;&ccedil;gen&#39;in \u0130&ccedil; Alan\u0131 &quot;);\n  return dim1 * dim2 \/ 2;\n }\n}\n\nclass AbstractAreas {\n public static void main(String args[]) {\n  \/\/ Figure f = new Figure(10,7); Ge&ccedil;ersiz , olu\u015fturulamaz.\n  final Rectangle r = new Rectangle(5, 2);\n  final Triangle t = new Triangle(3, 7);\n  Figure figureReference;\n  figureReference = r;\n  System.out.println(figureReference.area());\n  figureReference = t;\n  System.out.println(figureReference.area());\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131:\nDikd&ouml;rtgen&#39;in \u0130&ccedil; Alan\u0131 \n10.0\n&Uuml;&ccedil;gen&#39;in \u0130&ccedil; Alan\u0131 \n10.5\n<\/sh>\n\n<p>G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi , <strong>area() <\/strong>methodu abstract b\u0131rak\u0131lm\u0131\u015ft\u0131r . &Ccedil;&uuml;nk&uuml;<strong> area()<\/strong> hesaplamas\u0131 i&ccedil;in her nesne farkl\u0131 bir method kullanmaktad\u0131r.Dikd&ouml;rtgenin i&ccedil; alan\u0131 form&uuml;l&uuml; ile &Uuml;&ccedil;genin i&ccedil; alan\u0131 form&uuml;l&uuml; farkl\u0131 oldu\u011fu i&ccedil;in ayn\u0131 methodu kullanamay\u0131z.area() methodunu abstract olu\u015fturmam\u0131z nedeni budur.&Uuml;st s\u0131n\u0131f taraf\u0131ndan <strong>abstract <\/strong>olu\u015fturulan methodlar alt s\u0131n\u0131flar taraf\u0131ndan kendi i&ccedil;lerinde farkl\u0131 &ouml;zelliklerde olu\u015fturulmak i&ccedil;in tasarlanm\u0131\u015ft\u0131r.<\/p>\n","date":"1431514363","tags":"java,javase,java abstract , abstract , soyut veri , \u00f6zet s\u0131n\u0131f , soyut s\u0131n\u0131f , abstract s\u0131n\u0131f nedir , abstract nedir , c# abstract , java abstract ne i\u015fe yarar","link":"java---kalitim-sharp5-abstract-siniflari-kullanmak-ozet-soyut"},{"id":"123","title":"Java - Arabirim ( Interface )","content_half":"<p>Bu yaz\u0131mda <strong>arabimlerden (interface)<\/strong> bahsedece\u011fim . <em><strong>interface<\/strong><\/em> anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak , bir s\u0131n\u0131f\u0131n arabirimini onun uygulamas\u0131ndan tamamen &ouml;zetleyebilirsiniz.Yani , interface kullanarak bir s\u0131n\u0131f\u0131n nas\u0131l yapaca\u011f\u0131n\u0131 de\u011fil , ne yapmas\u0131 gerekti\u011fini belirtebili","content_full":"<p>Bu yaz\u0131mda <strong>arabimlerden (interface)<\/strong> bahsedece\u011fim . <em><strong>interface<\/strong><\/em> anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak , bir s\u0131n\u0131f\u0131n arabirimini onun uygulamas\u0131ndan tamamen &ouml;zetleyebilirsiniz.Yani , interface kullanarak bir s\u0131n\u0131f\u0131n nas\u0131l yapaca\u011f\u0131n\u0131 de\u011fil , ne yapmas\u0131 gerekti\u011fini belirtebilirsiniz. Arabirimler s&ouml;z dizimi olarak s\u0131n\u0131flarla benzerlik g&ouml;sterirler.Fakat arabirimlerin &ouml;rnek de\u011fi\u015fkenleri yoktur ve methodlar\u0131 g&ouml;vdesiz olarak deklare edilir.<br \/>\n<br \/>\n- Arabirim bir kez tan\u0131mland\u0131\u011f\u0131nda bir &ccedil;ok s\u0131n\u0131f taraf\u0131ndan implement edilebilir.Ayr\u0131ca bir s\u0131n\u0131f da bir &ccedil;ok arabirime sahip olabilir.<br \/>\n- &Ouml;zet s\u0131n\u0131flara benzemelerine ra\u011fmen arabirimlerin bir kabiliyeti daha vard\u0131r:Bir s\u0131n\u0131f birden fazla arabirim uyguyabilir.Buna kar\u015f\u0131l\u0131k bir s\u0131n\u0131f sadece tek bir &uuml;st s\u0131n\u0131ftan ( &ouml;zet veya ba\u015fka) t&uuml;retilebilir.<br \/>\n- Bir arabirim implement etmek i&ccedil;in s\u0131n\u0131f\u0131n arabirim taraf\u0131ndan tan\u0131mlanan methodlar\u0131n t&uuml;m&uuml;n&uuml; uygulamas\u0131 zorunludur.<br \/>\n- Implement edilen arabirimin methodlar\u0131 uygland\u0131\u011f\u0131nda s\u0131n\u0131f kendi methodlar\u0131n\u0131 da ekleyebilir.<br \/>\n- Implement edildi\u011fi s\u0131n\u0131f\u0131n arabirim ile ayn\u0131 ismi ta\u015f\u0131yan methodun ayn\u0131 tip imzas\u0131 ve <em><strong>public <\/strong><\/em>eri\u015fim belirtecine sahip olmas\u0131 gereklidir.<\/p>\n\n<p><br \/>\nBasit bir &ouml;rnek ile inceleyelim.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\ninterface Callback {\n void callBack(int param);\n}\n\nclass Client implements Callback {\n\n @Override\n public void callBack(int param) {\n  System.out.println(&quot;callBack methodu &ccedil;a\u011fr\u0131ld\u0131 &quot; + param);\n }\n\n void nonIFaceMeth() {\n  System.out\n    .println(&quot;Bir s\u0131n\u0131fa implement edilen arabirimden (interface) &quot;\n      + &quot;&uuml;yelerinden ba\u015fka kendi &uuml;yelerini tan\u0131mlayabilir. &quot;);\n }\n\n}\n\nclass TestInterface {\n public static void main(String args[]) {\n  Callback c = new Client();\n  c.callBack(5);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \ncallBack methodu &ccedil;a\u011fr\u0131ld\u0131 5\n<\/sh>\n\n<p>Burada <strong>c<\/strong> , <strong>Callback <\/strong>arabirim tipinde deklare edilmi\u015ftir.Ancak ona <strong>Client&#39;in <\/strong>bir &ouml;rne\u011fi atanm\u0131\u015ft\u0131r<strong>.c,<\/strong> <strong>callBack()<\/strong>&nbsp;methoduna eri\u015fmek i&ccedil;in kullan\u0131labilmesine ra\u011fmen <strong>Client <\/strong>s\u0131n\u0131f\u0131n\u0131n di\u011fer &uuml;yelerine eri\u015femez.Bir arabirim referans de\u011fi\u015fkeni sadece kendi interface deklerasyonunda deklare edilen methodun bilgisine sahiptir.Bu sebepten &ouml;t&uuml;r&uuml; c , <strong>nonIFaceMeth<\/strong>() methoduna eri\u015femez.&Ccedil;&uuml;nk&uuml;<strong> c<\/strong> , <strong>Callback <\/strong>taraf\u0131ndan de\u011fil , <strong>Client <\/strong>taraf\u0131ndan tan\u0131mlanm\u0131\u015ft\u0131r. Ba\u015fka bir &ouml;rnek ile a&ccedil;\u0131klayay\u0131m.<\/p>\n\n<sh class=\"brush: java\">\ninterface Callback {\n void callBack(int param);\n}\n\nclass Client implements Callback {\n\n @Override\n public void callBack(int param) {\n  System.out.println(&quot;Client \\n callBack methodu &ccedil;a\u011fr\u0131ld\u0131 &quot; + param);\n }\n\n void nonIFaceMeth() {\n  System.out\n    .println(&quot;Bir s\u0131n\u0131fa implement edilen arabirimden (interface) &quot;\n      + &quot;&uuml;yelerinden ba\u015fka kendi &uuml;yelerini tan\u0131mlayabilir. &quot;);\n }\n\n}\n\nclass AnotherClient implements Callback {\n @Override\n public void callBack(int param) {\n  System.out.println(&quot;AnotherClient&quot;);\n  System.out.println(&quot; &quot; + param + &quot;&#39;in Karesi &quot; + (param * param));\n }\n}\n\nclass TestInterface2 {\n public static void main(String args[]) {\n  Callback c = new Client();\n  final AnotherClient ac = new AnotherClient();\n\n  c.callBack(5);\n  c = ac;\n  c.callBack(5);\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nClient \n callBack methodu &ccedil;a\u011fr\u0131ld\u0131 5\nAnotherClient\n 5&#39;in Karesi 25\n<\/sh>\n\n<p><strong>Yuvalanm\u0131\u015f Arabimler<\/strong> Bir arabirim bir s\u0131n\u0131f\u0131n yada ba\u015fka bir arabirim &uuml;yesi olarak deklare edilebilir.B&ouml;yle bir arabirime &uuml;ye <strong>arabirim <\/strong>veya <strong>yuvalanm\u0131\u015f arabirim <\/strong>denir. Bir &ouml;rnek yapal\u0131m.<\/p>\n\n<sh class=\"brush: java\">\nclass A {\n public interface NestedIF {\n  boolean isNotNegative(int x);\n }\n}\n\nclass B implements A.NestedIF {\n @Override\n public boolean isNotNegative(int x) {\n  if (x &lt; 0) {\n   return false;\n  } else {\n   return true;\n  }\n }\n}\n\nclass NestedIFDemo {\n public static void main(String args[]) {\n   A.NestedIF nif = new B();\n  if (nif.isNotNegative(10)) {\n   System.out.println(&quot;10 : Bu bir pozitif say\u0131d\u0131r.&quot;);\n  }\n\n  if (nif.isNotNegative(-10)) {\n   System.out.println(&quot;-10 : Bu bir pozitif say\u0131d\u0131r.&quot;);\n  } else {\n   System.out.println(&quot;-10 : Bu bir negatif say\u0131d\u0131r.&quot;);\n  }\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \n10 : Bu bir pozitif say\u0131d\u0131r.\n-10 : Bu bir negatif say\u0131d\u0131r.\n<\/sh>\n\n<p><strong>A&#39;n\u0131n NestedIF<\/strong> adl\u0131 bir &uuml;ye arabirim tan\u0131mlad\u0131\u011f\u0131na ve bu arabirimin public olarak deklare edildi\u011fine dikkat edelim.<strong>B<\/strong> s\u0131n\u0131f\u0131 implements <strong>A.NestedIF<\/strong> \u015feklinde belirtilerek yuvalanm\u0131\u015f arabirimi uygular.nif adl\u0131 <strong>A.NestedIF<\/strong> referans\u0131 olu\u015fturulur ve <strong>B <\/strong>nesnesine referans atan\u0131r.<strong>B<\/strong> s\u0131n\u0131f\u0131<strong> A.NestedIF<\/strong> arabirimini uyguland\u0131\u011f\u0131ndan bu kullan\u0131m ge&ccedil;erlidir.<\/p>\n","date":"1431514363","tags":"java,javase, interface , interface , interface nedir , java arabirim nedir , java interface nas\u0131l kullan\u0131l\u0131r , java arabirim kullanmak , java interface nedir , c# interface , c# interface nedir","link":"java---arabirim-interface"},{"id":"124","title":"Java - Interface & Abstract \u00d6rne\u011fi","content_half":"<p>&Ouml;nceki yaz\u0131lar\u0131mda <strong><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-arabirim-interface.html\">Interface ( Arabirim )&nbsp;<\/a><\/strong>ve<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-kaltm-5-abstract-snflar-kullanmak.html\"><strong> Abstract ( &Ouml;zet \/ Soyut)<\/strong><\/a><strong>&nbsp;<\/strong>konular\u0131ndan&nbsp;ba","content_full":"<p>&Ouml;nceki yaz\u0131lar\u0131mda <strong><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-arabirim-interface.html\">Interface ( Arabirim )&nbsp;<\/a><\/strong>ve<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-kaltm-5-abstract-snflar-kullanmak.html\"><strong> Abstract ( &Ouml;zet \/ Soyut)<\/strong><\/a><strong>&nbsp;<\/strong>konular\u0131ndan&nbsp;bahsetmi\u015ftim.<br \/>\n\u015eimdi daha geni\u015f ve anla\u015f\u0131labilir bir &ouml;rnek ile bunu ele alal\u0131m.<\/p>\n\n<sh class=\"brush: java\">\ninterface Living {\n String talk();\n String myNameIs();\n}\n\nabstract class People implements Living {\n private final String name;\n\n protected People(String name) {\n  this.name = name;\n }\n\n @Override\n public String myNameIs() {\n  return name;\n }\n\n}\n\nclass Ali extends People {\n\n public Ali(String name) {\n  super(name);\n\n }\n\n @Override\n public String talk() {\n  return &quot; Merhaba , Benim Ad\u0131m&quot;;\n }\n\n}\n\nclass Can extends People {\n public Can(String name) {\n  super(name);\n }\n\n @Override\n public String talk() {\n  return &quot; Merhaba , Ben &quot;;\n }\n}\n\nclass PeopleDemo {\n public static void main(String args[]) {\n  final Living[] peoples = { new Ali(&quot; Ali &quot;), new Can(&quot; Can &quot;) };\n  for (final Living people : peoples) {\n   System.out.println(people.talk() + people.myNameIs());\n  }\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \n Merhaba , Benim Ad\u0131m Ali \n Merhaba , Ben  Can \n<\/sh>\n\n<p>Bu programda <strong>Living (Canl\u0131lar)<\/strong> ad\u0131nda bir <strong>interface <\/strong>olu\u015fturdum . Ard\u0131ndan bir<strong> abstract<\/strong> s\u0131n\u0131fa bunu <strong>implement <\/strong>ettim. Daha sonra olu\u015fturdu\u011fum bu <strong>abstract People (\u0130nsan)<\/strong> s\u0131n\u0131f\u0131ndan 2 adet <strong>alt s\u0131n\u0131f (subclass)<\/strong> olu\u015fturdum.Olu\u015fturdu\u011fum 2 alt class&#39;\u0131nda <strong>talk()<\/strong> methodu birbirinden ba\u011f\u0131ms\u0131z bir sonu&ccedil; d&ouml;nderiyor.Fakat name de\u011fi\u015fkeni ise hep ayn\u0131 constructoru ve sadece abstract class i&ccedil;erisindeki <strong>myNameIs()<\/strong> methoduna g&ouml;nderme yap\u0131yor.Bu sayede <strong>myNameIs()<\/strong> methodunu tekrar tekrar yazmaktansa sadece 1 kere yaz\u0131p b&uuml;t&uuml;n alt classlarda &ccedil;a\u011f\u0131rm\u0131\u015f olduk.Bu yap\u0131 ayn\u0131 zamanda &Ccedil;ok Bi&ccedil;imlilik &ouml;zelli\u011fini i\u015faret eder.Temel s\u0131n\u0131f ( People )&#39;dan t&uuml;retilmi\u015f olan alt s\u0131n\u0131flarda payla\u015f\u0131lan ayn\u0131 methodun bu s\u0131n\u0131flarda farkl\u0131 \u015fekillerde uyarlanabilmesidir.<\/p>\n","date":"1431514363","tags":"java,javase,interface ve abstract , interface and abstract , java interface abstract class, java interface and abstract calss , java interface abstract sample , java interface abstract \u00f6rne\u011fi","link":"java---interface-abstract-ornegi"},{"id":"125","title":"Java - Interface & Abstract \u00d6rne\u011fi #2","content_half":"<p>Bir &ouml;nceki &ouml;rne\u011fe <a href=\"http:\/\/kustemura.blogspot.com\/2015\/05\/java-interface-abstract-ornegi.html\">buradan <\/a>ula\u015fabilirsiniz.<br \/>\nBu &ouml;rne\u011fe GitHub &uuml;zerinden eri\u015febilirsiniz.<br \/>\n<a href=\"https:\/\/github.com\/alicankustemur\/InterfaceAbstractExampleTwo\">GitHub - InterfaceAbstractExampleTwo<\/a><\/p>","content_full":"<p>Bir &ouml;nceki &ouml;rne\u011fe <a href=\"http:\/\/kustemura.blogspot.com\/2015\/05\/java-interface-abstract-ornegi.html\">buradan <\/a>ula\u015fabilirsiniz.<br \/>\nBu &ouml;rne\u011fe GitHub &uuml;zerinden eri\u015febilirsiniz.<br \/>\n<a href=\"https:\/\/github.com\/alicankustemur\/InterfaceAbstractExampleTwo\">GitHub - InterfaceAbstractExampleTwo<\/a><\/p>\n\n<p><a href=\"https:\/\/i0.wp.com\/farm8.staticflickr.com\/7220\/7254909368_550561e4d5.jpg\"><img src=\"https:\/\/i0.wp.com\/farm8.staticflickr.com\/7220\/7254909368_550561e4d5.jpg\" style=\"height:174px; width:320px\" \/><\/a><\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-QvzM_pKbO6k\/VVvoLreaD_I\/AAAAAAAABpI\/PomybfUHsCw\/s1600\/Java%2B-%2BInterface%2B%2526%2BAbstract%2B%25C3%2596rne%25C4%259Fi%2B2%2BUML.jpg\"><img src=\"http:\/\/4.bp.blogspot.com\/-QvzM_pKbO6k\/VVvoLreaD_I\/AAAAAAAABpI\/PomybfUHsCw\/s1600\/Java%2B-%2BInterface%2B%2526%2BAbstract%2B%25C3%2596rne%25C4%259Fi%2B2%2BUML.jpg\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\n\/**\n * @Author : Ali Can Ku\u015ftemur\n * @Date : 14 May 2015\n * @File_Name : Animal.java\n * @Blog : http:\/\/alicankustemur.github.io\n *\/\ninterface BasicAnimals {\n String talk();\n\n void sit();\n\n void run();\n\n void features();\n}\n\nabstract class Animal implements BasicAnimals {\n private String name;\n private double height;\n private double weight;\n private String color;\n private String eyeColor;\n\n @Override\n abstract public String talk();\n\n protected Animal(final String name, final double height,\n   final double weight, final String color, final String eyeColor) {\n  setName(name);\n  setHeight(height);\n  setWeight(weight);\n  setColor(eyeColor);\n  setEyeColor(eyeColor);\n }\n\n protected Animal() {\n  setName(&quot;\u0130simsiz bir hayvan&quot;);\n  setHeight(-1);\n  setWeight(-1);\n  setColor(&quot;Siyah&quot;);\n  setEyeColor(&quot;Siyah&quot;);\n }\n\n @Override\n public void sit() {\n  System.out.println(&quot; Oturuyorum !&quot;);\n }\n\n @Override\n public void run() {\n  System.out.println(&quot; Ko\u015fuyorum !&quot;);\n }\n\n @Override\n public void features() {\n  System.out.println(&quot; Ad\u0131 :&quot; + getName());\n  System.out.println(&quot; Boyu :&quot; + getHeight() + &quot; cm&quot;);\n  System.out.println(&quot; A\u011f\u0131rl\u0131\u011f\u0131 :&quot; + getWeight() + &quot; kg&quot;);\n  System.out.println(&quot; Rengi :&quot; + getColor());\n  System.out.println(&quot; G&ouml;z Rengi :&quot; + getEyeColor());\n }\n\n public String getName() {\n  return name;\n }\n\n public void setName(final String name) {\n  this.name = name;\n }\n\n public double getHeight() {\n  return height;\n }\n\n public void setHeight(final double height) {\n  this.height = height;\n }\n\n public double getWeight() {\n  return weight;\n }\n\n public void setWeight(final double weight) {\n  this.weight = weight;\n }\n\n public String getColor() {\n  return color;\n }\n\n public void setColor(final String color) {\n  this.color = color;\n }\n\n public String getEyeColor() {\n  return eyeColor;\n }\n\n public void setEyeColor(final String eyeColor) {\n  this.eyeColor = eyeColor;\n }\n\n}\n\nclass Dog extends Animal {\n Dog(final String name, final double height, final double weight,\n   final String color, final String eyeColor) {\n  super(name, height, weight, color, eyeColor);\n }\n\n Dog() {\n  super();\n }\n\n @Override\n public String talk() {\n  return &quot; Hav Hav!&quot;;\n }\n}\n\nclass Cat extends Animal {\n Cat(final String name, final double height, final double weight,\n   final String color, final String eyeColor) {\n  super(name, height, weight, color, eyeColor);\n }\n\n Cat() {\n  super();\n }\n\n @Override\n public String talk() {\n  return &quot; Miyav Miyav&quot;;\n }\n}\n\nclass AnimalDemo {\n public static void main(final String args[]) {\n  final BasicAnimals myDog = new Dog(&quot;Karaba\u015f&quot;, 45, 25, &quot;Beyaz&quot;,\n    &quot;Kahverengi&quot;);\n  myDog.features();\n  myDog.sit();\n  myDog.run();\n  System.out.println(myDog.talk());\n\n  System.out.println();\n\n  final BasicAnimals myCat = new Cat(&quot;Minno\u015f&quot;, 20, 3, &quot; Gri &quot;, &quot; Ye\u015fil&quot;);\n  myCat.features();\n  myCat.sit();\n  myCat.run();\n  System.out.println(myCat.talk());\n\n  System.out.println();\n\n  final BasicAnimals dog = new Dog();\n  dog.features();\n  dog.sit();\n  dog.run();\n  System.out.println(dog.talk());\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \n Ad\u0131 :Karaba\u015f\n Boyu :45.0 cm\n A\u011f\u0131rl\u0131\u011f\u0131 :25.0 kg\n Rengi :Beyaz\n G&ouml;z Rengi :Kahverengi\n Oturuyorum !\n Ko\u015fuyorum !\n Hav Hav!\n\n Ad\u0131 :Minno\u015f\n Boyu :20.0 cm\n A\u011f\u0131rl\u0131\u011f\u0131 :3.0 kg\n Rengi : Gri \n G&ouml;z Rengi : Ye\u015fil\n Oturuyorum !\n Ko\u015fuyorum !\n Miyav Miyav\n\n Ad\u0131 :\u0130simsiz bir hayvan\n Boyu :-1.0 cm\n A\u011f\u0131rl\u0131\u011f\u0131 :-1.0 kg\n Rengi :Siyah\n G&ouml;z Rengi :Siyah\n Oturuyorum !\n Ko\u015fuyorum !\n Hav Hav!\n<\/sh>\n\n<p><strong>BasicAnimals interface&#39;i <\/strong>ile bir <strong>Hayvan <\/strong>&ouml;rne\u011fi &uuml;zerinden &ccedil;al\u0131\u015f\u0131yoruz.Temel hayvanlar\u0131n , temel &ouml;zellikleri asla de\u011fi\u015fmeyece\u011finden bunlar\u0131n birka&ccedil;\u0131n\u0131 <strong>BasicAnimals&#39;da<\/strong>&nbsp;topluyoruz.Ard\u0131ndan olu\u015fturdu\u011fumuz t&uuml;m hayvanlar bu &ouml;zellikleri zaten i&ccedil;ermek zorunda.<br \/>\n<strong>Animals <\/strong>s\u0131n\u0131f\u0131nda tan\u0131mlad\u0131\u011f\u0131m\u0131z de\u011fi\u015fkenlerin <strong>private <\/strong>olarak tan\u0131mland\u0131\u011f\u0131na dikkat edin.Bu de\u011fi\u015fkenlere sadece <strong>get <\/strong>ve <strong>set <\/strong>methodlar\u0131 ile eri\u015filebilir.Buradaki kavram&nbsp;<strong>Object-Oriented Programming<\/strong>&#39;te <strong>Encapsulation (Kaps&uuml;lleme) <\/strong>olarak adland\u0131r\u0131l\u0131r.<br \/>\n<br \/>\n<strong>BasicAnimals interface&#39;i <\/strong>sayesinde alt s\u0131n\u0131flara implement edece\u011fimiz methodlar\u0131 olu\u015fturduk.<strong>Animals <\/strong>s\u0131n\u0131f\u0131na <strong>BasicAnimals <\/strong>interface&#39;ini implement ediyoruz.Olu\u015fturdu\u011fumuz <strong>Animals <\/strong>soyut s\u0131n\u0131f\u0131 ,<strong> BasicAnimals&#39;\u0131n<\/strong> t&uuml;m &ouml;zelliklerini ayn\u0131 \u015fekilde uygulamak zorundad\u0131r.<strong>sit() , run() ve features()<\/strong> methodlar\u0131 t&uuml;m hayvanlar i&ccedil;in ayn\u0131 \u015feyi ifade etti\u011finden <strong>Animals <\/strong>s\u0131n\u0131f\u0131 i&ccedil;erisinde methodlar\u0131m\u0131z\u0131 olu\u015fturup olu\u015fturdu\u011fumuz nesneler &uuml;zerinden bunlara eri\u015febiliriz.Ancak her hayvan\u0131n konu\u015fmas\u0131 kendine &ouml;zg&uuml; bir yap\u0131ya sahip oldu\u011fu i&ccedil;in di\u011fer hayvanlardan ba\u011f\u0131ms\u0131z olmal\u0131d\u0131r.Bu y&uuml;zden&nbsp;<strong>talk()<\/strong>&nbsp;methodunu soyut olarak tan\u0131ml\u0131yoruz.Her s\u0131n\u0131f kendi i&ccedil;erisinde&nbsp;<strong>talk()&nbsp;<\/strong>methodunu farkl\u0131 bi&ccedil;imlerde i\u015fleyecektir.Animals s\u0131n\u0131f\u0131ndan geni\u015fletti\u011fimiz&nbsp;<strong>Dog&nbsp;<\/strong>ve&nbsp;<strong>Cat&nbsp;<\/strong>s\u0131n\u0131flar\u0131nda g&ouml;r&uuml;ld&uuml;\u011f&uuml; gibi t&uuml;m&nbsp;<strong>sit()<\/strong>&nbsp;,<strong>&nbsp;run()&nbsp;<\/strong>ve<strong>&nbsp;features()&nbsp;<\/strong>methodlar\u0131 ayn\u0131 yere &ccedil;a\u011fr\u0131 yaparken ,&nbsp;<strong>talk()<\/strong>&nbsp;methodu birbirinden ba\u011f\u0131ms\u0131z bir \u015fekilde &ccedil;a\u011fr\u0131l\u0131yor.Bu kavram&nbsp;<strong>Object-Oriented Programming<\/strong>&#39;te <strong>Polimorfizm(&Ccedil;ok Bi&ccedil;imlilik)<\/strong> olarak adland\u0131r\u0131l\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1431600763","tags":"java,javase, interface abstract , java abstract , java interface ,c# interface , c# abstract , java interface \u00f6rne\u011fi , java interface sample , java abstract \u00f6rne\u011fi , java abstract sample , java interface ve abstract","link":"java---interface-abstract-ornegi-sharp2"},{"id":"127","title":"Java - Interface (Arabirim) Geni\u015fletmek","content_half":"<p>Bir arabirim, <strong>extends <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; ile ayn\u0131 s\u0131n\u0131flardaki gibi kal\u0131t\u0131m ald\u0131\u011f\u0131 arabirimi geni\u015fletebilir.Kal\u0131t\u0131m zinciri tamamlanan arabirimin tan\u0131mlanan t&uuml;m methodlar\u0131n\u0131 uygulad\u0131\u011f\u0131 s\u0131n\u0131f sa\u011flamak zorundad\u0131r. Bunu bir &ouml;rnek ile ele alal\u0131m.<\/p>\n","content_full":"<p>Bir arabirim, <strong>extends <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; ile ayn\u0131 s\u0131n\u0131flardaki gibi kal\u0131t\u0131m ald\u0131\u011f\u0131 arabirimi geni\u015fletebilir.Kal\u0131t\u0131m zinciri tamamlanan arabirimin tan\u0131mlanan t&uuml;m methodlar\u0131n\u0131 uygulad\u0131\u011f\u0131 s\u0131n\u0131f sa\u011flamak zorundad\u0131r. Bunu bir &ouml;rnek ile ele alal\u0131m.<\/p>\n\n<sh class=\"brush: java\">\ninterface A {\n void method1();\n\n void method2();\n}\n\ninterface B extends A {\n void method3();\n}\n\nclass TestInterfaceInheritance implements B {\n @Override\n public void method1() {\n  System.out.println(&quot;method1 &ccedil;a\u011fr\u0131ld\u0131!&quot;);\n }\n\n @Override\n public void method2() {\n  System.out.println(&quot;method2 &ccedil;a\u011fr\u0131ld\u0131!&quot;);\n }\n\n @Override\n public void method3() {\n  System.out.println(&quot;method3 &ccedil;a\u011fr\u0131ld\u0131!&quot;);\n }\n}\n\nclass MainClass {\n public static void main(String args[]) {\n  final TestInterfaceInheritance t = new TestInterfaceInheritance();\n  t.method1();\n  t.method2();\n  t.method3();\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nmethod1 &ccedil;a\u011fr\u0131ld\u0131!\nmethod2 &ccedil;a\u011fr\u0131ld\u0131!\nmethod3 &ccedil;a\u011fr\u0131ld\u0131!\n<\/sh>\n\n<p>Burada <strong>B <\/strong>arabirimi , <strong>A <\/strong>arabiriminin b&uuml;t&uuml;n methodlar\u0131n\u0131 i&ccedil;erir , <strong>method3()<\/strong>&#39;&uuml; ekler<strong>.B<\/strong> arabirimini uygulayan <strong>TestInterfaceInheritance <\/strong>s\u0131n\u0131f\u0131 ise <strong>A ve B <\/strong>arabirimlerinin b&uuml;t&uuml;n methodlar\u0131n\u0131 uygulamak zorundad\u0131r.<\/p>\n","date":"1431773563","tags":"java,javase, interface geni\u015fletmek , interface geni\u015fletmek , extends interface , interface extends , java interface , java extends , c# interface","link":"java---interface-arabirim-genisletmek"},{"id":"128","title":"Java - \u00c7ok Kanall\u0131 Programlama (Multi-Threaded Programming) #1","content_half":"<p>Merhaba bu yaz\u0131m <a href=\"http:\/\/www.godoro.com\/Divisions\/Ehil\/Mahzen\/Java\/TheJavaBook\/txt\/html\/document_MultiThreadedProgramming.html\">&Ccedil;ok Kanall\u0131 Programlama<\/a> konusunu i&ccedil;eriyor.Vermi\u015f oldu\u011fum link&#39;te &ccedil;ok kanall\u0131 programlaman\u0131n temel i\u015flemlerini , <strong>Runnable Interface&#39;ini <\/strong>ve","content_full":"<p>Merhaba bu yaz\u0131m <a href=\"http:\/\/www.godoro.com\/Divisions\/Ehil\/Mahzen\/Java\/TheJavaBook\/txt\/html\/document_MultiThreadedProgramming.html\">&Ccedil;ok Kanall\u0131 Programlama<\/a> konusunu i&ccedil;eriyor.Vermi\u015f oldu\u011fum link&#39;te &ccedil;ok kanall\u0131 programlaman\u0131n temel i\u015flemlerini , <strong>Runnable Interface&#39;ini <\/strong>ve <strong>Deprecated<\/strong> olmu\u015f methodlar\u0131n ayr\u0131nt\u0131l\u0131 ve anla\u015f\u0131l\u0131r bir bi&ccedil;imde a&ccedil;\u0131klamas\u0131 yer al\u0131yor.<\/p>\n\n<sh class=\"brush: java\">\n\nclass CurrentThreadDemo {\n public static void main(final String args[]) {\n  final Thread thread = Thread.currentThread();\n  System.out.println(&quot;Varsay\u0131lan ismi :&quot; + thread);\n  thread.setName(&quot;myThread&quot;);\n  System.out.println(&quot;Ad\u0131 De\u011fi\u015fti :&quot; + thread);\n\n  try {\n   for (int i = 5; i &gt; 0; i--) {\n    System.out.println(i);\n    Thread.sleep(1000);\n   }\n\n  } catch (final InterruptedException e) {\n   e.printStackTrace();\n  }\n\n }\n}\n<\/sh>\n\n<p>Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-LpolafpVD5c\/VV57ql8Ep3I\/AAAAAAAABqM\/AZs8WH1uNcY\/s1600\/thread1.gif\"><img src=\"http:\/\/4.bp.blogspot.com\/-LpolafpVD5c\/VV57ql8Ep3I\/AAAAAAAABqM\/AZs8WH1uNcY\/s1600\/thread1.gif\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>Burada <strong>Thread <\/strong>s\u0131n\u0131f\u0131ndan referans etti\u011fimiz <strong>thread <\/strong>&ouml;rnek de\u011fi\u015fkeni <strong>Thread <\/strong>s\u0131n\u0131f\u0131n\u0131n<strong> currentThread() <\/strong>methoduna g&ouml;ndermede bulunur.Olu\u015fan &ccedil;\u0131kt\u0131lar\u0131n s\u0131ralamas\u0131 ,&nbsp;<\/p>\n\n<p><em>1 -Ana Kanal\u0131n Ad\u0131 &nbsp;, 2- &nbsp;&Ouml;nceli\u011fi , 3-Grubunun Ad\u0131. <\/em><strong>( Thread[main,5,main])<\/strong><\/p>\n\n<p>Program\u0131n &ccedil;\u0131kt\u0131s\u0131ndan da anla\u015f\u0131ld\u0131\u011f\u0131 gibi <strong>try <\/strong>blo\u011fu i&ccedil;erisinde ki <strong>for <\/strong>d&ouml;ng&uuml;s&uuml;nde &ccedil;a\u011fr\u0131lan i de\u011fi\u015fkeni 1000 milisaniye yani 1 saniye bekleyerek be\u015ften geriye do\u011fru ekrana yazd\u0131r\u0131yor.Bu d&ouml;ng&uuml; tekrar\u0131ndaki duraklama <strong>sleep() methodu<\/strong> taraf\u0131ndan sa\u011flan\u0131r.<strong>sleep() <\/strong>methodu bir <strong>InterruptedException <\/strong>f\u0131rlatabilir.Bunu catch constructorunda yakal\u0131yoruz.<\/p>\n\n<p><strong>setName()&nbsp;<\/strong>methodu varsay\u0131lan kanal ad\u0131n\u0131 de\u011fi\u015ftirmek i&ccedil;in kullan\u0131l\u0131r.<\/p>\n\n<p><strong>getName()<\/strong> methodu ise kanal ad\u0131n\u0131 elde etmek i&ccedil;in kullan\u0131l\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\npackage com.blogger_project;\n\nclass CurrentThreadDemo {\n public static void main(final String args[]) {\n  final Thread thread = Thread.currentThread();\n  thread.setName(&quot;myThread&quot;);\n  System.out.println(thread.getName());\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nmyThread\n<\/sh>\n","date":"1432205563","tags":"java,javase, \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp1"},{"id":"129","title":"Java - \u00c7ok Kanall\u0131 Programlama (Multi-Threaded Programming) #2","content_half":"<p>&Ouml;nceki &ouml;rnek &uuml;zerinden devam ediyorum.<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-cok-kanall-programlama-multi.html\">Buradan ona ula\u015fabilirsiniz.<\/a><\/p>","content_full":"<p>&Ouml;nceki &ouml;rnek &uuml;zerinden devam ediyorum.<a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-cok-kanall-programlama-multi.html\">Buradan ona ula\u015fabilirsiniz.<\/a><\/p>\n\n<sh class=\"brush: java\">\n\nclass NewThread implements Runnable {\n Thread thread;\n\n NewThread() {\n  thread = new Thread(this, &quot;Demo Thread&quot;);\n  System.out.println(&quot;&Ccedil;ocuk Thread&quot; + thread);\n  thread.start();\n }\n\n @Override\n public void run() {\n  try {\n   for (int i = 5; i &gt; 0; i--) {\n    System.out.println(&quot;&Ccedil;ocuk Thread &quot; + i);\n    Thread.sleep(500);\n   }\n  } catch (final InterruptedException e) {\n   e.printStackTrace();\n  }\n  System.out.println(&quot;&Ccedil;ocuk Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;);\n }\n}\n\nclass ThreadDemo {\n public static void main(final String args[]) {\n  new NewThread();\n  try {\n   for (int i = 5; i &gt; 0; i--) {\n    System.out.println(&quot;Ana Thread &quot; + i);\n    Thread.sleep(1000);\n   }\n  } catch (final InterruptedException e) {\n   e.printStackTrace();\n   \n  }\n  System.out.println(&quot;Ana Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;);\n }\n}\n<\/sh>\n\n<p>Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-W9EmKTjw1UA\/VV56uxnrJcI\/AAAAAAAABqE\/bUFpWo523rM\/s1600\/thread2.gif\"><img src=\"http:\/\/3.bp.blogspot.com\/-W9EmKTjw1UA\/VV56uxnrJcI\/AAAAAAAABqE\/bUFpWo523rM\/s320\/thread2.gif\" style=\"height:193px; width:320px\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><strong>run() <\/strong>methodunu olu\u015fturabilmemiz i&ccedil;in Runnable arabirimini s\u0131n\u0131f\u0131m\u0131za implement ediyoruz.<\/p>\n\n<sh class=\"brush: java\">\nthread = new Thread(this, &quot;Demo Thread&quot;); <\/sh>\n\n<p>Burada <strong>this <\/strong>arg&uuml;man\u0131 nesne thread nesnesi &uuml;zerindeki <strong>run()<\/strong> methoduna g&ouml;ndermede bulunur.<strong>start()<\/strong> methodu ise <strong>run() <\/strong>methodunu ba\u015flat\u0131r.Bu <strong>&Ccedil;ocuk Thread&#39;i<\/strong>n ba\u015flamas\u0131na neden olur.Ard\u0131ndan main methodundaki <strong>NewThread()<\/strong> <strong>constructoru <\/strong>&ccedil;al\u0131\u015fmaya ba\u015flar ve <strong>main() <\/strong>methoduna geri d&ouml;ner.Burada her iki <strong>for <\/strong>d&ouml;ng&uuml;s&uuml; CPU&#39;yu payla\u015farak &ccedil;al\u0131\u015fmaya devam ederler.( Program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131zda elde edece\u011finiz &ccedil;\u0131kt\u0131 buradaki &ccedil;\u0131kt\u0131 ile ayn\u0131 <strong>olmayabilir<\/strong>, i\u015flemci h\u0131z\u0131na ve g&ouml;rev y&uuml;k&uuml;ne g&ouml;re farkl\u0131l\u0131klar g&ouml;stericektir.) Genellikle &ccedil;al\u0131\u015fmay\u0131 bitiren son kanal <strong>Ana Kanal<\/strong> olmak zorundad\u0131r<strong>.<em>JVM&#39;in baz\u0131 versiyonlar\u0131nda ana kanal &ccedil;ocuk kanaldan &ouml;nce biterse , &nbsp;Java &ccedil;al\u0131\u015fma zaman\u0131 sistemi ask\u0131ya al\u0131nabilir.(suspended).Yukar\u0131daki program her zaman Ana Thread&#39;in &Ccedil;ocuk Thread&#39;den sonra bitmesini garantiler .&Ccedil;&uuml;nk&uuml; &Ccedil;ocuk Thread 500 milisaniye uyurken , Ana Thread 1000 milisaniye uyur ve bu yap\u0131 &Ccedil;ocuk Thread&#39;in Ana Threadden daha h\u0131zl\u0131 bir \u015fekilde sonlanmas\u0131na neden olur.<\/em><\/strong><\/p>\n","date":"1432205563","tags":"java,javase , \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp2"},{"id":"130","title":"Java - \u00c7ok Kanall\u0131 Programlama  (Multi-Threaded Programming)  #3 Thread S\u0131n\u0131f\u0131n\u0131 Geni\u015fletmek","content_half":"<p>&Ouml;nceki &ouml;rneklere a\u015fa\u011f\u0131daki ba\u011flant\u0131lardan ula\u015fabilirsiniz:<br \/>\r\n<a href=\"http:\/\/goo.gl\/6QChb0\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#2<\/a><br \/>\r\n<a href=\"http:\/\/goo.gl\/iVJsyP\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#1<\/a><br \/>\r\n<br \/>\r\nBir &ouml;nceki &ou","content_full":"<p>&Ouml;nceki &ouml;rneklere a\u015fa\u011f\u0131daki ba\u011flant\u0131lardan ula\u015fabilirsiniz:<br \/>\n<a href=\"http:\/\/goo.gl\/6QChb0\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#2<\/a><br \/>\n<a href=\"http:\/\/goo.gl\/iVJsyP\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#1<\/a><br \/>\n<br \/>\nBir &ouml;nceki &ouml;rne\u011fi daha iyi bir yoldan yapal\u0131m.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nclass NewThread extends Thread {\n NewThread() {\n  super(&quot;Demo Thread&quot;);\n  System.out.print(&quot;&Ccedil;ocuk Thread&quot;);\n  System.out.print(&quot;&Ccedil;ocuk Thread&quot; + this);\n  start();\n }\n\n @Override\n public void run() {\n  try {\n   for (int i = 5; i &gt; 0; i--) {\n    System.out.println(&quot;&Ccedil;ocuk Thread&quot; + i);\n    Thread.sleep(500);\n   }\n  } catch (final InterruptedException e) {\n   e.printStackTrace();\n  }\n  System.out.println(&quot;&Ccedil;ocuk Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;);\n }\n}\n\nclass ExtendThread {\n public static void main(final String args[]) {\n  new NewThread();\n  try {\n   for (int i = 5; i &gt; 0; i--) {\n    System.out.println(&quot;Ana Thread&quot; + i);\n    Thread.sleep(1000);\n   }\n  } catch (final InterruptedException e) {\n   e.printStackTrace();\n  }\n }\n}\n<\/sh>\n\n<p>Bir &ouml;nceki program ile bu program\u0131n yapt\u0131\u011f\u0131 i\u015f ayn\u0131d\u0131r.Yeni bir kanal olu\u015fturman\u0131n bir di\u011fer yolu ise Thread s\u0131n\u0131f\u0131n\u0131 geni\u015fleten bir s\u0131n\u0131f olu\u015fturup ve bu s\u0131n\u0131f\u0131n bir &ouml;rne\u011fini olu\u015fturmak.<\/p>\n\n<sh>\nsuper(&quot;Demo Thread&quot;);<\/sh>\n\n<p><strong>NewThread&#39;in i&ccedil;indeki super()&#39;e yap\u0131lan &ccedil;a\u011fr\u0131 Thread yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131n a\u015fa\u011f\u0131daki formunu &ccedil;a\u011f\u0131r\u0131r.<\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\npublic Thread(String threadName);<\/sh>\n\n<p>Buradaki threadName kanal\u0131n ad\u0131n\u0131 belirler.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1432205563","tags":"java,javase,java \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp3-thread-sinifini-genisletmek"},{"id":"131","title":"Java - Set ve Get Methodlar\u0131","content_half":"<p>Bu yaz\u0131mdaki &ouml;rnekleri <a href=\"http:\/\/kustemura.blogspot.com\/2015\/05\/this-anahtar-sozcugu.html\">this anahtar s&ouml;zc&uuml;\u011f&uuml;<\/a>&nbsp;&uuml;zerinden devam etmek istiyorum.<br \/>\r\n&Ouml;nceki programlarda olu\u015fturdu\u011fumuz yap\u0131lar kullan\u0131\u015fl\u0131 olsada tam olarak yeterli de\u011fildir.Hi&ccedil;bir de\u011fi\u015fkene direk eri\u015fim m&uuml;mk&uu","content_full":"<p>Bu yaz\u0131mdaki &ouml;rnekleri <a href=\"http:\/\/kustemura.blogspot.com\/2015\/05\/this-anahtar-sozcugu.html\">this anahtar s&ouml;zc&uuml;\u011f&uuml;<\/a>&nbsp;&uuml;zerinden devam etmek istiyorum.<br \/>\n&Ouml;nceki programlarda olu\u015fturdu\u011fumuz yap\u0131lar kullan\u0131\u015fl\u0131 olsada tam olarak yeterli de\u011fildir.Hi&ccedil;bir de\u011fi\u015fkene direk eri\u015fim m&uuml;mk&uuml;n olmamal\u0131d\u0131r.<strong>Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n<\/strong> en &ouml;nemli &ouml;zelliklerinden olan <strong>Encapsulation ( Kaps&uuml;lleme ) <\/strong>kavram\u0131n\u0131 tam olarak uygulamam\u0131z i&ccedil;in de\u011fi\u015fkenlerimizin Set ve Get methodlar\u0131n\u0131 olu\u015fturmal\u0131y\u0131z.<br \/>\n&Ouml;rnek &uuml;zerinden devam edelim.<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Rectangle {\n double width;\n double height;\n double depth;\n\n Rectangle(double width, double height, double depth) {\n  this.width = width;\n  this.height = height;\n  this.depth = depth;\n }\n}\n<\/sh>\n\n<p>Buradaki de\u011fi\u015fkenler default de\u011fer olarak sadece kendi paketleri i&ccedil;erisinde &ccedil;a\u011fr\u0131labilirler , fakat direkt olarak &ccedil;a\u011fr\u0131l\u0131p &uuml;zerinde i\u015flem yap\u0131labilir durumdad\u0131rlar.Bu kullan\u0131m olduk&ccedil;a tehlikeli ve yanl\u0131\u015ft\u0131r.A\u015fa\u011f\u0131daki program\u0131 inceleyelim:<\/p>\n\n<sh class=\"brush: java\">\n\nclass Rectangle {\n private double width;\n private double height;\n private double depth;\n\n Rectangle(final double width, final double height, final double depth) {\n  setWidth(width);\n  setHeight(height);\n  setDepth(depth);\n }\n\n Rectangle() {\n  setWidth(-1);\n  setHeight(-1);\n  setDepth(-1);\n }\n\n double volume() {\n  return width * height * depth;\n }\n\n public double getWidth() {\n  return width;\n }\n\n public void setWidth(final double width) {\n  this.width = width;\n }\n\n public double getHeight() {\n  return height;\n }\n\n public void setHeight(final double height) {\n  this.height = height;\n }\n\n public double getDepth() {\n  return depth;\n }\n\n public void setDepth(final double depth) {\n  this.depth = depth;\n }\n}\n\nclass RectangleDemo {\n public static void main(final String args[]) {\n  final Rectangle myRectangle = new Rectangle(5, 12, 6);\n  System.out.println(&quot;Geni\u015flik :&quot; + myRectangle.getWidth());\n  System.out.println(&quot;Y&uuml;kseklik :&quot; + myRectangle.getHeight());\n  System.out.println(&quot;Derinlik :&quot; + myRectangle.getDepth());\n  System.out.println(&quot;Hacim : &quot; + myRectangle.volume());\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nGeni\u015flik :5.0\nY&uuml;kseklik :12.0\nDerinlik :6.0\nHacim : 360.0\n<\/sh>\n\n<p>Bir &ouml;nceki kullan\u0131mda<\/p>\n\n<sh class=\"brush: java\">\n        \n this.width = width;\n this.height = height;\n this.depth = depth;<\/sh>\n\n<p>olarak constructor&#39;e uygulayarak de\u011ferlerimizi atam\u0131\u015ft\u0131k.Fakat burada <strong>set&lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>isimli methodlar\u0131m\u0131zda yapt\u0131\u011f\u0131m\u0131z i\u015flemler asl\u0131nda &uuml;stteki &uuml;&ccedil; i\u015flem ile ayn\u0131 i\u015fi yapar. (<strong> set &lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>ve <strong>get &lt; De\u011fi\u015fken Ad\u0131&gt;<\/strong> kullan\u0131m\u0131 programc\u0131l\u0131kta bir standart haline geldi\u011fi i&ccedil;in bu &ouml;rnekte bu \u015fekilde kullan\u0131lmaktad\u0131r.<strong>Eclipse -&gt; Sa\u011f T\u0131k -&gt; Source&nbsp;-&gt; Generate Setters and Getters<\/strong> i\u015flemini uygulayarak <strong>Set <\/strong>ve <strong>Get <\/strong>methodlar\u0131n\u0131 otomatik olu\u015fturabilirsiniz.<strong>Eclipse <\/strong>standart kullan\u0131m\u0131 yapmakla beraber method isimlerini de\u011fi\u015ftirmenize olanak sa\u011flar. )Ayr\u0131ca de\u011fi\u015fkenleri gizler ve d\u0131\u015fardan herhangi bir de\u011fi\u015fime izin vermezler.Burada de\u011fi\u015fken de\u011ferini de\u011fi\u015ftirmek i&ccedil;in sadece de\u011fi\u015fkenin <strong>set <\/strong>methodu kullan\u0131labilir.Bu yap\u0131y\u0131 kullanarak art\u0131k de\u011fi\u015fkenlere direkt bir \u015fekilde eri\u015filemez.Sadece <strong>get&lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>methodu kullan\u0131larak eri\u015filebilir.<\/p>\n","date":"1432291963","tags":"java,javase, get set , java set get , java set, java get , get set , set get , java set get methods,java set get methodlar\u0131 , java get set methods , java get set methodlar\u0131","link":"java---set-ve-get-methodlari"},{"id":"132","title":"Java - Enums ( Numaraland\u0131rmalar )","content_half":"<p>Bu &ouml;zellik Java&#39;ya 1.5 s&uuml;r&uuml;m&uuml;yle beraber eklenmi\u015ftir.<br \/>\nEnum adland\u0131r\u0131lm\u0131\u015f sabitlerden olu\u015fan bir listedir.&Ouml;rne\u011fin g&uuml;nler gibi.<br \/>\nJava&#39;da numaraland\u0131rmalar bir s\u0131n\u0131f tipini tan\u0131mlarlar.<br \/>\nBir &ouml;rnek ile ele alal\u0131m.<br \/>\n&nbsp;<\/p>","content_full":"<p>Bu &ouml;zellik Java&#39;ya 1.5 s&uuml;r&uuml;m&uuml;yle beraber eklenmi\u015ftir.<br \/>\nEnum adland\u0131r\u0131lm\u0131\u015f sabitlerden olu\u015fan bir listedir.&Ouml;rne\u011fin g&uuml;nler gibi.<br \/>\nJava&#39;da numaraland\u0131rmalar bir s\u0131n\u0131f tipini tan\u0131mlarlar.<br \/>\nBir &ouml;rnek ile ele alal\u0131m.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\n\/**\n * @Author    : Ali Can Ku\u015ftemur\n * @Date      : 22 May 2015\n * @File_Name : EnumDemo.java\n * @Blog      : http:\/\/alicankustemur.github.io\n *\/\npublic class EnumDemo {\n\n public enum Day {\n  PAZARTESI, SALI, CARSAMBA, PERSEMBE, CUMA, CUMARTES\u0130, PAZAR\n }\n\n public static void main(final String[] args) {\n  Day theDay = Day.PAZARTESI;\n  printToday(theDay);\n\n  theDay = Day.PERSEMBE;\n  printToday(theDay);\n\n  theDay = Day.valueOf(&quot;PERSEMBE&quot;);\n  printToday(theDay);\n\n  System.out.println();\n\n  for (final Day allDay : Day.values()) {\n   System.out.println(allDay);\n  }\n\n }\n\n public static void printToday(final Day day) {\n  if (day == Day.PAZARTESI) {\n   System.out.println(&quot;Pazartesi g&uuml;n&uuml;ne bir \\&quot;Merhaba\\&quot; de bakal\u0131m. &quot;);\n  } else {\n   System.out.println(&quot;Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.&quot;);\n  }\n }\n\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nPazartesi g&uuml;n&uuml;ne bir &quot;Merhaba&quot; de bakal\u0131m. \nBug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.\nBug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.\n\nPAZARTESI\nSALI\nCARSAMBA\nPERSEMBE\nCUMA\nCUMARTES\u0130\nPAZAR\n<\/sh>\n\n<p>Burada <strong>PAZARTESI,SALI <\/strong>ve di\u011fer tan\u0131mlay\u0131c\u0131lar , numaraland\u0131rma sabitleri olarak adland\u0131r\u0131l\u0131rlar.Her biri kapal\u0131 olarak <strong>Day&#39;in public,static <\/strong>ve <strong>final <\/strong>birer &uuml;yesi olarak deklare edilmi\u015ftir.Bu sabitlerin tipleri deklare edildikleri tiplerdir yani burada Day tipinde.<strong>Enum&#39;lar bir s\u0131n\u0131f tipi olmalar\u0131na ra\u011fmen new anahtar s&ouml;zc&uuml;\u011f&uuml; ile bir enum &ouml;rne\u011fi olu\u015fturulamaz<\/strong>;ama bir numaraland\u0131rma de\u011fi\u015fkenini ilkel de\u011fi\u015fken tiplerinde oldu\u011fu gibi ayn\u0131 \u015fekilde deklare edebilirsiniz. &Ouml;rne\u011fimizde <strong>theDay <\/strong>ad\u0131nda bir <strong>Day <\/strong>&ouml;rne\u011fi olu\u015fturduk ve bu &ouml;rne\u011fe <strong>PAZARTESI <\/strong>sabitini atad\u0131k.)enumlar if veya switch yap\u0131lar\u0131nda kullan\u0131labilirler.)Ard\u0131ndan <strong>printToday()<\/strong> methoduna arg&uuml;man olarak ge&ccedil;ti\u011fimiz <strong>theDay <\/strong>de\u011fi\u015fkeni ile d&ouml;nen de\u011fere g&ouml;re yazd\u0131rma i\u015flemlerimizi yap\u0131yoruz. <strong>valueOf() <\/strong>methoduna aktar\u0131lan karakter katar\u0131na kar\u015f\u0131l\u0131k gelen sabiti d&ouml;nd&uuml;r&uuml;r. &quot;Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.&quot; &ccedil;\u0131kt\u0131s\u0131n\u0131n iki adet oldu\u011funa dikkat edin.Bunun sebebi <strong>valueOf()<\/strong> methoduna arg&uuml;man olarak yazd\u0131\u011f\u0131m\u0131z &quot;<strong>PERSEMBE<\/strong>&quot; karakter katar\u0131n\u0131n <strong>printToday()<\/strong> methodunda else blo\u011funa d&uuml;\u015fmesidir.<strong> values() <\/strong>methodu &ccedil;a\u011fr\u0131ld\u0131 <strong>enum <\/strong>tipinde bir diziyi d&ouml;nd&uuml;r&uuml;r.Burada for-each i&ccedil;erisindeki <strong>allDay<\/strong> de\u011fi\u015fkenine <strong>Day <\/strong>enum&#39;unun sabitleri birer birer aktar\u0131l\u0131r ve ekrana yazd\u0131r\u0131l\u0131r.<br \/>\n<br \/>\n<strong>Java Numaraland\u0131rmalar\u0131 S\u0131n\u0131f Tipleridir<\/strong><br \/>\nenum&#39;larda new kullanarak bir enum &ouml;rne\u011fi olu\u015fturamasakta , bunun d\u0131\u015f\u0131nda di\u011fer s\u0131n\u0131flar ile ayn\u0131 yeteneklere sahiptirler.&Ouml;rne\u011fin numaraland\u0131rmalara yap\u0131land\u0131r\u0131c\u0131 verebilir ,&ouml;rnek de\u011fi\u015fken ve methodlar ekleyebilir hatta arabirimler uygulayabilirsiniz.<br \/>\nBir &ouml;rnekle inceleyelim.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\n\/**\n * @Author : Ali Can Ku\u015ftemur\n * @Date : 22 May 2015\n * @File_Name : EnumDemo.java\n * @Blog : http:\/\/alicankustemur.github.io\n *\/\npublic class EnumDemo {\n enum Fruit {\n  Apple(5), Banana(7), Orange(2), Peach(4), Melon(6), WaterMelon;\n  private int price;\n\n  Fruit() {\n   price = -1;\n  }\n\n  Fruit(final int price) {\n   setPrice(price);\n  }\n\n  void setPrice(final int price) {\n   this.price = price;\n  }\n\n  int getPrice() {\n   return price;\n  }\n\n }\n\n public static void main(final String args[]) {\n  Fruit myFruit = Fruit.Orange;\n  System.out.println(myFruit + &quot; : &quot; + myFruit.getPrice() + &quot; $&quot;);\n\n  myFruit = Fruit.Peach;\n  System.out.println(myFruit + &quot; : &quot; + myFruit.getPrice() + &quot; $&quot;);\n\n  System.out.println(&quot;Fruit\/Melon :&quot; + Fruit.Melon.getPrice() + &quot; $&quot;);\n\n  System.out.println();\n\n  System.out.println(&quot;Fruit Numaraland\u0131rma Sabitleri Listesi &quot;);\n  for (final Fruit fruit : Fruit.values()) {\n   System.out.println(fruit + &quot; : &quot; + fruit.getPrice() + &quot; $&quot;);\n  }\n\n }\n}\nOrange : 2 $\nPeach : 4 $\nFruit\/Melon :6 $\n\nFruit Numaraland\u0131rma Sabitleri Listesi \nApple : 5 $\nBanana : 7 $\nOrange : 2 $\nPeach : 4 $\nMelon : 6 $\nWaterMelon : -1 $\n<\/sh>\n\n<p><strong>Constructor <\/strong>de\u011ferlerini sabitlere tan\u0131mlad\u0131ktan sonra <strong>getPrice()<\/strong> methodu ile <strong>Fruit <\/strong>numaraland\u0131r\u0131c\u0131 sabitlerinin price de\u011ferlerine ula\u015f\u0131p yazd\u0131rd\u0131k.Bir <strong>enum <\/strong>&ouml;rnek de\u011fi\u015fkeni olu\u015fturup new ifadesi kullanmad\u0131\u011f\u0131m\u0131za dikkat edelim. <strong>Constructor&#39;u <\/strong>bo\u015f ge&ccedil;ilen <strong>WaterMelon <\/strong>sabiti ise yine s\u0131n\u0131flarda oldu\u011fu gibi a\u015f\u0131r\u0131 y&uuml;klenebilir.<strong>Constructor <\/strong>arg&uuml;man\u0131 bo\u015f ge&ccedil;ilen sabit&#39;in -1 de\u011fer ald\u0131\u011f\u0131n\u0131 g&ouml;r&uuml;yoruz.Buradaki &ouml;nemli par&ccedil;alar :<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nFruit myFruit = Fruit.Orange;\nmyFruit.getPrice(); \nFruit.Melon.getPrice();<\/sh>\n\n<p>Burada getPrice() methodunun 2 farkl\u0131 &ccedil;a\u011fr\u0131lma \u015feklini g&ouml;rd&uuml;k. <strong>Numaraland\u0131rlar ile ilgili &ouml;nemli k\u0131s\u0131tlamalar:<\/strong> <em>1 - Bir numaraland\u0131rma bir ba\u015fka s\u0131n\u0131f\u0131 kal\u0131t\u0131mla devralamaz. 2 - Bir <strong>enum <\/strong>bir &uuml;st s\u0131n\u0131f olamaz. ( <strong>enum&#39;lar <\/strong>geni\u015fletilemezler.) 3 - Her bir numaraland\u0131rma sabiti tan\u0131mland\u0131\u011f\u0131 s\u0131n\u0131f\u0131n tipinde bir nesne olmal\u0131d\u0131r. <\/em><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\n\/**\n * @Author : Ali Can Ku\u015ftemur\n * @Date : 23 May 2015\n * @File_Name : EnumDemo2.java\n * @Blog : http:\/\/alicankustemur.github.io\n *\/\npublic class EnumDemo2 {\n enum Fruit {\n  Apple, Banana, Orange, Peach, Melon, WaterMelon;\n }\n\n public static void main(final String args[]) {\n\n  final Fruit fr1, fr2, fr3;\n\n  for (final Fruit fruit : Fruit.values()) {\n   System.out.println(fruit + &quot; : &quot; + fruit.ordinal());\n  }\n\n  System.out.println();\n\n  fr1 = Fruit.Apple;\n  fr2 = Fruit.Banana;\n  fr3 = Fruit.Apple;\n\n  if (fr1.compareTo(fr2) &lt; 0) {\n   System.out.println(fr1 + &quot; &quot; + fr2 + &quot;&#39;dan &ouml;nce gelir.&quot;);\n  }\n\n  if (fr1.compareTo(fr2) &gt; 0) {\n   System.out.println(fr2 + &quot; &quot; + fr1 + &quot;&#39;dan &ouml;nce gelir.&quot;);\n  }\n\n  if (fr1.compareTo(fr3) == 0) {\n   System.out.println(fr1 + &quot; e\u015fittir &quot; + fr3 + &quot;&#39;a&quot;);\n  }\n\n  if (fr1.equals(fr3)) {\n   System.out.println(fr1 + &quot; e\u015fittir &quot; + fr3 + &quot;&#39;a&quot;);\n  }\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nApple : 0\nBanana : 1\nOrange : 2\nPeach : 3\nMelon : 4\nWaterMelon : 5\n\nApple Banana&#39;dan &ouml;nce gelir.\nApple e\u015fittir Apple&#39;a\nApple e\u015fittir Apple&#39;a\n<\/sh>\n\n<p>T&uuml;m numaraland\u0131rmalar <strong>java.lang.Enum<\/strong> s\u0131n\u0131f\u0131n\u0131 devral\u0131r.Bu s\u0131n\u0131f\u0131n baz\u0131 methodlar\u0131 vard\u0131r.Bu &ouml;rnekte <strong>for-each<\/strong> d&ouml;ng&uuml;s&uuml; i&ccedil;erisinde kullanm\u0131\u015f oldu\u011fum<strong> ordinal() <\/strong>methodu ilgili enum sabitinin konumunu <strong>integer<\/strong> olarak d&ouml;nderir.( Dizideki indis(index) mant\u0131\u011f\u0131 ile ayn\u0131) <strong>compareTo()<\/strong> methodu ise &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131 sabit ile parametresine ald\u0131\u011f\u0131 sabit&#39;in konumlar\u0131n\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131r.E\u011fer &ccedil;a\u011f\u0131ran sabitin ordinal de\u011feri &ccedil;a\u011fr\u0131landan k&uuml;&ccedil;&uuml;k ise negatif bir de\u011fer d&ouml;nd&uuml;r&uuml;r.B&uuml;y&uuml;k ise pozitif de\u011fer d&ouml;nd&uuml;r&uuml;r.E\u011fer s\u0131f\u0131r de\u011ferini d&ouml;nd&uuml;r&uuml;rse 2 sabitin konumu e\u015fit demektir.Buradaki <strong>equals() <\/strong>methodu ise &ccedil;a\u011f\u0131ran ve &ccedil;a\u011fr\u0131lan sabitlerin her ikiside ayn\u0131 numaraland\u0131rmadan gelen ayn\u0131 sabite kar\u015f\u0131l\u0131k geliyorsa <strong>true<\/strong> d&ouml;nd&uuml;r&uuml;r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1432378363","tags":"java,javase , enums,java enum , enum , enums , c# enum , c# enums , java numaraland\u0131rma , java numaralandirma , numaralandirma , c# numaralandirma","link":"java---enums-numaralandirmalar"},{"id":"133","title":"Java - Dosya Okuma ve Dosya Yazma","content_half":"<p>Merhaba bu yaz\u0131mda Java&#39;da Dosya \u0130\u015flemleri ile ilgili en &ccedil;ok kullan\u0131lan 2 yap\u0131y\u0131 anlataca\u011f\u0131m.<br \/>\n&nbsp;<\/p>","content_full":"<p>Merhaba bu yaz\u0131mda Java&#39;da Dosya \u0130\u015flemleri ile ilgili en &ccedil;ok kullan\u0131lan 2 yap\u0131y\u0131 anlataca\u011f\u0131m.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nFileInputStream(String fileName) throws FileNotFoundException\nFileOutputStream(String fileName) throws FileNotFoundException\n<\/sh>\n\n<p>Buradaki <strong>fileName <\/strong>a&ccedil;mak istedi\u011finiz dosyan\u0131n ismini belirtir.E\u011fer dosya bulunamaz ise&nbsp;<strong>IOException <\/strong>s\u0131n\u0131f\u0131n\u0131n bir alt s\u0131n\u0131f\u0131 olan&nbsp;<strong>FileNotFoundException&#39;\u0131&nbsp;<\/strong>f\u0131rlat\u0131r.<br \/>\n<br \/>\nYap\u0131lan dosya i\u015flemleri tamamland\u0131\u011f\u0131nda&nbsp;<strong>close()<\/strong> methodu ile kapat\u0131lmal\u0131d\u0131r.Aksi takdirde sistem kaynaklar\u0131&nbsp;serbest kal\u0131r ve burada bir g&uuml;venlik a&ccedil;\u0131\u011f\u0131 meydana gelmi\u015f olur.<br \/>\n<br \/>\n<strong><em>1 - Dosya Okuma<\/em><\/strong><br \/>\n<br \/>\n&Ouml;rnek &uuml;zerinden anlatay\u0131m :<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nimport java.io.FileInputStream;\nimport java.io.IOException;\n\nclass FileRead {\n public static void main(final String args[]) {\n  int i;\n  String str = &quot;&quot;;\n  FileInputStream input = null;\n\n  try {\n   input = new FileInputStream(&quot;C:\\\\first.txt&quot;);\n\n   do {\n    i = input.read();\n    if (i != -1) {\n     str += (char) i;\n    }\n   } while (i != -1);\n  } catch (final IOException e) {\n   e.printStackTrace();\n  }\n\n  try {\n   input.close();\n  } catch (final IOException e) {\n   e.printStackTrace();\n  }\n\n  System.out.println(str);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nHello World !\n<\/sh>\n\n<p>Yukar\u0131da ki programda <strong>input <\/strong>de\u011fi\u015fkeni<strong> FileInputStream <\/strong>s\u0131n\u0131f\u0131n\u0131 referans etmektedir.<strong>try <\/strong>blo\u011funun i&ccedil;erisinde nesnemizi olu\u015fturuyoruz ve bir parametreli Constructor&#39;un ald\u0131\u011f\u0131 arg&uuml;man de\u011feri dosyan\u0131n ismidir.(Dosya ismi i&ccedil;erisindeki arg&uuml;man\u0131n iki adet &quot;\\&quot; ifadesi almas\u0131n\u0131n sebebi derleyicinin &quot;\\&quot; karakterinden sonraki karakteri dikkate almadan derleme i\u015flemine devam etmesini sa\u011flad\u0131k.Yani <strong>&quot;C:\\\\first.txt&quot; <\/strong>bu de\u011ferin &ccedil;\u0131kt\u0131s\u0131 <strong>&quot;C:\\first.txt&quot;<\/strong> bu olucakt\u0131r.Onu ba\u015fka bir yaz\u0131mda anlataca\u011f\u0131m.<strong>[Escape Characters]) . do-while<\/strong> i&ccedil;erisinde ki <strong>i<\/strong> de\u011fi\u015fkenine atad\u0131\u011f\u0131m\u0131z <strong>input <\/strong>de\u011fi\u015fkeni <strong>FileInputStream<\/strong> s\u0131n\u0131f\u0131n\u0131n <strong>read()<\/strong> methodunu &ccedil;a\u011f\u0131r\u0131r ve bu method bir tamsay\u0131 de\u011fer d&ouml;nd&uuml;r&uuml;r.E\u011fer dosya okuma i\u015fleminin sonuna yakla\u015f\u0131rsa d&ouml;nd&uuml;rd&uuml;r&uuml;\u011f&uuml; de\u011fer <strong>-1<\/strong> olur.<strong>i<\/strong> de\u011fi\u015fkenini <strong>char <\/strong>tipinde <strong>cast <\/strong>ettikten sonra <strong>str&#39;ye <\/strong>ekliyoruz.Ben &ouml;rnek olarak <strong>first.txt <\/strong>i&ccedil;erisine <strong>&quot;Hello World !&quot; <\/strong>yaz\u0131p kaydettim.Okuma i\u015flemini yapt\u0131ktan sonra yukar\u0131da belirtti\u011fim gibi dosyay\u0131 kapatmam\u0131z gerekiyor.Bunuda bir <strong>try-catch <\/strong>blo\u011funda <strong>close() <\/strong>methodunu &ccedil;a\u011f\u0131rarak yap\u0131yoruz.Yap\u0131lan bu i\u015flemlerin hepsi birer <strong>IOException <\/strong>f\u0131rlatabilir.<br \/>\n<br \/>\n&nbsp;<strong><em>2 - Dosya Yazma <\/em><\/strong><br \/>\n<br \/>\nBuradaki program<strong> &quot; first.txt &quot;<\/strong> i&ccedil;erisindeki verileri <strong>&quot; second.txt &quot;<\/strong> &#39;ye aktar\u0131r.<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nclass FileRead {\n public static void main(final String args[]) {\n  int i;\n  FileInputStream input = null;\n  FileOutputStream output = null;\n\n  try {\n   input = new FileInputStream(&quot;C:\\\\first.txt&quot;);\n   output = new FileOutputStream(&quot;C:\\\\second.txt&quot;);\n\n   do {\n    i = input.read();\n    if (i != -1) {\n     output.write(i);\n    }\n   } while (i != -1);\n  } catch (final IOException e) {\n   e.printStackTrace();\n  } finally {\n   try {\n    if (input != null) {\n     input.close();\n    }\n\n   } catch (final IOException e) {\n    e.printStackTrace();\n   }\n   try {\n    if (output != null) {\n     output.close();\n    }\n   } catch (final IOException e2) {\n    e2.printStackTrace();\n   }\n  }\n\n }\n}\n<\/sh>\n\n<p>Burada <strong>&quot;Dosya Okuma&quot; <\/strong>i\u015flemlerinde yapm\u0131\u015f oldu\u011fumuz <strong>str <\/strong>&nbsp;de\u011fi\u015fkenine ekledi\u011fimiz de\u011ferleri output nesnesine <strong>FileOutputStream<\/strong> s\u0131n\u0131f\u0131n\u0131n <strong>write()<\/strong> methodunu kullanarak aktar\u0131yoruz.Bir &ouml;nceki i\u015flemlerden farkl\u0131 olarak <strong>try-catch<\/strong> blo\u011funda bir <strong>finally <\/strong>blo\u011fu yer al\u0131yor.Buras\u0131 program\u0131m\u0131za bir esneklik sa\u011fl\u0131yor.<strong>finally<\/strong> blo\u011fu her zaman <strong>try-catch <\/strong>bloklar\u0131ndan sonra kesinlikle &ccedil;al\u0131\u015ft\u0131r\u0131l\u0131r.Dosya kapatma i\u015flemlerini burdan y&ouml;netmek hem daha &ouml;nceden olu\u015fan sorunlardan &ouml;t&uuml;r&uuml; kapanmayan dosyalar\u0131 kapat\u0131r hemde kodu k\u0131salt\u0131r.<\/p>\n","date":"1432378363","tags":"java,javase, filestream , fileinputstream , fileoutputstream , java fileinputstream , java file read , java file write , try-catch , try catch , try-with resources","link":"java---dosya-okuma-ve-dosya-yazma"},{"id":"134","title":"Java - Dosya Okuma ve Dosya Yazma #2","content_half":"<p><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-dosya-okuma-ve-dosya-yazma.html\">Bir &ouml;nceki yaz\u0131ma buradan ula\u015fabilirsiniz.<\/a><br \/>\n<br \/>\nBu yaz\u0131mda daha geli\u015fmi\u015f <strong>JDK 7 <\/strong>s&uuml;r&uuml;m&uuml; ile gelen bir &ouml;zellik&nbsp;<strong>try-with resources <\/strong>ile birlikte Dosya Okuma ve Dosya Yazma<\/","content_full":"<p><a href=\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-dosya-okuma-ve-dosya-yazma.html\">Bir &ouml;nceki yaz\u0131ma buradan ula\u015fabilirsiniz.<\/a><br \/>\n<br \/>\nBu yaz\u0131mda daha geli\u015fmi\u015f <strong>JDK 7 <\/strong>s&uuml;r&uuml;m&uuml; ile gelen bir &ouml;zellik&nbsp;<strong>try-with resources <\/strong>ile birlikte <strong>Dosya Okuma ve Dosya Yazma<\/strong> i\u015flemlerini g&ouml;sterece\u011fim.<br \/>\n<br \/>\n<strong>JDK 7<\/strong>&#39;den &ouml;nce dosya kapatma i\u015flemi halen ge&ccedil;erli ve faydal\u0131 olmas\u0131na ra\u011fmen , yeni &ouml;zellik ile kapatma i\u015flemini otomatik hale getirerek daha kullan\u0131\u015fl\u0131 bir yap\u0131 olu\u015fturur.<br \/>\n<br \/>\nArt\u0131k bu yeni &ouml;zellik ile <strong>close() <\/strong>methodunu &ccedil;a\u011f\u0131rmam\u0131za gerek yoktur.Bir ba\u015fka deyi\u015fle dosyay\u0131 kapatmay\u0131 unutmam\u0131za imkan yoktur.<br \/>\nHemen &ouml;rnek &uuml;zerinde bunu g&ouml;relim.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nclass FileRead {\n public static void main(final String args[]) {\n  int i;\n\n  try (FileInputStream input = new FileInputStream(&quot;C:\\\\first.txt&quot;);\n    FileOutputStream output = new FileOutputStream(&quot;C:\\\\second.txt&quot;)) {\n\n   do {\n    i = input.read();\n    if (i != -1) {\n     output.write(i);\n    }\n\n   } while (i != -1);\n  } catch (final IOException e) {\n   e.printStackTrace();\n  }\n }\n}\n<\/sh>\n\n<p>Bu program ile <strong>&quot; Dosya Yazma &quot; <\/strong>b&ouml;l&uuml;m&uuml;ndeki program ayn\u0131 i\u015flemi yapar.Daha k\u0131sa ve sade bir kullan\u0131ma sahiptir.Ayr\u0131ca daha kullan\u0131\u015fl\u0131d\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\ntry (FileInputStream input = new FileInputStream(&quot;C:\\\\first.txt&quot;);\n    FileOutputStream output = new FileOutputStream(&quot;C:\\\\second.txt&quot;)) {<\/sh>\n\n<p>Buradaki kullan\u0131ma dikkat edelim.<strong>try <\/strong>blo\u011fu sonland\u0131\u011f\u0131nda otomatik olarak <strong>input <\/strong>ve <strong>output <\/strong>dosya i\u015flemleri kapat\u0131lacakt\u0131r.<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1432378363","tags":"java,javase , filestream , fileinputstream , fileoutputstream , java fileinputstream , java file read , java file write , try-catch , try catch , try-with resources","link":"java---dosya-okuma-ve-dosya-yazma-sharp2"},{"id":"135","title":"Java  - instanceof Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"<p>Bu yaz\u0131mda instanceof anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n ne i\u015fe yarad\u0131\u011f\u0131n\u0131 ve kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m.<br \/>\r\nJava&#39;da ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;m&uuml; bir &ccedil;al\u0131\u015fma hatas\u0131na neden olur.Ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mlerinin &ccedil;o\u011fu &ccedil;al\u0131\u015fma zaman\u0131nda yakalanabilir.Ancak s\u0131n?","content_full":"<p>Bu yaz\u0131mda instanceof anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n ne i\u015fe yarad\u0131\u011f\u0131n\u0131 ve kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m.<br \/>\nJava&#39;da ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;m&uuml; bir &ccedil;al\u0131\u015fma hatas\u0131na neden olur.Ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mlerinin &ccedil;o\u011fu &ccedil;al\u0131\u015fma zaman\u0131nda yakalanabilir.Ancak s\u0131n\u0131f hiyerar\u015fisindeki tip d&ouml;n&uuml;\u015f&uuml;mleri ancak &ccedil;al\u0131\u015fma zaman\u0131nda alg\u0131labilen ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mleri &uuml;retebilirler.Bu bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 f\u0131rlat\u0131r.Java bu durumlara &ccedil;&ouml;z&uuml;m bulabilmek i&ccedil;in <strong>instanceof <\/strong>ad\u0131nda bir &ccedil;al\u0131\u015fma zaman\u0131 operatoru tan\u0131mlar.<br \/>\n&nbsp;Kullan\u0131m \u015fekli a\u015fa\u011f\u0131da oldu\u011fu gibidir.<br \/>\n&nbsp;<\/p>\n\n<sh>\n&lt; &Ouml;rnek Referans &gt; instanceof &lt; S\u0131n\u0131f Tipi&gt;\n<\/sh>\n\n<p><strong>&quot;&Ouml;rnek Referans&quot; <\/strong> belirtilen s\u0131n\u0131f tipinde ise veya belirtilen tipe d&ouml;n&uuml;\u015ft&uuml;rebiliyorsa <strong>true<\/strong> de\u011ferini d&ouml;nd&uuml;r&uuml;r. Bir &ouml;rnek ile inceleyelim.<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\n\/**\n * @Author    : Ali Can Ku\u015ftemur\n * @Date      : 24 May 2015\n * @File_Name : InstanceOf.java\n * @Blog      : http:\/\/alicankustemur.github.io \n *\/\nclass Ford {\n int weight, model;\n}\n\nclass Volkswagen {\n int weight, model;\n}\n\nclass GT extends Ford {\n int speed;\n}\n\nclass Mustang extends Ford {\n int speed;\n\n}\n\nclass InstanceOf {\n public static void main(final String args[]) {\n  final Ford car = new Ford();\n  final Volkswagen car1 = new Volkswagen();\n  final GT car2 = new GT();\n  final Mustang car3 = new Mustang();\n\n  if (car instanceof Ford) {\n   System.out.println(&quot;car &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Ford s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n  if (car1 instanceof Volkswagen) {\n   System.out.println(&quot;car1 &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Volkswagen s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n  if (car2 instanceof GT) {\n   System.out.println(&quot;car2 &ouml;rnek referans\u0131 ,&quot;\n     + &quot; GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n  if (car3 instanceof Mustang) {\n   System.out.println(&quot;car3 &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n  if (car instanceof GT) {\n   System.out.println(&quot;car &ouml;rnek referans\u0131 ,&quot;\n     + &quot; GT s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;);\n  }\n\n  System.out.println();\n\n  Ford newCar;\n\n  newCar = car3;\n\n  if (newCar instanceof Mustang) {\n   System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n\n  newCar = car2;\n\n  if (newCar instanceof GT) {\n   System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot;\n     + &quot; GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;);\n  }\n\n  if (newCar instanceof Mustang) {\n   System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;);\n  } else {\n   System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lemez!&quot;);\n  }\n\n  if (newCar instanceof Ford) {\n   System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot;\n     + &quot; Ford s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;);\n  }\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131:\ncar &ouml;rnek de\u011fi\u015fkeni , Ford s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\ncar1 &ouml;rnek referans\u0131 , Volkswagen s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\ncar2 &ouml;rnek referans\u0131 , GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\ncar3 &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\n\nnewCar &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\nnewCar &ouml;rnek referans\u0131 , GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.\nnewCar &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lemez!\nnewCar &ouml;rnek referans\u0131 , Ford s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.\n<\/sh>\n\n<p>&nbsp;<\/p>\n","date":"1432464763","tags":"java,javase , instanceof , java instanceof kullan\u0131m\u0131 , instaceof nedir , java instanceof nedir","link":"java---instanceof-anahtar-sozcugu"},{"id":"136","title":"Java - Jenerikler ( Generics )","content_half":"<p>Merhaba , bu yaz\u0131mda Jenerikler(Generics)&#39;den bahsedece\u011fim. Jenerikler Java&#39;ya JDK 5 ile eklenmi\u015ftir.<br \/>\r\n<strong><em>Jeneriklerin kullan\u0131ld\u0131\u011f\u0131 kaynak kodlar javac derleyicisinin daha &ouml;nceki versiyonlar\u0131nda derlenemez. <\/em><\/strong><br \/>\r\n<strong>Jenerikler<\/strong>,<strong> Java&#39;y\u0131 <\/strong>iki &ouml;nemli bak\u0131md","content_full":"<p>Merhaba , bu yaz\u0131mda Jenerikler(Generics)&#39;den bahsedece\u011fim. Jenerikler Java&#39;ya JDK 5 ile eklenmi\u015ftir.<br \/>\n<strong><em>Jeneriklerin kullan\u0131ld\u0131\u011f\u0131 kaynak kodlar javac derleyicisinin daha &ouml;nceki versiyonlar\u0131nda derlenemez. <\/em><\/strong><br \/>\n<strong>Jenerikler<\/strong>,<strong> Java&#39;y\u0131 <\/strong>iki &ouml;nemli bak\u0131mdan de\u011fi\u015ftirmi\u015ftir.Birincisi , bu yeni &ouml;zellik dile yeni bir s&ouml;zdizimi &ouml;\u011fesi eklemi\u015ftir.\u0130kincisi ise , &ccedil;ekirdek <strong>API&#39;daki <\/strong>bir&ccedil;ok s\u0131n\u0131f ve method&#39;da de\u011fi\u015fikliklere neden olmu\u015ftur.Java kodlar\u0131n\u0131n yaz\u0131lma bi&ccedil;imini temelden de\u011fi\u015ftirmi\u015ftir.<br \/>\nTemel olarak jenerikler terimi , <em>parametreli tipler <\/em>anlam\u0131na gelir.Bu yap\u0131 &ouml;nemlidir , &uuml;zerinde &ccedil;al\u0131\u015facaklar\u0131 veri tipinin bir parametre olarak belirtildi\u011fi s\u0131n\u0131flar , arabirimler ve methodlar olu\u015fturabilmenizi sa\u011flar.<br \/>\n<strong>Jenerikler&#39;den <\/strong>&ouml;nce <strong>Object <\/strong>tipindeki referanslar yoluyla yaz\u0131lan kaynak kodlar\u0131 hala g&uuml;n&uuml;m&uuml;zde kullan\u0131ma devam etmektedir.<strong>Object <\/strong>tipindeki sorun tip g&uuml;venli\u011fi olmamas\u0131yd\u0131.<strong>Jenerikler <\/strong>bu soruna &ccedil;&ouml;z&uuml;m olarak tasarlanm\u0131\u015ft\u0131r.Ayr\u0131ca s&uuml;reci h\u0131zland\u0131r\u0131r art\u0131k <strong>Object <\/strong>ve &uuml;zerinde &ccedil;al\u0131\u015fan tip aras\u0131nda d&ouml;n&uuml;\u015f&uuml;m yap\u0131lmas\u0131na gerek duyulmaz.<strong>Jeneriklerde <\/strong>t&uuml;m tip atamalar\u0131 otomatik ve kapal\u0131 olarak yap\u0131l\u0131r.Bu \u015fekilde Jenerikler kodunuzu tekrar kullanabilme yetene\u011finizi artt\u0131r\u0131r , bunu g&uuml;venle ve kolayl\u0131kla yapabilmenizi sa\u011flar.Bir &ouml;rnek &uuml;zerinden inceleyelim.<br \/>\n<br \/>\n\n<sh class=\"brush: java\">\nclass NonGen {\n Object type;\n\n NonGen(final Object type) {\n  this.type = type;\n }\n\n Object getObject() {\n  return type;\n }\n\n void showType() {\n  System.out.println(&quot;Object type&#39;\u0131n tipi :&quot; + type.getClass().getName());\n }\n\n}\n\nclass NonGenDemo {\n public static void main(final String args[]) {\n  final NonGen intType = new NonGen(35);\n  final int v = (Integer) intType.getObject();\n  intType.showType();\n  System.out.println(&quot;De\u011feri :&quot; + v);\n\n  System.out.println();\n\n  final NonGen strType = new NonGen(&quot;Hello World!&quot;);\n  final String str = (String) strType.getObject();\n  strType.showType();\n  System.out.println(&quot;De\u011feri : &quot; + str);\n\n  System.out.println();\n\n  final NonGen doubleType = new NonGen(12.5);\n  final Double d = (Double) doubleType.getObject();\n  doubleType.showType();\n  System.out.println(&quot;De\u011feri : &quot; + d);\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nObject type&#39;\u0131n tipi :java.lang.Integer\nDe\u011feri :35\n\nObject type&#39;\u0131n tipi :java.lang.String\nDe\u011feri : Hello World!\n\nObject type&#39;\u0131n tipi :java.lang.Double\nDe\u011feri : 12.5\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p><br \/>\nYukar\u0131daki programda <strong>Object <\/strong>tan\u0131mlamalar\u0131 oldu\u011fu i&ccedil;in <strong>NonGen&#39;in jenerik versiyon<\/strong> gibi her tipte nesneyi depolayabilmesini sa\u011flar.Ancak ayn\u0131 zamanda java derleyicisinin ger&ccedil;ekte <strong>NonGen <\/strong>i&ccedil;erisinde depolanan verinin tipi hakk\u0131nda ger&ccedil;ek bir bilgiye sahip olmas\u0131n\u0131 &ouml;nler.Bu , iki nedenle k&ouml;t&uuml;d&uuml;r.<strong><em>Birincisi depolanan veriyi elde etmek i&ccedil;in a&ccedil;\u0131k tip atamalar\u0131 gereklidir.\u0130kincisi ise &ccedil;al\u0131\u015fma zaman\u0131nda &ccedil;e\u015fitli t&uuml;rlerde tip uyu\u015fmazl\u0131\u011f\u0131 hatalar\u0131 olu\u015fabilir. <\/em><\/strong><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\nint v = (Integer) intType.getObject();<\/sh>\n\n<p><br \/>\nBurada ,<strong> getObject() <\/strong>methodunun d&ouml;n&uuml;\u015f tipi <strong>Object <\/strong>oldu\u011fundan , de\u011ferin kutudan &ccedil;\u0131kart\u0131l\u0131p<strong> v <\/strong>de\u011fi\u015fkeninde depolanmas\u0131n\u0131 sa\u011flamak i&ccedil;in <strong>Integer&#39;a <\/strong>tip atamas\u0131 gereklidir.Tip atamas\u0131n\u0131 kald\u0131r\u0131rsan\u0131z program derlenmemez.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\nintType = strType;\nv = (Integer) intType.getObject();<\/sh>\n\n<p><br \/>\nBurada bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 olu\u015fur.&Ccedil;&uuml;nk&uuml; <strong>intType&#39;a strType <\/strong>atan\u0131r.Ancak <strong>strType <\/strong>bir tamsay\u0131 de\u011fil , karakter katar\u0131 i&ccedil;eren bir nesneye referans yapar.Bu atama s&ouml;zdizimsel a&ccedil;\u0131dan ge&ccedil;erli de\u011fildir.&Ccedil;&uuml;nk&uuml; t&uuml;m <strong>NonGen <\/strong>referanslar\u0131 ayn\u0131d\u0131r ve herhangi bir <strong>NonGen <\/strong>referans\u0131 bir ba\u015fka <strong>NonGen <\/strong>nesnesine referans yapabilir.Ancak bu mant\u0131ksal olarak yanl\u0131\u015ft\u0131r.<strong>getObject() <\/strong>methodunun d&ouml;&uuml;\u015f tipi tip atamas\u0131yla integer yap\u0131l\u0131r ve sonra bu de\u011feri <strong>v<\/strong> de\u011fi\u015fkenine atama yap\u0131l\u0131r.Sorun art\u0131k <strong>intType&#39;in <\/strong>bir Integer de\u011fil bir <strong>String <\/strong>i&ccedil;eren nesneye referans yapmas\u0131d\u0131r.\u0130\u015fte burada <strong>Jenerikler <\/strong>kullan\u0131lmadan java derleyicisinin bunu bilmesine imkan yoktur ve bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 ortaya &ccedil;\u0131km\u0131\u015ft\u0131r.<strong>Jeneriklerde <\/strong>ayn\u0131 i\u015flem denenseydi , derleyici sorunu yakalayacak ve bir hata bildirecekti.Bu da bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131n\u0131 &ouml;nleyecekti.<strong>Jenerikler <\/strong>sayesinde olu\u015fan &ccedil;al\u0131\u015fma zaman\u0131 hatalar\u0131 , art\u0131k derlenme zaman\u0131 hatas\u0131 haline gelmi\u015ftir.<br \/>\n<br \/>\n<em><strong>Bir programc\u0131n\u0131n en &ccedil;ok korktu\u011fu \u015feydir bu! E\u011fer iyi bir programc\u0131 olmak istiyorsak , kullanaca\u011f\u0131m\u0131z her\u015fey t&uuml;m kurallara uygun olmal\u0131d\u0131r.\u0130yi bir programc\u0131 &ccedil;al\u0131\u015fma zaman\u0131 hatalar\u0131na izin vermemelidir.Bir i\u015fi yapan her program do\u011fru sonu&ccedil;lar verebilir fakat do\u011fru kullan\u0131ma sahip de\u011fildir &nbsp;:)<\/strong><\/em><br \/>\n<br \/>\n\u015eimdi yukar\u0131da ki program\u0131n <strong>Jenerik <\/strong>versiyonunu olu\u015ftural\u0131m.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\n\nclass Gen {\n T type;\n\n Gen(final T type) {\n  this.type = type;\n }\n\n T getType() {\n  return type;\n }\n\n void showType() {\n  System.out.println(&quot;Jenerik type&#39;\u0131n tipi : &quot;+ type.getClass().getName());\n }\n\n}\n\nclass GenDemo {\n public static void main(final String args[]) {\n  final Gen intType = new Gen(35);\n  intType.showType();\n  final int v = intType.getType();\n  System.out.println(&quot;De\u011feri :&quot; + v);\n\n  System.out.println();\n\n  final Gen strType = new Gen(&quot;Hello World!&quot;);\n  strType.showType();\n  final String str = strType.getType();\n  System.out.println(&quot;De\u011feri : &quot; + str);\n\n  System.out.println();\n\n  final Gen doubleType = new Gen(12.5);\n  doubleType.showType();\n  final Double d = doubleType.getType();\n  System.out.println(&quot;De\u011feri : &quot; + d);\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 :\nJenerik type&#39;\u0131n tipi : java.lang.Integer\nDe\u011feri :35\n\nJenerik type&#39;\u0131n tipi : java.lang.String\nDe\u011feri : Hello World!\n\nJenerik type&#39;\u0131n tipi : java.lang.Double\nDe\u011feri : 12.5\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nclass Gen { ..<\/sh>\n\n<p><br \/>\nBu kullan\u0131ma dikkat edelim.<br \/>\n<strong>T<\/strong> , bir tip parametresinin ad\u0131d\u0131r.Bu ad nesne olu\u015fturulurken <strong>Gen <\/strong>s\u0131n\u0131f\u0131na aktar\u0131lacak olan ger&ccedil;ek tip i&ccedil;in bir <em><strong>yer tutucudur.<\/strong><\/em>Bu y&uuml;zden <strong>type <\/strong>, <strong>T<\/strong>&#39;ye akrat\u0131lan tipte bir nesne olucakt\u0131r.&Ouml;rnekte oldu\u011fu gibi <strong>T<\/strong>&#39;ye aktar\u0131lan tip<strong> Integer,String ve Double <\/strong>tipleri , <strong>type&#39;\u0131 <\/strong>o tipe ait bir nesne yap\u0131yor.<strong>Java <\/strong>derleyicisinin ger&ccedil;ekte <strong>Gen&#39;in <\/strong>ya da bir ba\u015fka <strong>jenerik <\/strong>s\u0131n\u0131f\u0131n de\u011fi\u015fik versiyonlar\u0131n\u0131n olu\u015fturulmad\u0131\u011f\u0131n\u0131 belirtmemiz gerekir.<strong>Derleyici <\/strong>, t&uuml;m <strong>jenerik <\/strong>tip bilgilerini ortadan kald\u0131r\u0131r.Bu i\u015fleme <em><strong>silme( erasure ) <\/strong><\/em>denir.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<sh class=\"brush: java\">\nGen intType = new Gen(35);<\/sh>\n\n<p><br \/>\nBu sat\u0131r <strong>Gen constructoru<\/strong> &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda , <strong>Integer <\/strong>tip arg&uuml;man\u0131n\u0131n da belirtildi\u011fine dikkat edelim.Bu gereklidir , &ccedil;&uuml;nk&uuml; referans atanaca\u011f\u0131 nesnenin <strong>(intType) <\/strong>tipi <strong>Gen &lt; Integer &gt;<\/strong>&#39;d\u0131r.Bu y&uuml;zden <strong>new <\/strong>taraf\u0131ndan d&ouml;nd&uuml;r&uuml;len referansda ayn\u0131 tipe sahip olmal\u0131d\u0131r.De\u011filse bir derleme zaman\u0131 hatas\u0131 ger&ccedil;ekle\u015fir.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\nGen intType;\nintType = new Gen(35);<\/sh>\n\n<p><br \/>\nYukar\u0131daki kod buna bir &ouml;rnektir.Nesne <strong>Gen<\/strong><strong> <\/strong>tipinde oldu\u011fundan <strong>Gen<\/strong><strong> <\/strong>tipinde bir nesneye ba\u015fvuramaz.Tip kontrol&uuml; <strong>Jeneriklerin <\/strong>en ba\u015fl\u0131ca avantajlar\u0131ndan biridir.<br \/>\n<br \/>\nJenerikler sadece nesnelerle &ccedil;al\u0131\u015f\u0131r.Jenerik bir tipte &ouml;rnek deklare ederken , tip parametresine aktar\u0131lan tip s\u0131n\u0131f tipi olmal\u0131d\u0131r.int yada char gibi bir primitif tip kullan\u0131lamaz.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\nGen intType = new Gen(35);\n<\/sh>\n\n<p>&Ouml;rnek olarak <strong>Gen <\/strong>s\u0131n\u0131f\u0131nda , <strong>T&#39;<\/strong>ye herhangi bir s\u0131n\u0131f tipi aktarabilirsiniz,ancak tip parametresine bir primitif tip aktaramazs\u0131n\u0131z.<br \/>\n<br \/>\n<br \/>\nJenerikler iki tip parametreli olarakda kullan\u0131labilir.A\u015fa\u011f\u0131daki program\u0131 inceleyelim.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n\n<sh class=\"brush: java\">\n\nclass TwoGen {\n T type;\n Y type2;\n\n TwoGen(final T type, final Y type2) {\n  this.type = type;\n  this.type2 = type2;\n }\n\n T getType() {\n  return type;\n }\n\n Y getType2() {\n  return type2;\n }\n\n void showType() {\n  System.out.println(&quot;Jenerik type&#39;\u0131n tipi : &quot;\n    + type.getClass().getName());\n  System.out.println(&quot;Jenerik type2&#39;\u0131n tipi : &quot;\n    + type2.getClass().getName());\n }\n\n}\n\nclass GenDemo {\n public static void main(final String args[]) {\n  final TwoGen twoType = new TwoGen(35,\n    &quot;Hello World!&quot;);\n  twoType.showType();\n  final int v = twoType.getType();\n  System.out.println(&quot;De\u011feri (int):&quot; + v);\n\n  final String str = twoType.getType2();\n  System.out.println(&quot;De\u011feri (String):&quot; + str);\n\n }\n}\nProgram\u0131n &Ccedil;\u0131kt\u0131s\u0131 : \nJenerik type&#39;\u0131n tipi : java.lang.Integer\nJenerik type2&#39;\u0131n tipi : java.lang.String\nDe\u011feri (int):35\nDe\u011feri (String):Hello World!\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1432464763","tags":"java,javase, jenerikler , java generics , generic , generics , java collections , java collection framework","link":"java---jenerikler-generics"},{"id":"137","title":"Giri\u015f Sayfas\u0131 ve CRUD Paneli (Servlet JSP \/ PHP)","content_half":"<p>Bu yaz\u0131mda yapm\u0131\u015f oldu\u011fum ufak bir projeyi payla\u015f\u0131yorum.<br \/>\nProjeyi kaynak belirtmeden herhangi bir yerde kullanabilirsiniz.<br \/>\nBir giri\u015f sayfam\u0131z var,e\u011fer giri\u015f ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015firse yine giri\u015f sayfas\u0131 i&ccedil;in anl\u0131k olarak kullan\u0131c\u0131\/yetkili olu\u015furup , listeleyip, g&uuml;ncelleyip , silebilece","content_full":"<p>Bu yaz\u0131mda yapm\u0131\u015f oldu\u011fum ufak bir projeyi payla\u015f\u0131yorum.<br \/>\nProjeyi kaynak belirtmeden herhangi bir yerde kullanabilirsiniz.<br \/>\nBir giri\u015f sayfam\u0131z var,e\u011fer giri\u015f ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015firse yine giri\u015f sayfas\u0131 i&ccedil;in anl\u0131k olarak kullan\u0131c\u0131\/yetkili olu\u015furup , listeleyip, g&uuml;ncelleyip , silebilece\u011fimiz bir sayfa geliyor.<br \/>\nVeritaban\u0131 sunucusu olarak <strong>MySQL<\/strong>&#39;i kulland\u0131m.Baz\u0131 i\u015flemler i&ccedil;in &ccedil;ok k\u0131sa <strong>JavaScript <\/strong>kullan\u0131lm\u0131\u015ft\u0131r.<br \/>\n<br \/>\n<strong>Servlet <\/strong>ile olu\u015fturulan versiyonu <strong>JDBC <\/strong>, <strong>JSP <\/strong>sayfalar\u0131 ise <strong>JSTL <\/strong>kullan\u0131larak&nbsp; <strong>MVC <\/strong>ve <strong>DAO <\/strong>Tasar\u0131m \u015eablonlar\u0131 uygulanarak <strong>Maven Project <\/strong>olarak<strong> Eclipse<\/strong>&#39;de haz\u0131rlanm\u0131\u015ft\u0131r.<br \/>\n<br \/>\n<strong>PHP <\/strong>versiyonunda herhangi bir framework kullan\u0131lmam\u0131\u015ft\u0131r.<br \/>\n<br \/>\n<strong>Servlet&nbsp; JSP <\/strong>versiyonu <strong>GitHub <\/strong>linki :<br \/>\n<a href=\"https:\/\/github.com\/kustemura\/LoginCrudServletJSPExample\">https:\/\/github.com\/kustemura\/LoginCrudServletJSPExample<\/a><br \/>\n<br \/>\n<strong>Servlet JSP <\/strong>versiyonu<strong> Google Drive<\/strong> linki :<br \/>\n<a href=\"https:\/\/drive.google.com\/file\/d\/0BytHrEwKQAMjOVJFMERZRThuRTg\/view\">https:\/\/drive.google.com\/file\/d\/0BytHrEwKQAMjOVJFMERZRThuRTg\/view<\/a><br \/>\n<br \/>\n<strong>PHP <\/strong>versiyonu <strong>GitHub <\/strong>linki :<br \/>\n<a href=\"https:\/\/github.com\/kustemura\/LoginCrudPHPExample\">https:\/\/github.com\/kustemura\/LoginCrudPHPExample<\/a><br \/>\n<br \/>\n<strong>PHP<\/strong> versiyonu <strong>Google Drive<\/strong> linki :<br \/>\n<a href=\"https:\/\/drive.google.com\/open?id=0BytHrEwKQAMjT3ZJRWhHTV80c1E\">https:\/\/drive.google.com\/open?id=0BytHrEwKQAMjT3ZJRWhHTV80c1E<\/a><br \/>\n<br \/>\nA\u015fa\u011f\u0131daki resimler projenin 2 versiyonundaki ekran g&ouml;r&uuml;nt&uuml;leri bulunmaktad\u0131r.<br \/>\n<br \/>\nGiri\u015f Sayfas\u0131<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-UHXRR_QlEv4\/VZwVXknG07I\/AAAAAAAABqo\/ZZ97yROautY\/s1600\/1.png\"><img src=\"http:\/\/4.bp.blogspot.com\/-UHXRR_QlEv4\/VZwVXknG07I\/AAAAAAAABqo\/ZZ97yROautY\/s1600\/1.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><br \/>\n&nbsp;&nbsp;&nbsp; giri\u015f sayfas\u0131nda olu\u015fan durumlar i&ccedil;in bir validasyon sistemine sahip ve &uuml;st tarafta uyar\u0131lar olu\u015fmakta .Kullan\u0131c\u0131 ad\u0131 veya \u015fifre bo\u015f ge&ccedil;ilirse ,<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-frKhNOt-wmE\/VZwW7e7PbCI\/AAAAAAAABq8\/0KCzE_6mzy4\/s1600\/3.png\"><img src=\"http:\/\/4.bp.blogspot.com\/-frKhNOt-wmE\/VZwW7e7PbCI\/AAAAAAAABq8\/0KCzE_6mzy4\/s1600\/3.png\" \/>&nbsp;<\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>sistemdeki t&uuml;m kullan\u0131c\u0131lar\u0131 kald\u0131r\u0131p &ccedil;\u0131k\u0131\u015f yapt\u0131ktan sonra tekrar giri\u015f yapmay\u0131 denersek ,<br \/>\n&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-DZ2Gkkie2i4\/VZwY9NLWC2I\/AAAAAAAABrI\/YYsF1Yp_-8w\/s1600\/13.png\"><img src=\"http:\/\/4.bp.blogspot.com\/-DZ2Gkkie2i4\/VZwY9NLWC2I\/AAAAAAAABrI\/YYsF1Yp_-8w\/s1600\/13.png\" \/><\/a><\/p>\n\n<p><br \/>\n&nbsp;hatal\u0131 girilirse ,<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-xQC0LW1sFTM\/VZwW3TBxC8I\/AAAAAAAABq0\/E1UJRMLxvAA\/s1600\/2.png\"><img src=\"http:\/\/3.bp.blogspot.com\/-xQC0LW1sFTM\/VZwW3TBxC8I\/AAAAAAAABq0\/E1UJRMLxvAA\/s1600\/2.png\" \/>&nbsp;<\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>e\u011fer giri\u015f yapan ki\u015fi yetkili de\u011fil ise ,&nbsp;&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/1.bp.blogspot.com\/-Tixpw27H27A\/VZwaJhkxQwI\/AAAAAAAABrQ\/F4nvroonpzQ\/s1600\/5.png\"><img src=\"http:\/\/1.bp.blogspot.com\/-Tixpw27H27A\/VZwaJhkxQwI\/AAAAAAAABrQ\/F4nvroonpzQ\/s1600\/5.png\" \/><\/a>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>kullan\u0131c\u0131 ad\u0131 ve \u015fifre do\u011fru girildikten sonra giren ki\u015fi yetkili ise CRUD paneli ve kullan\u0131c\u0131 listesi sayfas\u0131 ekran\u0131 gelmektedir.<\/p>\n\n<p><a href=\"http:\/\/1.bp.blogspot.com\/-O5jyKDtoOfg\/VZwblUb8GdI\/AAAAAAAABrY\/lT2JXjbiQfE\/s1600\/14.png\"><img src=\"http:\/\/1.bp.blogspot.com\/-O5jyKDtoOfg\/VZwblUb8GdI\/AAAAAAAABrY\/lT2JXjbiQfE\/s1600\/14.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>Yap\u0131lan di\u011fer i\u015flemlerde olu\u015fan ekran g&ouml;r&uuml;nt&uuml;leri a\u015fa\u011f\u0131dad\u0131r.<\/p>\n\n<p><a href=\"http:\/\/1.bp.blogspot.com\/-uPzDuPQIbXA\/VZwcCcO9qpI\/AAAAAAAABro\/5dzauJaX5fU\/s1600\/4.png\"><img src=\"http:\/\/1.bp.blogspot.com\/-uPzDuPQIbXA\/VZwcCcO9qpI\/AAAAAAAABro\/5dzauJaX5fU\/s1600\/4.png\" \/><\/a><\/p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br \/>\n&nbsp;ayn\u0131 isme sahip eklemelere izin verilmez.<br \/>\n&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-lTi7kWQCQ30\/VZwcBwRazeI\/AAAAAAAABrg\/F8IhPx2r40I\/s1600\/7.png\"><img src=\"http:\/\/3.bp.blogspot.com\/-lTi7kWQCQ30\/VZwcBwRazeI\/AAAAAAAABrg\/F8IhPx2r40I\/s1600\/7.png\" \/>&nbsp;<\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>G&uuml;ncelleme yap\u0131laca\u011f\u0131 zaman sadece kullan\u0131c\u0131 ad\u0131 de\u011fi\u015ftirilip \u015fifre bo\u015f ge&ccedil;ilirse ayn\u0131 \u015fifre ge&ccedil;erlili\u011fini devam ettirmektedir.G&uuml;ncellemeden &ouml;nce<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/3.bp.blogspot.com\/-CG_5udzNgGk\/VZwc1f2RuTI\/AAAAAAAABrw\/ZeyAP1W7eNE\/s1600\/8.png\"><img src=\"http:\/\/3.bp.blogspot.com\/-CG_5udzNgGk\/VZwc1f2RuTI\/AAAAAAAABrw\/ZeyAP1W7eNE\/s1600\/8.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-ZH-2tHTtP6k\/VZwc1gjgnPI\/AAAAAAAABr8\/iudLD9-oPa4\/s1600\/9.png\"><img src=\"http:\/\/4.bp.blogspot.com\/-ZH-2tHTtP6k\/VZwc1gjgnPI\/AAAAAAAABr8\/iudLD9-oPa4\/s1600\/9.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>g&uuml;ncellendikten sonra ,<br \/>\n&nbsp;<\/p>\n\n<p><a href=\"http:\/\/4.bp.blogspot.com\/-qaJyR3uIJhM\/VZwfUsg81bI\/AAAAAAAABsE\/N7xHlRjNTKs\/s1600\/10.png\"><img src=\"http:\/\/4.bp.blogspot.com\/-qaJyR3uIJhM\/VZwfUsg81bI\/AAAAAAAABsE\/N7xHlRjNTKs\/s1600\/10.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/2.bp.blogspot.com\/-3nFnHKuAlkg\/VZwfUzbp7kI\/AAAAAAAABsI\/h7PM-8z48zw\/s1600\/11.png\"><img src=\"http:\/\/2.bp.blogspot.com\/-3nFnHKuAlkg\/VZwfUzbp7kI\/AAAAAAAABsI\/h7PM-8z48zw\/s1600\/11.png\" \/>&nbsp;<\/a><\/p>\n\n<p>kullan\u0131c\u0131 ad\u0131 ve \u015fifre g&uuml;ncellendi\u011finde ,&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/1.bp.blogspot.com\/-tpDx3FRTQIA\/VZwfpF1I96I\/AAAAAAAABsU\/m3DbqIktnbE\/s1600\/12.png\"><img src=\"http:\/\/1.bp.blogspot.com\/-tpDx3FRTQIA\/VZwfpF1I96I\/AAAAAAAABsU\/m3DbqIktnbE\/s1600\/12.png\" \/>&nbsp;<\/a><\/p>\n\n<p>silinmek istendi\u011finde<\/p>\n\n<p>&nbsp;<\/p>\n\n<p><a href=\"http:\/\/2.bp.blogspot.com\/-e9L0nCi8_M8\/VZwfsHFhb9I\/AAAAAAAABsc\/l-PK-80qcwo\/s1600\/6.png\"><img src=\"http:\/\/2.bp.blogspot.com\/-e9L0nCi8_M8\/VZwfsHFhb9I\/AAAAAAAABsc\/l-PK-80qcwo\/s1600\/6.png\" \/><\/a><\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n","date":"1436266363","tags":"java,servletjsp,servlet,jsp,java login crud page , java login page , java crud , java servlet jsp , servlet jsp crud","link":"giris-sayfasi-ve-crud-paneli-servlet-jsp-php"},{"id":"138","title":"indir.com Mobil Uygulama \u00d6d\u00fclleri 2016 Yar\u0131\u015fmas\u0131","content_half":"<p>\u0130ndir.com ekibini d&uuml;zenlemi\u015f oldu\u011fu &lsquo;indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n 3. Turu i&ccedil;in ba\u015fvurular ba\u015flad\u0131!<\/p>","content_full":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt=\"\" src=\"http:\/\/alicankustemur.github.io\/images\/logo.jpg\" \/><\/p>\n\n<p>\u0130ndir.com ekibini d&uuml;zenlemi\u015f oldu\u011fu &lsquo;indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n 3. Turu i&ccedil;in ba\u015fvurular ba\u015flad\u0131!<\/p>\n\n<p>Her ya\u015ftan geli\u015ftiricinin kat\u0131lma f\u0131rsat\u0131 buldu\u011fu Mobil Uygulama Yar\u0131\u015fmas\u0131&rsquo;nda tek \u015fart uygulama veya oyunun 1 Ocak 2016 tarihinden sonra uygulama ma\u011fazas\u0131na y&uuml;klenmi\u015f olmas\u0131.<\/p>\n\n<p>Mobil uyumlu uygulama ve oyunlar\u0131n tan\u0131t\u0131lmas\u0131na destek olmak amac\u0131yla d&uuml;zenlenen indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n bu y\u0131l ki program\u0131nda de\u011fi\u015fiklik yap\u0131ld\u0131.<\/p>\n\n<p>\u0130lki 2014 y\u0131l\u0131nda ba\u015flayan ve ard\u0131ndan 2015 y\u0131l\u0131nda devam eden Mobil Uygulama Yar\u0131\u015fmas\u0131&rsquo;n\u0131n 2016 takvimi 2 etkinlik ve 2 yar\u0131\u015fma \u015feklinde d&uuml;zenlendi.<\/p>\n\n<p>Yar\u0131\u015fmac\u0131lar daha fazla kullan\u0131c\u0131ya ula\u015fmay\u0131 bekleyen mobil uygulamalar\u0131n\u0131 tan\u0131tma f\u0131rsat\u0131 bulabilecekleri gibi ayn\u0131 zamanda muhte\u015fem &ouml;d&uuml;llerin de sahibi olacak.<\/p>\n\n<p>Yar\u0131\u015fmaya kat\u0131lmaya hak kazanan uygulamalar &ouml;nce j&uuml;ri daha sonra halk oylamas\u0131ndan ge&ccedil;erek ilk 3&rsquo;&uuml; belirlenecek. De\u011ferlendirmelerin ard\u0131ndan dereceye giren uygulama veya oyunlar i&ccedil;in geli\u015ftiricilere harika &ouml;d&uuml;ller takdim edilecek.<\/p>\n\n<p><strong>Kazananlara Verilecek &Ouml;d&uuml;ller<\/strong><\/p>\n\n<p><strong>Birinciye<\/strong> 1 hafta Silikon Vadisi tatili (San Francisco), bukalemun.com&#39;dan 5000 TL de\u011ferinde ASO hizmeti,&nbsp;indir.com&#39;dan 5.000TL de\u011ferinde reklam.<\/p>\n\n<p><strong>\u0130kinciye<\/strong> Antalya&#39;da 1 hafta tatil,&nbsp;indir.com&#39;dan 2.500TL de\u011ferinde uygulaman\u0131n tan\u0131t\u0131m\u0131.<\/p>\n\n<p>&Uuml;&ccedil;&uuml;nc&uuml;ye Antalya&#39;da 3 g&uuml;n tatil,&nbsp;indir.com&#39;dan 1.000TL de\u011ferinde uygulaman\u0131n tan\u0131t\u0131m\u0131<\/p>\n\n<p><strong>&Uuml;niversitelilere &Ouml;zel &Ouml;d&uuml;l<\/strong><\/p>\n\n<p><strong>Mobil Uygulama Yar\u0131\u015fmas\u0131 kapsam\u0131nda &uuml;niversiteler i&ccedil;in ayr\u0131 bir &ouml;d&uuml;llendirme de yap\u0131lacakt\u0131r. &Uuml;niversitelere <\/strong>&ouml;zel d&uuml;zenlenen &ouml;d&uuml;l t&ouml;reninde ise kazanana Silikon Vadisi tatilindeki ihtiya&ccedil;lar\u0131n\u0131 kar\u015f\u0131lamak amac\u0131yla&nbsp;<strong>5000 TL nakit para &ouml;d&uuml;l&uuml;<\/strong>&nbsp;verilecektir.<\/p>\n\n<p><strong>&lsquo;&Uuml;niversiteler \u0130&ccedil;in<\/strong> <strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong>&#39; Takvimi<\/p>\n\n<p><strong>Yar\u0131\u015fma Ba\u015flang\u0131c\u0131:<\/strong>&nbsp;1 Ocak 2016<\/p>\n\n<p><strong>Son Ba\u015fvuru:<\/strong> 30 A\u011fustos 2016<\/p>\n\n<p><strong>Halk Oylamas\u0131:<\/strong> 5 Eyl&uuml;l 2016<\/p>\n\n<p><strong>J&uuml;ri De\u011ferlendirmesi:<\/strong> 10 Eyl&uuml;l 2016<\/p>\n\n<p><strong>Mobil Etkinlik:<\/strong> Ekim Ay\u0131nda<\/p>\n\n<p>Yar\u0131\u015fman\u0131n &ouml;d&uuml;l t&ouml;reni yar\u0131\u015fmay\u0131 birinci olan\u0131n okudu\u011fu &Uuml;niversite&rsquo;de ger&ccedil;ekle\u015ftirilecek olup t&ouml;rene t&uuml;m &ouml;\u011frenciler kat\u0131labilecektir.<\/p>\n\n<p><strong>&lsquo;&Uuml;niversiteler \u0130&ccedil;in<\/strong> <strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong>&#39; \u015fartlar ve ba\u015fvuru i&ccedil;in <a href=\"http:\/\/www.indir.com\/yarismauni\/\">buraya<\/a> t\u0131klayabilirsiniz.<\/p>\n\n<p><strong>&lsquo;indir.com Mobil Uygulama Yar\u0131\u015fmas\u0131 2016&rsquo;<\/strong> Takvimi<\/p>\n\n<p><strong>Yar\u0131\u015fma Ba\u015flang\u0131c\u0131<\/strong>: 1 Ocak 2016<\/p>\n\n<p><strong>Son Ba\u015fvuru:<\/strong> 28 Nisan 2016<\/p>\n\n<p><strong>Halk Oylamas\u0131:<\/strong> 30 Nisan 2016<\/p>\n\n<p><strong>J&uuml;ri De\u011ferlendirmesi<\/strong>: 7 May\u0131s 2016<\/p>\n\n<p><strong>Mobil Etkinlik:<\/strong> 14 May\u0131s 2016&nbsp;<\/p>\n\n<p>Hi&ccedil;bir ya\u015f s\u0131n\u0131r\u0131 g&ouml;zetmeksizin herkesin kat\u0131labildi\u011fi yar\u0131\u015fman\u0131n &ouml;d&uuml;l t&ouml;reni ise 14 May\u0131s 2016&#39;da&nbsp;<strong>\u0130stanbul Bah&ccedil;e\u015fehir &Uuml;niversitesi<\/strong>&#39;nde ikincisi ger&ccedil;ekle\u015fecek olan Mobil Etkinlik&#39;te yap\u0131lacakt\u0131r.<\/p>\n\n<p>Yar\u0131\u015fma ba\u015fvuru formu i&ccedil;in<strong> &lsquo;<\/strong><a href=\"http:\/\/www.indir.com\/yarisma\/\"><strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong><\/a><a name=\"_GoBack\"><\/a>&#39; adresini ziyaret edebilirsiniz.<\/p>\n","date":"1454967635","tags":"indir.com , mobil \u00f6d\u00fcl , \u00f6d\u00fcl mobil , indir","link":"indir.com-mobil-uygulama-odulleri-2016-yarismasi"},{"id":"139","title":"Spring Framework ile Java Tabanl\u0131 DataSource Konfigurasyonu","content_half":"<p>Merhaba arkada\u015flar ,<br \/>\nbu yazd\u0131ma <strong>Spring Framework<\/strong> <strong>DataSource <\/strong>konfigurasyonunu <strong>XML<\/strong> kullanmadan sadece <strong>Java <\/strong>tabanl\u0131 olarak olu\u015fturaca\u011f\u0131z.","content_full":"<p>Merhaba arkada\u015flar ,<br \/>\nbu yazd\u0131ma <strong>Spring Framework<\/strong> <strong>DataSource <\/strong>konfigurasyonunu <strong>XML<\/strong> kullanmadan sadece <strong>Java <\/strong>tabanl\u0131 olarak olu\u015fturaca\u011f\u0131z.<strong>(Bu &ouml;rnekte MySQL kullan\u0131lacakt\u0131r.) <\/strong><br \/>\n<br \/>\n&Ouml;ncelikle <strong>.properties <\/strong>dosyam\u0131z\u0131 olu\u015fturuyoruz.<br \/>\n<br \/>\n&nbsp;<\/p>\n\n<sh class=\"brush: java\">\ndriverClassName = com.mysql.jdbc.Driver\nurl = jdbc:mysql:\/\/localhost:3306\/database-name\nusername = root\npassword =&nbsp;\n<\/sh>\n\n<p>&nbsp;<\/p>\n\n<p><br \/>\nArd\u0131ndan s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturuyoruz.<\/p>\n\n<sh class=\"brush: java\" highlight=\"13\" >\n@Configuration\n@PropertySource(&quot;classpath:\/mysql.properties&quot;)\n@ComponentScan(basePackages = &quot;io.github.alicankustemur.blogproject&quot;)\npublic class BeanConfiguration\n{\n\n @Autowired\n public Environment  environment;\n\n @Bean\n public SingleConnectionDataSource createDriverManagerDataSourceBean()\n {\n  SingleConnectionDataSource driverManager = new SingleConnectionDataSource();\n  driverManager.setDriverClassName(environment.getProperty(&quot;driverClassName&quot;));\n  driverManager.setUrl(environment.getProperty(&quot;url&quot;));\n  driverManager.setUsername(environment.getProperty(&quot;username&quot;));\n  driverManager.setPassword(environment.getProperty(&quot;password&quot;));\n  return driverManager;\n }\n\n}\n<\/sh>\n\n<p>Bu s\u0131n\u0131f\u0131n bir konfigurasyon i\u015flemi yapt\u0131\u011f\u0131n\u0131 belirtmek i&ccedil;in <strong>@Configuration <\/strong>anotasyonunu s\u0131n\u0131f\u0131n ba\u015f\u0131na ekliyoruz.<br \/>\n<br \/>\n<strong>@PropertySource <\/strong>anotasyonu i&ccedil;erisinde ki <strong>&quot;classpath:\/mysql.properties&quot; <\/strong>de\u011feri <strong>mysql.properties <\/strong>dosyas\u0131n\u0131 classpath i&ccedil;erisinde aray\u0131p <strong>Environment&#39;a<\/strong> enjekte etmektedir.<br \/>\nDaha sonra <strong>getProperty()&nbsp; <\/strong>methodu ile birlikte properties dosyas\u0131nda ki de\u011fi\u015fken de\u011ferlerine eri\u015fiyoruz.Bu de\u011ferleri de olu\u015fturdu\u011fumuz <strong>SingleConnectionDataSource<\/strong> nesnesine set ediyoruz.<br \/>\n<br \/>\nBurada <strong>SingleConnectionDataSource <\/strong>kullanmam\u0131n sebebi bu s\u0131n\u0131f ile yap\u0131lan <strong>DataSource<\/strong> tan\u0131mlamalar\u0131 sadece bir <strong>Connection <\/strong>nesnesinin kullan\u0131m\u0131na izin verir.Uygulama her zaman ayn\u0131 <strong>Connection <\/strong>nesnesini kullanarak &ccedil;al\u0131\u015fmay\u0131 s&uuml;rd&uuml;r&uuml;r.<strong>DriverManagerDataSource <\/strong>kullan\u0131larak olu\u015fturulan bir <strong>DataSource <\/strong>tan\u0131mlamas\u0131 her veri taban\u0131 ba\u011flant\u0131 iste\u011fi i&ccedil;in yeni bir <strong>Connection<\/strong> nesnesi olu\u015fturacakt\u0131r.<br \/>\n<br \/>\n<strong>@ComponentScan <\/strong>anotasyonu ile Spring&#39;e gerekli s\u0131n\u0131flar\u0131 classpath i&ccedil;erisinde aramas\u0131 gerekti\u011fini belirtiyoruz.<br \/>\n<br \/>\nBurada <strong>createDriverManagerDataSourceBean() <\/strong>methodu &uuml;zerinde ki <strong>@Bean <\/strong>anotasyonu methodu bean haline getirip <strong>DAO <\/strong>i\u015flemleri i&ccedil;in <strong>Repository <\/strong>s\u0131n\u0131flar\u0131 i&ccedil;erisinde <strong>DataSource <\/strong>tan\u0131mlamalar\u0131na <strong>@Autowired <\/strong>anotasyonu ile otomatik olarak enjekte edece\u011fiz.<br \/>\n&nbsp;<\/p>\n\n<p>A\u015fa\u011f\u0131da bununla ilgili k\u0131sa bir &ouml;rnek verilmi\u015ftir.<\/p>\n\n\n<sh class=\"brush: java\">\n@Component\npublic class JdbcRepositoryImpl implements Repository\n{\n \n @Autowired\n private DataSource dataSource;\n \n @Override\n public void save(User user)\n {\n  PreparedStatement preparedStatement = null;\n\n  try\n  {\n   Connection connection = dataSource.getConnection();\n   preparedStatement = connection\n     .prepareStatement(&quot;INSERT INTO user (id,name) VALUES (?,?)&quot;);\n   preparedStatement.setLong(1, user.getId());\n   preparedStatement.setString(2, user.getName());\n   preparedStatement.executeUpdate();\n   preparedStatement.close();\n\n  }\n  catch (Exception e)\n  {\n  }\n\n }\n\n \n}\n<\/sh>\n\n<p>Olu\u015fturdu\u011fumuz konfigurasyon s\u0131n\u0131f\u0131n\u0131 <strong>ApplicationContext <\/strong>&uuml;zerinden &ccedil;a\u011f\u0131rabilmek i&ccedil;in <strong>AnnotationConfigApplicationContext <\/strong>nesnesi ile olu\u015fturup constructor de\u011ferine ilgili konfigurasyon s\u0131n\u0131f\u0131n\u0131 belirtmek gerekmektedir.<br \/>\n<br \/>\nA\u015fa\u011f\u0131da bununla ilgili k\u0131sa bir &ouml;rnek verilmi\u015ftir.<\/p>\n\n<sh class=\"brush: java\" highlight=\"7\" >\npublic class Main\n{\n\n public static void main(String[] args) throws SQLException\n {\n\n  ApplicationContext applicationContext = new AnnotationConfigApplicationContext(BeanConfiguration.class);\n  Repository repository = applicationContext.getBean(Repository.class);\n  User user = new User(&quot;1&quot;,&quot;Ali Can Ku\u015ftemur&quot;);\n  repository.save(user);\n }\n\n}\n<\/sh>\n","date":"1460987141","tags":"java , spring, datasource","link":"spring-framework-ile-java-tabanli-datasource-konfigurasyonu"},{"id":"140","title":"PrimeFaces Ba\u015flarken","content_half":"<p>Nedir bu <strong>PrimeFaces <\/strong>?<\/p>\n\n<p><strong>PrimeFaces<\/strong> opsiyonel ara&ccedil;lar d\u0131\u015f\u0131nda hi&ccedil;bir ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan s\u0131f\u0131r konfigurasyonlu bir <strong>JSF <\/strong>framework&#39;&uuml;dur.<\/p>\n\n<p>\u015eu anda en son olarak <strong>5.3 <\/strong>s&uuml;r&uuml;m&uuml; bulunmaktad\u0131r.<\/p>","content_full":"<p>Nedir bu <strong>PrimeFaces <\/strong>?<\/p>\n\n<p><strong>PrimeFaces<\/strong> opsiyonel ara&ccedil;lar d\u0131\u015f\u0131nda hi&ccedil;bir ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan s\u0131f\u0131r konfigurasyonlu bir <strong>JSF <\/strong>framework&#39;&uuml;dur.<\/p>\n\n<p>\u015eu anda en son olarak <strong>5.3 <\/strong>s&uuml;r&uuml;m&uuml; bulunmaktad\u0131r.<\/p>\n\n<p>Ben burada yazd\u0131\u011f\u0131m t&uuml;m <strong>PrimeFaces <\/strong>makalelerinde projeleri&nbsp;<strong>Maven<\/strong> olarak olu\u015fturaca\u011f\u0131m.<\/p>\n\n<p>Bir <strong>Maven Projesi<\/strong> olu\u015fturduktan sonra ilgili <strong>dependecy&#39;i pom.xml&nbsp;<\/strong>dosyam\u0131za ekliyoruz.<\/p>\n\n<sh class=\"brush: xml\">\n<dependency>\n  <groupId>org.primefaces<\/groupId>\n  <artifactId>primefaces<\/artifactId>\n  <version>5.3<\/version>\n<\/dependency>\n<\/sh>\n\n<p><strong>xhtml <\/strong>dosyalar\u0131m\u0131zda kullanabilmemiz i&ccedil;in <strong>html tag&#39;i <\/strong>i&ccedil;erisine bu <strong>namespace&#39;i <\/strong>eklemek zorunday\u0131z.<\/p>\n\n<sh class=\"brush: xml\">xmlns:p=\"http:\/\/primefaces.org\/ui\"<\/sh>\n\n<p>a\u015fa\u011f\u0131daki <strong>test <\/strong>sayfas\u0131n\u0131 olu\u015fturup ba\u015fl\u0131yoruz.<\/p>\n\n<sh class=\"brush: xml\"  >\n&lthtml xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\"\n  xmlns:h=\"http:\/\/java.sun.com\/jsf\/html\"\n  xmlns:f=\"http:\/\/java.sun.com\/jsf\/core\"\n  xmlns:ui=\"http:\/\/java.sun.com\/jsf\/facelets\"\n  xmlns:p=\"http:\/\/primefaces.org\/ui\">\n\n<h:head>\n<\/h:head>\n<h:body>\n\n  <h:form>\n    <p:spinner\/>\n  <\/h:form>\n\n<\/h:body>\n&lt\/html&gt\n<\/sh>\n\n<p>proje'ye <b>GitHub<\/b> \u00fczerinden eri\u015febilirsiniz. <a href=\"https:\/\/github.com\/alicankustemur\/PrimeFacesExample\"><i class=\"fa fa-github fa-2x icons\"><\/i><\/a> <\/p>\n\n\n\n","date":"1462867082","tags":"java , primefaces , jsf","link":"primefaces-baslarken"}]