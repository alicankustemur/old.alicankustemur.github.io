[{"id":"110","title":"Trigger (Tetikleyici) Nedir ? Nas\u0131l Kullan\u0131l\u0131r ?","content_half":"Bu yaz\u0131mda TRIGGER'lar\u0131 MYSQL kullanarak inceleyece\u011fiz.INSERT , UPDATE , DELETE i\u015flemlerinin ger\u00e7ekle\u015fmesi halinde devreye girebilen STORED PROCEDURE(SAKLI YORDAM) yap\u0131s\u0131d\u0131r.Hassas verilerin de\u011fi\u015fiminin veritaban\u0131nda kay\u0131tlar\u0131n\u0131 tutmay\u0131 , gerek eski haline getirmek ,gerek ise olu\u015fan durumlara g\u00f6re belirledi\u011fimiz i\u015flemleri yapabilmemizi sa\u011flar.TRIGGER \u00e7al\u0131\u015fmaya ba\u015flamadan \u00f6nce bir TRANSACTION a\u00e7\u0131l\u0131r.TRANSACTION konusuna burada detayl\u0131 olarak girmiyorum.Fakat ...\\n","content_full":"<div style=\\\"text-align: left;\\\">Bu yaz\u0131mda <b>TRIGGER<\/b>'lar\u0131 <b>MYSQL<\/b> kullanarak inceleyece\u011fiz.<br \/><b>INSERT , UPDATE , DELETE<\/b> i\u015flemlerinin ger\u00e7ekle\u015fmesi halinde devreye girebilen <b>STORED PROCEDURE(SAKLI YORDAM) <\/b>yap\u0131s\u0131d\u0131r.Hassas verilerin de\u011fi\u015fiminin veritaban\u0131nda kay\u0131tlar\u0131n\u0131 tutmay\u0131 , gerek eski haline getirmek ,gerek ise olu\u015fan durumlara g\u00f6re belirledi\u011fimiz i\u015flemleri yapabilmemizi sa\u011flar.<br \/><br \/><b>TRIGGER<\/b> \u00e7al\u0131\u015fmaya ba\u015flamadan \u00f6nce bir <b>TRANSACTION <\/b>a\u00e7\u0131l\u0131r.<b>TRANSACTION <\/b>konusuna burada detayl\u0131 olarak girmiyorum.Fakat temel bir \u015fekilde kullan\u0131m\u0131 \u015fu \u015fekilde ger\u00e7ekle\u015fiyor.E\u011fer <b>TRIGGER <\/b>blo\u011funda bir&nbsp;<b>ROLLBACK &nbsp;<\/b>var&nbsp;ifadesi \u00e7al\u0131\u015ft\u0131r\u0131l\u0131rsa olu\u015fan durumlarda son i\u015flem ge\u00e7ersiz olur ve yap\u0131lan i\u015flemler eski haline d\u00f6nderilir , e\u011fer yok ise otomatik olarak <b>COMMIT <\/b>yap\u0131l\u0131r ve i\u015flem ger\u00e7ekle\u015ftirilir.Bunu \u015f\u00f6yle \u00f6rnekleyelim ; \u00f6rne\u011fin bir ATM'den birisine para transferi yap\u0131yorsunuz,para hesab\u0131n\u0131zdan d\u00fc\u015ft\u00fc fakat g\u00f6nderdi\u011finiz ki\u015finin hesab\u0131na para ula\u015fmad\u0131.\u0130\u015fte bu durumlarda <b>TRANSACTION <\/b>devreye giriyor ve yapt\u0131\u011f\u0131 kontrol ile paray\u0131 sizin hesab\u0131n\u0131za tekrar yat\u0131r\u0131yor<b>.<\/b><br \/><b><br \/><\/b><br \/><ul><li><b>INSERT <\/b>i\u015fleminde&nbsp;sadece <b>NEW<\/b> kullan\u0131l\u0131r.<\/li><li><b>UPDATE<\/b> i\u015fleminde hem <b>NEW<\/b> hem de <b>OLD<\/b> kullan\u0131l\u0131r.<\/li><li><b>DELETE<\/b> i\u015fleminde ise sadece <b>OLD<\/b> kullan\u0131l\u0131r.<\/li><\/ul><br \/>Syntax'\u0131 (Yaz\u0131m Kural\u0131):<br \/><br \/><div><br \/><\/div><\/div><sh class=\\\"brush : sql\\\">CREATE [ DEFINER={ &lt; kullanici ad\u0131 &gt;} | CURRENT_USER} ] TRIGGER &lt; trigger ad\u0131 &gt;{ BEFORE | AFTER }{ UPDATE | INSERT | DELETE }ON &lt; tablo ad &gt;FOR EACH ROWBEGIN..\u2026END ; <\/sh>\u00d6rnek bir uygulama ile daha anla\u015f\u0131l\u0131r bir hale getirelim.<br \/>Yap\u0131lan <b>INSERT <\/b>ve <b>DELETE <\/b>i\u015flemlerinde tetiklenecek birer <b>TRIGGER <\/b>olu\u015ftural\u0131m.Bir futbol tak\u0131m\u0131 i\u00e7in m\u00fclakat se\u00e7imi yap\u0131ls\u0131n , &nbsp;e\u011fer ki j\u00fcrinin verdi\u011fi puanlarla toplamda 85 puan\u0131n \u00fczerinde olan ki\u015fileri futbol tak\u0131m\u0131na ald\u0131\u011f\u0131m\u0131z\u0131 varsayal\u0131m.Tak\u0131m al\u0131nan her ki\u015fiye otomatik olarak 1-100 aras\u0131nda tak\u0131m numaralar\u0131 verilmektedir.Daha sonra tak\u0131mdan ayr\u0131lanlar\u0131 da belirtelim.<br \/><br \/><br \/>\u00d6ncelikle tablolar\u0131m\u0131z\u0131 olu\u015fturuyoruz ;<br \/><sh class=\\\"brush: sql\\\">CREATE TABLE mulakat_listesi (tcno INT NOT NULL,isim VARCHAR(20),soyisim VARCHAR(20),mulakat_puani INT,PRIMARY(tcno));<\/sh>M\u00fclakat listesine kat\u0131lan ki\u015filerin <b>tcno , isim , soyisim<\/b> ve m\u00fclakattan ald\u0131klar\u0131 puan i\u00e7in  <b>mulakat_puani<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.<br \/><sh class=\\\"brush: sql\\\">CREATE TABLE futbol_takimi(takimno INT NOT NULL,ad VARCHAR (20),soyad VARCHAR(30),tarih TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);<\/sh>Futbol tak\u0131m\u0131na se\u00e7ilecek olan ki\u015filer i\u00e7in <b>futbol_takimi<\/b> tablosunda her bir ki\u015finin bir <b>takimno , ad , soyad ve tarih<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.<br \/><sh class=\\\"brush: sql\\\">CREATE TABLE ayrilan (ayrilan_isim VARCHAR(20),ayrilan_soyisim VARCHAR(20),giris_tarih VARCHAR(100),ayrilma_tarih TIMESTAMPS NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);<\/sh>Tak\u0131mdan ayr\u0131lanlar\u0131 tutaca\u011f\u0131m\u0131z ayrilan tablosunda <b>ayrilan_isim , ayrilan_soyisim , giris_tarih<\/b> ve <b>ayrilma_tarih<\/b> field alanlar\u0131n\u0131 tan\u0131mlad\u0131k.<br \/><br \/><br \/>Ard\u0131ndan <b>TRIGGER'<\/b>\u0131m\u0131z\u0131 olu\u015fturuyoruz.<br \/><br \/><sh class=\\\"brush: sql\\\">DELIMITER $$CREATE TRIGGER takima_girmek BEFORE INSERT ON mulakat_listesi  FOR EACH ROW   BEGIN    IF(NEW.mulakat_puani&gt;85) THEN     INSERT INTO futbol_takimi (takimno,ad,soyad) VALUES  ((FLOOR(RAND()*100)),NEW.isim,NEW.soyisim);    END IF;   END;$$ <\/sh>Burada yapm\u0131\u015f oldu\u011fumuz \u015fey , e\u011fer se\u00e7melerde <b>m\u00fclakat puan\u0131<\/b> 85'ten y\u00fcksek olan bir ki\u015fi var ise &nbsp;bu ki\u015finin bilgilerini al\u0131p , 1 ile 100 aras\u0131nda bir tak\u0131m numaras\u0131 verip , <b>futbol tak\u0131m\u0131 <\/b>tablosuna eklemek.Bu <b>TRIGGER'<\/b>\u0131 olu\u015fturup \u00e7al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda sistem bizim yerimize <b>TRIGGER <\/b>ko\u015fulunu sa\u011flayan durumda bu i\u015flemleri ger\u00e7ekle\u015ftirecektir.<br \/><span style=\\\"background-color: white; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 14px; line-height: 15.3999996185303px; white-space: nowrap;\\\">DELIMITER $$<\/span><br \/><span style=\\\"background-color: white; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace; font-size: 14px; line-height: 15.3999996185303px; white-space: nowrap;\\\"><br \/><\/span><br \/><sh class=\\\"brush : sql\\\">CREATE TRIGGER ayrilma_islemi AFTER DELETE ON futbol_takimi  FOR EACH ROW   BEGIN    INSERT INTO ayrilan (ayrilan_isim,ayrilan_soyisim,giris_tarih)    VALUES(OLD.ad,OLD.soyad,OLD.tarih);   END;$$<\/sh>Burada ise e\u011fer tak\u0131mdan ayr\u0131lan olursa bu ki\u015finin ad\u0131n\u0131 , soyad\u0131n\u0131 tak\u0131ma giri\u015f tarihini ve \u00e7\u0131k\u0131\u015f tarihini ayr\u0131lan tablosuna ekliyor.","date":"1428973662","tags":"mysql , trigger , tetikleyici , mysql trigger , sql , sql trigger nas\u0131l kullan\u0131l\u0131r , sql trigger nedir , mysql trigger nedir","link":"trigger-tetikleyici-nedir-nasil-kullanilir"},{"id":"111","title":"Java -  S\u0131n\u0131flar","content_half":"Bu yaz\u0131mda Java - S\u0131n\u0131flar&#39;\u0131 anlatmaya &ccedil;al\u0131\u015ft\u0131m.Umar\u0131m yararl\u0131 olur.Basit bir s\u0131n\u0131f olu\u015ftural\u0131m.&nbsp;class Rectangle{ double width; double height; double depth;}Rectangle&nbsp;adl\u0131 s\u0131n\u0131f\u0131m\u0131z , 3 de\u011fi\u015fken tan\u0131ml\u0131yor:&nbsp;width,height ve depth&nbsp;olarak.\u015eu anda bu s\u0131n\u0131f method i&ccedil;ermiyor.&nbsp;class mainClass{ public static void main(String args[]){  Rectangle myRectangle = new Rectangle ();  double result;...\\n","content_full":"<p>Bu yaz\u0131mda Java - S\u0131n\u0131flar&#39;\u0131 anlatmaya &ccedil;al\u0131\u015ft\u0131m.<br \/>Umar\u0131m yararl\u0131 olur.<br \/>Basit bir s\u0131n\u0131f olu\u015ftural\u0131m.<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{ double width; double height; double depth;}<\/sh><p><strong>Rectangle&nbsp;<\/strong>adl\u0131 s\u0131n\u0131f\u0131m\u0131z , 3 de\u011fi\u015fken tan\u0131ml\u0131yor:&nbsp;<strong>width,height ve depth&nbsp;<\/strong>olarak.\u015eu anda bu s\u0131n\u0131f method i&ccedil;ermiyor.<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class mainClass{ public static void main(String args[]){  Rectangle myRectangle = new Rectangle ();  double result;  Rectangle.width = 5;  Rectangle.height = 3;  Rectangle.depth = 2;  result = Rectangle.width * Rectangle.height * Rectangle.depth ;  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in : &quot; + result); }} Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Dikd&ouml;rtgenin Hacmi : 30 <\/sh><p>Bu program &ccedil;al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131 zaman 2 adet s\u0131n\u0131f olu\u015fturulur , ilki&nbsp;<strong>Rectangle&nbsp;<\/strong>s\u0131n\u0131f\u0131 di\u011feri ise&nbsp;<strong>mainClass&nbsp;<\/strong>s\u0131n\u0131f\u0131d\u0131r.Burada olu\u015fturdu\u011fumuz&nbsp;<strong>myRectangle&nbsp;<\/strong>ise<strong>&nbsp;<\/strong>bir <strong>local <\/strong>de\u011fi\u015fkendir ve olu\u015fturuldu\u011fu s\u0131n\u0131f\u0131n tipini referans etmektedir.E\u011fer bir s\u0131n\u0131f i&ccedil;erisindeki verilere(de\u011fi\u015fken) ve davran\u0131\u015flara(method) eri\u015fmek istiyorsak o s\u0131n\u0131f\u0131 referans eden de\u011fi\u015fkenleri olu\u015fturmak zorunday\u0131z.E\u011fer bu program\u0131 &ccedil;al\u0131\u015ft\u0131rmak istiyorsak&nbsp;<strong>mainClass&nbsp;<\/strong>s\u0131n\u0131f\u0131n\u0131 &ccedil;al\u0131\u015ft\u0131rmak zorunday\u0131z.Burada yapt\u0131\u011f\u0131m\u0131z i\u015flem olu\u015fturdu\u011fumuz bir dikd&ouml;rtgenin hacmini hesaplamak.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class mainClass{ public static void main(String args[]){  Rectangle myRectangle = new Rectangle ();  Rectangle myRectangle2 = new Rectangle ();  double result;  myRectangle.width = 5;  myRectangle.height = 3;  myRectangle.depth = 2;  myRectangle2.width = 7;  myRectangle2.height = 5;  myRectangle2.depth = 4;  result = myRectangle.width * myRectangle.height * myRectangle.depth;  System.out.println(&quot;(myRectangle i&ccedil;in)  \\\\n Dikd&ouml;rtgenin Hacmi : &quot; + result);  result = myRectangle2.width * myRectangle2.height * myRectangle2.depth;  System.out.println(&quot;(myRectangle2 i&ccedil;in) \\\\n Dikd&ouml;rtgenin Hacmi : &quot; + result); }} Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :(myRectangle i&ccedil;in) Dikd&ouml;rtgenin Hacmi : 140(myRectangle2 i&ccedil;in) Dikd&ouml;rtgenin Hacmi : 30 <\/sh><p>Bir nesnenin de\u011fi\u015fkenine herhangi bir de\u011fi\u015fiklik yaparsak bundan di\u011fer nesnelerin de\u011fi\u015fkenleri etkilenmez.&Ouml;rne\u011fin yukar\u0131daki programda bir &ouml;nceki program gibi&nbsp;<strong>myRectangle&nbsp;<\/strong>i\u015fleminin sonucu yine 30&#39;dur.&Ccedil;\u0131kt\u0131dan anla\u015f\u0131ld\u0131\u011f\u0131 gibi iki nesneninde verileri birbirinden farkl\u0131d\u0131r.<\/p><p>&nbsp;<\/p>","date":"1425725563","tags":"java,Javase, Java Class , Java S\u0131n\u0131flar ,S\u0131n\u0131flar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---siniflar"},{"id":"112","title":"Java - Methodlar","content_half":"Bu yaz\u0131mda bir &ouml;nceki yaz\u0131mda kulland\u0131\u011f\u0131m yap\u0131lar\u0131n devam\u0131 olarak Methodlar&#39;\u0131 anlataca\u011f\u0131m.&quot; Java - S\u0131n\u0131flar &quot; konulu yaz\u0131ma bu adresten ula\u015fabilirsiniz.Methodlar ;  1 - Geriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar    1.1 - Parametresiz geriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar    1.2 - Parametreli geriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar  2 - Geriye de\u011fer d&ouml;nd&uuml;ren methodlar    2...\\n","content_full":"<p>Bu yaz\u0131mda bir &ouml;nceki yaz\u0131mda kulland\u0131\u011f\u0131m yap\u0131lar\u0131n devam\u0131 olarak Methodlar&#39;\u0131 anlataca\u011f\u0131m.<br \/><a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-1-snflar.html\\\">&quot; Java - S\u0131n\u0131flar &quot; konulu yaz\u0131ma bu adresten ula\u015fabilirsiniz.<\/a><br \/>Methodlar ;<br \/><strong>&nbsp; 1 - Geriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/><strong>&nbsp; &nbsp; 1.1 - Parametresiz g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/><strong>&nbsp; &nbsp; 1.2 -&nbsp;<\/strong><strong>Parametreli g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;rmeyen methodlar<\/strong><br \/><strong>&nbsp; 2 - Geriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/><strong>&nbsp; &nbsp; 2.1 - Parametresiz g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/><strong>&nbsp; &nbsp; 2.2 - Parametreli g<\/strong><strong>eriye de\u011fer d&ouml;nd&uuml;ren&nbsp;<\/strong><strong>methodlar<\/strong><br \/>&nbsp; olmak &uuml;zere ikiye ayr\u0131l\u0131rlar.<br \/><br \/><strong>1-Geriye De\u011fer D&ouml;nd&uuml;rmeyen Methodlar&nbsp;<\/strong><br \/>Daha &ouml;nce tan\u0131mlad\u0131\u011f\u0131m\u0131z <strong>result <\/strong>de\u011fi\u015fkenine atad\u0131\u011f\u0131m\u0131z de\u011fi\u015fkenleri ba\u015fka i\u015flemlerde kullanmak i&ccedil;in tekrar toplama i\u015flemini olu\u015fturmam\u0131z gerekicektir.Bu i\u015flemi <strong>mainClass <\/strong>s\u0131n\u0131f\u0131n\u0131n yerine <strong>Rectangle<\/strong> s\u0131n\u0131f\u0131n\u0131n yapmas\u0131 daha iyi olucakt\u0131r.<\/p><sh class=\\\"brush: java\\\">class Rectangle{ double width; double height; double depth;void volume (){  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  : &quot;+(width * height * depth); }}<\/sh><p>Olu\u015fturdu\u011fumuz her nesne i&ccedil;in bu methodu &ccedil;a\u011f\u0131rabiliriz.B&ouml;ylelikle daha sade bir kullan\u0131m olu\u015ftu.<\/p><sh class=\\\"brush: java\\\">class mainClass { public static void main(String args[]) {  Rectangle myRectangle = new Rectangle ();  Rectangle myRectangle2 = new Rectangle ();  double result;  myRectangle.width = 5;  myRectangle.height = 3;  myRectangle.depth = 2;  myRectangle2.width = 7;  myRectangle2.height = 5;  myRectangle2.depth = 4;  myRectangle2.volume();  myRectangle.volume(); }} Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :Dikd&ouml;rtgenin Hacmi  i&ccedil;in : 140 \/\/myRectangle2Dikd&ouml;rtgenin Hacmi  i&ccedil;in  : 30 \/\/myRectangle<\/sh><p>Bu \u015fekilde program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda bir &ouml;nceki programda oldu\u011fu gibi sonucun ayn\u0131 oldu\u011funu g&ouml;r&uuml;yoruz.B&ouml;ylelikle yap\u0131lan tekrarlardan kurtulup daha sade bir kullan\u0131m elde ettik.<br \/><br \/>Ama bu \u015fekilde kullan\u0131mda yeterli de\u011fildir.Daha dinamik bir hale getirmek i&ccedil;in geriye de\u011fer d&ouml;nd&uuml;ren method \u015fekilde kullanmam\u0131z gereklidir.<br \/><br \/><strong>2 - Geriye De\u011fer D&ouml;nd&uuml;ren Methodlar<\/strong><br \/><br \/>Bir &ouml;nceki programda &ccedil;a\u011f\u0131rd\u0131m\u0131z <strong>volume <\/strong>methodunda sonucu ekrana yazd\u0131ran bir i\u015flem yap\u0131yorduk , bunu her zaman kullanmak mecburiyetinde de\u011filiz.\u0130stenildi\u011fi zaman program\u0131n &ccedil;\u0131kt\u0131s\u0131 al\u0131nabilir.Bunun d\u0131\u015f\u0131nda di\u011fer i\u015flemler i&ccedil;in kullan\u0131lmal\u0131d\u0131r.Program\u0131 tekrar olu\u015ftural\u0131m.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{ double width; double height double depth; double volume (){  return width * height * depth ; }}<\/sh><p><br \/>Burada <strong>volume&nbsp;<\/strong>methodunun &ouml;n&uuml;ne kulland\u0131\u011f\u0131m\u0131z <strong>double<\/strong> ifadesi methodun geriye d&ouml;nderece\u011fi de\u011ferin veri tipini belirtir.E\u011fer geriye bir <strong>boolean <\/strong>veri tipine sahip bir de\u011fer d&ouml;nd&uuml;rmek istiyorsan\u0131z bu methodun tipini <strong>int <\/strong>olarak tan\u0131mlayamazs\u0131n\u0131z.Geriye de\u011fer d&ouml;nd&uuml;ren methodlarda her zaman <strong>return <\/strong>ifadesi kullan\u0131lmak zorundad\u0131r.Aksi takdirde program derlenme esnas\u0131nda hata vericektir.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class mainClass { public static void main(String args[]) {  Rectangle myRectangle = new Rectangle ();  Rectangle myRectangle2 = new Rectangle ();  double result;  myRectangle.width = 5;  myRectangle.height = 3;  myRectangle.depth = 2;  myRectangle2.width = 7;  myRectangle2.height = 5;  myRectangle2.depth = 4;  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle2 i&ccedil;in :  &quot;+myRectangle2.volume());  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle i&ccedil;in : &quot;+myRectangle.volume()); }} Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :Dikd&ouml;rtgenin Hacmi&nbsp;myRectangle2 i&ccedil;in : 140 Dikd&ouml;rtgenin Hacmi&nbsp;myRectangle i&ccedil;in  : 30<\/sh><p><br \/>Bu program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131m\u0131zda ise &ccedil;\u0131kt\u0131n\u0131n yine ayn\u0131 oldu\u011funu g&ouml;r&uuml;r&uuml;z.E\u011fer referans eden de\u011fi\u015fkenlere bir i\u015flem yapt\u0131rmak istiyorsak bunu o s\u0131n\u0131f i&ccedil;erisinde olu\u015fturup gerekli i\u015flem i&ccedil;in &ccedil;a\u011fr\u0131lmaya haz\u0131r hale getirmeliyiz.Yap\u0131 dinamik olursa e\u011fer bir&ccedil;ok i\u015flemde kullan\u0131labilir hale gelir.<br \/><br \/><strong>Parametreli Methodlar<\/strong><br \/><br \/>Yukar\u0131da ki programlar parametresiz methodlar\u0131n kullan\u0131m\u0131n\u0131 belirtiyordu.<br \/>E\u011fer kodu daha dinamik bir hale getirmek istiyorsak de\u011fi\u015fkenlere sadece s\u0131n\u0131f\u0131n methodu i&ccedil;erisinde de\u011fer vermeliyiz.Bu durum hem g&uuml;venlik a&ccedil;\u0131s\u0131ndan hemde kodun sadeli\u011fi a&ccedil;\u0131s\u0131ndan olduk&ccedil;a &ouml;nemlidir.Daha sonra bu konuya <strong>Sarmalama(Encapsulation) <\/strong>yaz\u0131s\u0131nda &nbsp;ayr\u0131nt\u0131l\u0131 olarak de\u011finece\u011fiz.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{ double width; double height; double depth; double setValues(double w , double h , double d){  width = w;  height = h;  depth = d; } double volume (){  return width * height * depth ; }}<\/sh><p><br \/>Kodumuzu bu \u015fekilde d&uuml;zenledi\u011fimizde art\u0131k her nesne de\u011fi\u015fkeni i&ccedil;in tek tek atama yapmak yerine ayn\u0131 i\u015flemi bir methodda toplad\u0131k.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class mainClass { public static void main(String args[]) {  Rectangle myRectangle = new Rectangle ();  Rectangle myRectangle2 = new Rectangle ();  myRectangle.setValues(5,3,2);  myRectangle2.setValues(7,5,4);  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle2 i&ccedil;in :  &quot;+myRectangle2.volume());  System.out.println(&quot;Dikd&ouml;rtgenin Hacmi  myRectangle i&ccedil;in : &quot;+myRectangle.volume()); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :Dikd&ouml;rtgenin Hacmi myRectangle2 i&ccedil;in : 140Dikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in  : 30<\/sh><p>Bu program\u0131n &ccedil;\u0131kt\u0131s\u0131 yine ayn\u0131 \u015fekildedir , fakat daha dinamik ve kullan\u0131\u015fl\u0131 bir hale d&ouml;n&uuml;\u015fm&uuml;\u015ft&uuml;r.<\/p><p>&nbsp;<\/p>","date":"1425725563","tags":"java,Javase , Java Methodlar ,Methodlar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---methodlar"},{"id":"113","title":"Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )","content_half":"Java - Methodlar adl\u0131 yaz\u0131m\u0131n devam\u0131 olarak bu yaz\u0131 da Yap\u0131land\u0131r\u0131c\u0131lar(Constractor)&#39;\u0131 anlataca\u011f\u0131m.&nbsp;&nbsp;&nbsp;class Rectangle{&nbsp;double width;&nbsp;double height;&nbsp;double depth;&nbsp;double volume {&nbsp; return width * height * depth ;&nbsp;}&nbsp;void setValues(double w , double h , double d){&nbsp; width = w;&nbsp; height = h;&nbsp; depth = d;&nbsp;}}&nbsp;&nbsp;&nbsp;&nbsp;Burada kulland\u0131\u011f\u0131m\u0131z s...\\n","content_full":"<p><a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-2-methodlar.html\\\">Java - Methodlar<\/a> adl\u0131 yaz\u0131m\u0131n devam\u0131 olarak bu yaz\u0131 da <strong>Yap\u0131land\u0131r\u0131c\u0131lar(Constractor)<\/strong>&#39;\u0131 anlataca\u011f\u0131m.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{&nbsp;double width;&nbsp;double height;&nbsp;double depth;&nbsp;double volume {&nbsp; return width * height * depth ;&nbsp;}&nbsp;void setValues(double w , double h , double d){&nbsp; width = w;&nbsp; height = h;&nbsp; depth = d;&nbsp;}}<\/sh><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>Burada kulland\u0131\u011f\u0131m\u0131z <strong>setValues()<\/strong> methodu uygun ve kullan\u0131\u015fl\u0131 g&ouml;z&uuml;kse de , bu i\u015flemleri nesne ilk olu\u015fturuldu\u011funda yapmak daha &ouml;zl&uuml; ve kullan\u0131\u015fl\u0131 bir hale getirecektir.Java&#39;da Yap\u0131land\u0131r\u0131c\u0131lar nesne olu\u015fturulduktan hemen sonra onu ilk kullan\u0131ma haz\u0131r hale getirirler.<\/p><p><strong>setValues() <\/strong>methodunu bir yap\u0131land\u0131r\u0131c\u0131 ile de\u011fi\u015ftirelim.<br \/><br \/><strong>Parametresiz Yap\u0131land\u0131r\u0131c\u0131<\/strong><\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{&nbsp;double width;&nbsp;double height;&nbsp;double depth;&nbsp;double volume {&nbsp; return width * height * depth ;&nbsp;}&nbsp;Rectangle(){&nbsp; width = 15;&nbsp; height = 15;&nbsp; depth = 15;&nbsp;}}<\/sh><p>S\u0131n\u0131f ile ayn\u0131 isme sahip bir method oldu\u011funu g&ouml;r&uuml;yoruz . \u0130\u015fte bu bir yap\u0131land\u0131r\u0131c\u0131 oluyor. Yap\u0131land\u0131r\u0131c\u0131lar her zaman bulundu\u011fu s\u0131n\u0131f ile ayn\u0131 isme sahip olmak zorundad\u0131r.Aksi takdirde bu bir yap\u0131land\u0131r\u0131c\u0131 &ouml;zelli\u011fi ta\u015f\u0131maz. Burada ki<strong> Rectangle()<\/strong> yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131n yapt\u0131\u011f\u0131 i\u015f , olu\u015fturulan nesnelere ilk de\u011fer atamas\u0131 yapmak.Olu\u015fturulan nesnelere varsay\u0131lan de\u011fer olarak de\u011fi\u015fkenlerine 15 de\u011feri atan\u0131yor.<br \/><br \/><strong>Parametreli Yap\u0131land\u0131r\u0131c\u0131<\/strong><br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle{&nbsp;double width;&nbsp;double height;&nbsp;double depth;&nbsp;double volume(){&nbsp; return width * height * depth;&nbsp;}&nbsp;Rectangle (double w , double h , double d){&nbsp; width = w;&nbsp; height = h;&nbsp; depth = d;&nbsp;}}class mainClass{&nbsp;public static void main(string args[]){&nbsp; Rectangle myRectangle = new Rectangle(5,3,2);&nbsp; Rectangle myRectangle2 = new Rectangle(7,5,4);&nbsp; System.out.println(&quot;Dikd&ouml;rtgenin Hacmi &nbsp;myRectangle2 i&ccedil;in : &nbsp;&quot;+myRectangle2.volume());&nbsp; System.out.println(&quot;Dikd&ouml;rtgenin Hacmi &nbsp;myRectangle i&ccedil;in : &quot;+myRectangle.volume());&nbsp;}}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :Dikd&ouml;rtgenin Hacmi myRectangle2 i&ccedil;in : 140Dikd&ouml;rtgenin Hacmi myRectangle i&ccedil;in &nbsp;: 30<\/sh><p><br \/>Ayr\u0131 bir <strong>setValues()<\/strong>&nbsp;gibi de\u011fer atamas\u0131n\u0131 yapaca\u011f\u0131m\u0131z methodlara gerek kalmadan yap\u0131land\u0131r\u0131c\u0131 ile kodumuzu daha k\u0131sa bir halde getirdik.<\/p>","date":"1449480440","tags":"java ,javase , Constructor , Java Yap\u0131land\u0131r\u0131c\u0131lar ,Yap\u0131land\u0131r\u0131c\u0131lar, Programlama , Nesneye Y\u00f6nelik Programlama , OOP , Programc\u0131l\u0131k","link":"java---yapilandiricilar-constructors"},{"id":"114","title":"Git\/GitHub  nedir ? Git\/GitHub ile Proje Y\u00f6netimi Nas\u0131l Yap\u0131l\u0131r ?","content_half":"Bu yaz\u0131mda Git ile ilgili kurulum ve gerekli i\u015flemleri nas\u0131l yapabilece\u011fimizi anlataca\u011f\u0131m.\u00d6ncelikle kurulum i\u00e7in&nbsp;http:\/\/git-scm.com\/downloads&nbsp;bu adresten platformumuza uygun olan kurulum dosyas\u0131n\u0131 indirip , standart next next mant\u0131\u011f\u0131yla program\u0131 kuruyoruz.(Ben \u00f6yle kurdum kuruum ayarlar\u0131n\u0131 de\u011fi\u015ftirmek size kalm\u0131\u015f :) , tabi bir sorun olu\u015fursa sorumlulukta sizde )1 - Bilgisayardaki projeleri GitHub hesab\u0131m\u0131za y\u00fcklemek :Kurulum i\u015flemlerini bitirdiken so...\\n","content_full":"Bu yaz\u0131mda Git ile ilgili kurulum ve gerekli i\u015flemleri nas\u0131l yapabilece\u011fimizi anlataca\u011f\u0131m.<br \/>\u00d6ncelikle kurulum i\u00e7in&nbsp;<a href=\\\"http:\/\/git-scm.com\/downloads\\\">http:\/\/git-scm.com\/downloads<\/a>&nbsp;bu adresten platformumuza uygun olan kurulum dosyas\u0131n\u0131 indirip , standart next next mant\u0131\u011f\u0131yla program\u0131 kuruyoruz.<b>(Ben \u00f6yle kurdum kuruum ayarlar\u0131n\u0131 de\u011fi\u015ftirmek size kalm\u0131\u015f :) , tabi bir sorun olu\u015fursa sorumlulukta sizde )<\/b><br \/><br \/><b>1 - Bilgisayardaki projeleri GitHub hesab\u0131m\u0131za y\u00fcklemek :<\/b><br \/><br \/>Kurulum i\u015flemlerini bitirdiken sonra GitHub hesab\u0131m\u0131za girip proje klas\u00f6r\u00fcm\u00fcz ile ayn\u0131 ada sahip bir repository olu\u015fturuyoruz.<br \/><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/4.bp.blogspot.com\/-H1uW4eh5-PA\/VU4oO8gE76I\/AAAAAAAABl4\/pSqF8EPOt7o\/s1600\/New_2.jpg\\\" data-lightbox=\\\"image\\\" data-title=\\\"My caption\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/4.bp.blogspot.com\/-H1uW4eh5-PA\/VU4oO8gE76I\/AAAAAAAABl4\/pSqF8EPOt7o\/s1600\/New_2.jpg\\\" \/><\/a><\/div><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/1.bp.blogspot.com\/-wg-grX6-jlA\/VU4sOut7IFI\/AAAAAAAABmY\/QUSOCTD-geE\/s1600\/New_3.jpg\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/1.bp.blogspot.com\/-wg-grX6-jlA\/VU4sOut7IFI\/AAAAAAAABmY\/QUSOCTD-geE\/s1600\/New_3.jpg\\\" \/><\/a><\/div><br \/><br \/>Bilgisayar\u0131m\u0131zda bulunan bir projeyi GitHub hesab\u0131m\u0131za y\u00fcklemek i\u00e7in projemizin klasor\u00fcne sa\u011f t\u0131klay\u0131p \\\"Git Bash\\\"'i \u00e7al\u0131\u015ft\u0131r\u0131yoruz :<br \/><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/2.bp.blogspot.com\/-azgIDuILs-E\/VU4oW-lgRmI\/AAAAAAAABmA\/YsaFCJlxiFI\/s1600\/New_1.jpg\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/2.bp.blogspot.com\/-azgIDuILs-E\/VU4oW-lgRmI\/AAAAAAAABmA\/YsaFCJlxiFI\/s1600\/New_1.jpg\\\" \/><\/a><\/div><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><\/div>Git'in Komut \u0130stemcisi geliyor ekran\u0131m\u0131za.<br \/><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/2.bp.blogspot.com\/-jYVCWCeziwA\/VU4p9F8cSpI\/AAAAAAAABmM\/HI4uT9Dfmek\/s1600\/New_5.jpg\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/2.bp.blogspot.com\/-jYVCWCeziwA\/VU4p9F8cSpI\/AAAAAAAABmM\/HI4uT9Dfmek\/s1600\/New_5.jpg\\\" \/><\/a><\/div><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><br \/><\/div>Buraya aynen \u015fu komutlar\u0131 uyguluyoruz.<br \/><sh class=\\\"brush: java\\\"> git initgit add --allgit commit -m \\\"Buras\u0131 yorum b\u00f6l\u00fcm\u00fc\\\"git remote add origin &lt; Repository'inizin https ya da ssh adresi &gt;git push origin master<\/sh><br \/>Bu komutlar\u0131 \u00e7al\u0131\u015ft\u0131rd\u0131ktan sonra sizden kullan\u0131c\u0131 ad\u0131 ve parola isteyecektir,bilgileri do\u011fru girdi\u011finiz takdirde dosyalar\u0131n\u0131z ba\u015far\u0131l\u0131 bir \u015fekilde GitHub hesab\u0131n\u0131za y\u00fcklenmi\u015f olur.<br \/><br \/>\u00d6rnek olarak ben bir proje ekledim.<br \/><br \/><sh class=\\\"brush: java\\\">git initgit add --allgit commit -m \\\"This is my little commit\\\"git remote add origin https:\/\/github.com\/kustemura\/StudentInformationSystem.git git push origin master<\/sh><br \/><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/1.bp.blogspot.com\/-OCowI8FfvV0\/VU4tDad-NzI\/AAAAAAAABmg\/pOQLUJzHW_w\/s1600\/New_4.jpg\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/1.bp.blogspot.com\/-OCowI8FfvV0\/VU4tDad-NzI\/AAAAAAAABmg\/pOQLUJzHW_w\/s1600\/New_4.jpg\\\" \/><\/a><\/div><br \/><div class=\\\"separator\\\" style=\\\"clear: both; text-align: center;\\\"><a href=\\\"http:\/\/2.bp.blogspot.com\/-cbWB9EHTnVM\/VU4tNN1fwNI\/AAAAAAAABmo\/Ct3Sao_2ZPU\/s1600\/New_6.jpg\\\" imageanchor=\\\"1\\\" style=\\\"margin-left: 1em; margin-right: 1em;\\\"><img border=\\\"0\\\" src=\\\"http:\/\/2.bp.blogspot.com\/-cbWB9EHTnVM\/VU4tNN1fwNI\/AAAAAAAABmo\/Ct3Sao_2ZPU\/s1600\/New_6.jpg\\\" \/><\/a><\/div>","date":"1431168763","tags":"git , github , git ile proje , git ile , github ile proje , gihub ile , git ile proje y\u00f6netimi , git ile proje yonetimi , github ile proje yonetimi , git kullan\u0131m\u0131 , github kullan\u0131m\u0131 , git nedir , github nedir","link":"git-github-nedir-git-github-ile-proje-yonetimi-nasil-yapilir"},{"id":"115","title":"Apache Tomcat Kurulumu ve Eclipse Entregrasyonu","content_half":"Bu yaz\u0131mda Apache Tomcat Kurulumunu yapaca\u011f\u0131z , ard\u0131ndan kurulumu ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015ftirdikden sonra Eclipse IDE&#39;ye entegrasyonunu yap\u0131p &ccedil;al\u0131\u015ft\u0131raca\u011f\u0131z. &Ouml;ncelikle bu&nbsp;ba\u011flant\u0131dan&nbsp;Apache Tomcat&#39;in &nbsp;kurulmas\u0131n\u0131 istedi\u011fimiz s&uuml;r&uuml;m&uuml;n&uuml; indiriyoruz , ben bu yaz\u0131mda Tomcat 7 kurulumunu yapaca\u011f\u0131m.1 - .zip dosyas\u0131n\u0131 indirip.Bilgisayar\u0131m\u0131zda herhangi bir s&uuml;r&uuml;c&uuml; i&ccedil;erisine ta\u015f\u0131mak. &...\\n","content_full":"<p>Bu yaz\u0131mda <strong>Apache Tomcat <\/strong>Kurulumunu yapaca\u011f\u0131z , ard\u0131ndan kurulumu ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015ftirdikden sonra<strong> Eclipse IDE<\/strong>&#39;ye entegrasyonunu yap\u0131p &ccedil;al\u0131\u015ft\u0131raca\u011f\u0131z. &Ouml;ncelikle bu&nbsp;<a href=\\\"https:\/\/www.blogger.com\/%3Ca%20href=%22http:\/\/tomcat.apache.org\/%22%3E%3C\/a%3E\\\">ba\u011flant\u0131<\/a>dan<strong>&nbsp;Apache Tomcat<\/strong>&#39;in &nbsp;kurulmas\u0131n\u0131 istedi\u011fimiz s&uuml;r&uuml;m&uuml;n&uuml; indiriyoruz , ben bu yaz\u0131mda <strong>Tomcat 7<\/strong> kurulumunu yapaca\u011f\u0131m.<br \/><a href=\\\"http:\/\/4.bp.blogspot.com\/-DFJRljj_g50\/VU6KqTGzVAI\/AAAAAAAABn4\/g4E-KS7BqKE\/s1600\/apache-tomcat.jpg\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-DFJRljj_g50\/VU6KqTGzVAI\/AAAAAAAABn4\/g4E-KS7BqKE\/s1600\/apache-tomcat.jpg\\\" \/><\/a><br \/>1 - .zip dosyas\u0131n\u0131 indirip.Bilgisayar\u0131m\u0131zda herhangi bir s&uuml;r&uuml;c&uuml; i&ccedil;erisine ta\u015f\u0131mak. <strong>&Ouml;rne\u011fin : ( C:\\\\tomcat_7 )<\/strong><br \/><br \/>2 - Ard\u0131ndan <strong>Komut \u0130stemcisini y&ouml;netici <\/strong>olarak &ccedil;al\u0131\u015f\u0131r\u0131p \u015fu komutlar\u0131 &ccedil;al\u0131\u015ft\u0131rmam\u0131z gerekli.<strong>( Bunu bir .txt dosyas\u0131 olu\u015fturup daha sonra .bat uzant\u0131l\u0131 olarak komutlar\u0131 kaydedip &ccedil;al\u0131\u015ft\u0131rabilirsiniz,ben komut olarak tek tek &ccedil;al\u0131\u015ft\u0131rmay\u0131 seviyorum. se&ccedil;im sizin :) )<\/strong><br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: sql\\\">set PATH= &lt; JDK&#39;n\u0131n bulundu\u011fu dosya konumu &gt; &nbsp;\\\\bin;%PATH%set JAVA_HOME= &lt; JDK&#39;n\u0131n bulundu\u011fu dosya konumu &nbsp;&gt;set CATALINA= &lt; Tomcat&#39;in bulundu\u011fu dosya konumu &gt;<\/sh><p>&Ouml;rnek olarak Ortam De\u011fi\u015fkenlerini ayarlayay\u0131m ve Catalina Classpath Ayarlar\u0131 Servlet olsun.<br \/>&nbsp;<\/p><sh class=\\\"brush: sql\\\">set PATH=C:\\\\Program Files\\\\Java\\\\jdk1.8.0_25\\\\bin;%PATH%set JAVA_HOME=C:\\\\Program Files\\\\Java\\\\jdk1.8.0_25set CATALINA=C:\\\\Tomcat_7set CLASSPATH=%CATALINA%\\\\common\\\\lib\\\\servlet-api.jar;%CLASSPATH%<\/sh><p>\u015eimdi Eclipse Entegrasyonuna ge&ccedil;elim.<br \/><br \/>3 - Eclipse&#39;te bir Web Uygulamas\u0131 a&ccedil;t\u0131\u011f\u0131m\u0131z zaman alt b&ouml;l&uuml;mlerdeki <strong>&quot;Servers&quot; <\/strong>k\u0131sm\u0131na t\u0131kl\u0131yoruz.<br \/>Ard\u0131ndan olu\u015fturdu\u011fumuz projeler &uuml;zerinden bu ad\u0131mlar\u0131 s\u0131rayla ger&ccedil;ekle\u015ftiriyoruz.<br \/>&nbsp;<\/p><p><a href=\\\"http:\/\/1.bp.blogspot.com\/-hSbMx7_-ad4\/VU6Rm67_snI\/AAAAAAAABoI\/a6keuBrl2Dw\/s1600\/1.jpg\\\"><img src=\\\"http:\/\/1.bp.blogspot.com\/-hSbMx7_-ad4\/VU6Rm67_snI\/AAAAAAAABoI\/a6keuBrl2Dw\/s1600\/1.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-kFmKLm6BGLA\/VU6RokNkuKI\/AAAAAAAABoU\/U704HYeB4Q4\/s1600\/2.jpg\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-kFmKLm6BGLA\/VU6RokNkuKI\/AAAAAAAABoU\/U704HYeB4Q4\/s1600\/2.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/2.bp.blogspot.com\/-43rLQmr9zO4\/VU6RonJ5_zI\/AAAAAAAABoQ\/FxyNk32DvTU\/s1600\/3.jpg\\\"><img src=\\\"http:\/\/2.bp.blogspot.com\/-43rLQmr9zO4\/VU6RonJ5_zI\/AAAAAAAABoQ\/FxyNk32DvTU\/s1600\/3.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-ONG-vDaCdHo\/VU6RopfQbHI\/AAAAAAAABow\/9WGRqqBRSxU\/s1600\/4.jpg\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-ONG-vDaCdHo\/VU6RopfQbHI\/AAAAAAAABow\/9WGRqqBRSxU\/s1600\/4.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-EOMBssjzFC4\/VU6RpXMDkiI\/AAAAAAAABok\/qQbe9S1tgA0\/s1600\/5.jpg\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-EOMBssjzFC4\/VU6RpXMDkiI\/AAAAAAAABok\/qQbe9S1tgA0\/s1600\/5.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-3gm1Zkzwap8\/VU6RplJVheI\/AAAAAAAABoc\/M1cG0OLeSws\/s1600\/6.bmp\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-3gm1Zkzwap8\/VU6RplJVheI\/AAAAAAAABoc\/M1cG0OLeSws\/s1600\/6.bmp\\\" \/><\/a><\/p><p>&nbsp;<\/p>","date":"1431255163","tags":"tomcat,apache tomcat , tomcat eclipse , tomcat ayarlar\u0131 , tomcat ayar eclipse , tomcat kurulum , eclipse kurulum, tomcat eclipse entegrasyon","link":"apache-tomcat-kurulumu-ve-eclipse-entregrasyonu"},{"id":"116","title":"Java - Kal\u0131t\u0131m","content_half":"Bu yaz\u0131ma bir &ouml;nceki yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m &ouml;rnek &uuml;zerinden devam ediyorum.Bir &ouml;nceki yaz\u0131lar\u0131ma buradan ula\u015fabilirsiniz.E\u011fer bir &ouml;nceki konularla ilgili bilginiz k\u0131s\u0131tl\u0131 ise bu konuyu okumadan &ouml;nce onlar\u0131 okumakta fayda var.Kal\u0131t\u0131m , Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n en &ouml;nemli &ouml;zelliklerinden biridir.Kal\u0131t\u0131m\u0131 kullanarak olu\u015fturudu\u011funuz alt s\u0131n\u0131flar\u0131n gizli olmayan &ouml;rnek de\u011fi\u015fkenlerine ve metodlar\u0131na eri\u015feb...\\n","content_full":"<p>Bu yaz\u0131ma bir &ouml;nceki yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m &ouml;rnek &uuml;zerinden devam ediyorum.<br \/><a href=\\\"http:\/\/kustemura.blogspot.com.tr\/search\/label\/Java\\\">Bir &ouml;nceki yaz\u0131lar\u0131ma buradan ula\u015fabilirsiniz<\/a>.E\u011fer bir &ouml;nceki konularla ilgili bilginiz k\u0131s\u0131tl\u0131 ise bu konuyu okumadan &ouml;nce onlar\u0131 okumakta fayda var.<br \/>Kal\u0131t\u0131m , Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n en &ouml;nemli &ouml;zelliklerinden biridir.<br \/>Kal\u0131t\u0131m\u0131 kullanarak olu\u015fturudu\u011funuz alt s\u0131n\u0131flar\u0131n gizli olmayan &ouml;rnek de\u011fi\u015fkenlerine ve metodlar\u0131na eri\u015febilirsiniz.<br \/>Java&#39;da olu\u015fturdu\u011funuz herhangi bir s\u0131n\u0131f i&ccedil;in yaln\u0131zca bir &uuml;st s\u0131n\u0131f belirtebilirsiniz , &ccedil;&uuml;nk&uuml; bir alt s\u0131n\u0131f\u0131n birden fazla t&uuml;retilmesini Java desteklemez.A\u015fa\u011f\u0131da Anne&#39;den t&uuml;reyen &Ccedil;ocuk &ouml;rne\u011fi verilmektedir.<br \/>Olu\u015fturdu\u011funuz &uuml;st s\u0131n\u0131flardan t&uuml;reyen alt s\u0131n\u0131flara kendilerine has &ouml;zellikler ekleyerek , bir &uuml;st s\u0131n\u0131f\u0131n &ouml;zelliklerini devredebilirsiniz.<br \/><br \/>Java&#39;da kat\u0131l\u0131m yoluyla al\u0131nan s\u0131n\u0131fa <strong>&uuml;st s\u0131n\u0131f (superclass) ( t&uuml;reten )<\/strong> , kal\u0131t\u0131m\u0131 alan <strong>( t&uuml;retilen )<\/strong> s\u0131n\u0131fa ise alt s\u0131n\u0131f<strong> ( subclass) <\/strong>ad\u0131 verilir.Bu y&uuml;zden alt s\u0131n\u0131f, &uuml;st s\u0131n\u0131f\u0131n daha &ouml;zelle\u015fmi\u015f bir halidir.<br \/><br \/>Bir s\u0131n\u0131ftan kal\u0131t\u0131m t&uuml;retmek i&ccedil;in Java&#39;da <strong>extends <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; kullan\u0131l\u0131r.<br \/>A\u015fa\u011f\u0131daki program <strong>Mother<\/strong> ad\u0131nda bir &uuml;st s\u0131n\u0131f ve <strong>Child<\/strong> ad\u0131nda bir alt s\u0131n\u0131f olu\u015fturur.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Mother { String hairColor = &quot;Siyah&quot;; void theCharacteristicsOfMother() {  System.out.println(&quot;Mother : \\\\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor); }}class Child extends Mother { String eye = &quot;Mavi&quot;; void theCharacteristicsOfChild() {  System.out.println(&quot;Child :  \\\\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor    + &quot; \\\\n &quot; + &quot; G&ouml;z Rengi : &quot; + eye); }}class SimpleInheritance { public static void main(String[] args) {  final Mother rose = new Mother();  final Child jack = new Child();  jack.theCharacteristicsOfMother();  jack.theCharacteristicsOfChild(); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Mother :   Sa&ccedil; Rengi : SiyahChild :    Sa&ccedil; Rengi : Siyah   G&ouml;z Rengi : Mavi<\/sh><p>Burada , Child alt s\u0131n\u0131f\u0131 , &uuml;st s\u0131n\u0131f\u0131 olan Mother s\u0131n\u0131f\u0131n\u0131n t&uuml;m &uuml;yelerini i&ccedil;erir.Bu y&uuml;zden jack hairColor &ouml;rnek de\u011fi\u015fkenine eri\u015febilir ve theCharacteristicsOfMother methodunu &ccedil;a\u011f\u0131rabilir.Yani burada jack sa&ccedil; rengini annesinden alm\u0131\u015ft\u0131r , fakat g&ouml;z rengi kendine has bir &ouml;zelliktir.Mother , Child i&ccedil;in bir &uuml;st s\u0131n\u0131f olmas\u0131na ra\u011fmen tamamen ba\u011f\u0131ms\u0131z bir s\u0131n\u0131ft\u0131r. &Uuml;st s\u0131n\u0131ftan kal\u0131t\u0131m\u0131 devralan bir alt s\u0131n\u0131f deklerasyonu \u015fu \u015fekilde olmal\u0131d\u0131r :<\/p><sh class=\\\"brush: java\\\"> class alt-sinif-adi extends ust-sinif-adi{ \/\/S\u0131n\u0131f\u0131n G&ouml;vdesi}<\/sh><p>Kal\u0131t\u0131m&#39;da &Uuml;ye Eri\u015fimi Bir alt s\u0131n\u0131f , &uuml;st s\u0131n\u0131f\u0131n t&uuml;m &uuml;yelerini i&ccedil;ermesine ra\u011fmen <strong>private <\/strong>olarak tan\u0131ml\u0131 olan hi&ccedil;bir &uuml;yesine eri\u015femez.<br \/>&Ouml;rne\u011fimiz &uuml;zerinden devam edelim.<\/p><sh>class Mother { String hairColor = &quot;Siyah&quot;; private final String gender = &quot;Kad\u0131n&quot;; void theCharacteristicsOfMother() {  System.out.println(&quot;Mother : \\\\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor    + &quot; Cinsiyet : &quot; + gender); }}class Child extends Mother { String eye = &quot;Mavi&quot;; void theCharacteristicsOfChild() {  System.out.println(&quot;Child :  \\\\n &quot; + &quot; Sa&ccedil; Rengi : &quot; + hairColor    + &quot; \\\\n &quot; + &quot; G&ouml;z Rengi : &quot; + eye + &quot; Cinsiyet : &quot; + gender);   \/\/ Burada gender &ouml;rnek de\u011fi\u015fkenine eri\u015felemez ,        \/\/  program derlenmeden sonlan\u0131r. }}class SimpleInheritance { public static void main(String[] args) {  final Mother rose = new Mother();  final Child jack = new Child();  jack.theCharacteristicsOfMother();  jack.theCharacteristicsOfChild(); }}<\/sh><p>Daha iyi bir &ouml;rnekle anlatmaya &ccedil;al\u0131\u015faca\u011f\u0131m,&ouml;nceki derslerde Rectangle s\u0131n\u0131f\u0131 &uuml;zerinden &ouml;rnekler vermi\u015ftir , ayn\u0131 s\u0131n\u0131f ve yap\u0131 &uuml;zerinden &ouml;rneklerimize devam edelim. Box s\u0131n\u0131f\u0131n\u0131 geni\u015fleterek yeni bir &ouml;zellik daha ekliyoruz , 3 &ouml;zelli\u011fimiz vard\u0131(width , height , depth) eklenen &ouml;zellik weight olsun .Bu \u015fekilde dikd&ouml;rtgenimizin geni\u015fli\u011fi,y&uuml;ksekli\u011fi,derinli\u011fi ve a\u011f\u0131rl\u0131\u011f\u0131 oldu.<\/p><sh class=\\\"brush: java\\\">class Rectangle { double width; double height; double depth; Rectangle(Rectangle clone) {  width = clone.width;  height = clone.height;  depth = clone.depth; } Rectangle(double width, double height, double depth) {  this.width = width;  this.height = height;  this.depth = depth; } Rectangle() {  width = -1;  height = -1;  depth = -1; } double volume() {  return width * height * depth; }}class RectangleWeight extends Rectangle { double weight; RectangleWeight(RectangleWeight clone) {  width = clone.width;  height = clone.height;  depth = clone.depth;  weight = clone.weight; } RectangleWeight(double width, double height, double depth, double w) {  this.width = width;  this.height = height;  this.depth = depth;  weight = w; } RectangleWeight() {  width = -1;  height = -1;  depth = -1;  weight = -1; }}class DemoRectangleWeight { public static void main(String[] args) {  final RectangleWeight myRectangle = new RectangleWeight(5, 10, 15, 25);  final RectangleWeight myRectangle2 = new RectangleWeight(myRectangle);  System.out.println(&quot;(myRectangle i&ccedil;in)\\\\nDikd&ouml;rtgenin Hacmi :  &quot;    + myRectangle.volume());  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle.weight);  System.out.println();  System.out.println(&quot;(myRectangle2 i&ccedil;in)\\\\nDikd&ouml;rtgenin Hacmi  : &quot;    + myRectangle2.volume());  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle2.weight); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : (myRectangle i&ccedil;in)Dikd&ouml;rtgenin Hacmi :  750.0Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0(myRectangle2 i&ccedil;in)Dikd&ouml;rtgenin Hacmi  : 750.0Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0<\/sh><p>Burada RectangleWeight , Rectangle s\u0131n\u0131f\u0131n\u0131n &ouml;zelliklerini kal\u0131t\u0131m yoluyla devral\u0131r ve onlara weight &ouml;zelli\u011finide ekler.Bir kez daha geni\u015fletelim.<\/p><sh class=\\\"brush: java\\\">class ColorRectangle extends Rectangle {  String color; ColorRectangle(double width,double height,double depth,String c){  this.width = width;  this.height = height;  this.depth = depth;  color = c; }}<\/sh><p>Burada ise Rectangle s\u0131n\u0131f\u0131n\u0131m\u0131z\u0131 geni\u015fletip bir renk &ouml;zelli\u011fi verdik.<\/p>","date":"1431255163","tags":"java,javase , java kal\u0131t\u0131m , java extends , java kal\u0131t\u0131m nedir , java extends nedir , extends nedir , kal\u0131t\u0131m nedir , java ile kal\u0131t\u0131m nas\u0131l yap\u0131l\u0131r , java kal\u0131t\u0131m yapma","link":"java---kalitim"},{"id":"117","title":"this Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"Bu yaz\u0131mda this anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m , bu konuyu daha iyi anlamak i&ccedil;in bir &ouml;nceki yaz\u0131m&nbsp;Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )&nbsp;konusuna bakmakta fayda var.&nbsp;class Rectangle { double width; double height; double depth; Rectangle(final double w, final double h, final double d) {  width = w;  height = h;  depth = d; } Rectangle(double w,double h){  width = w;  height = h; } Rect...\\n","content_full":"<p>Bu yaz\u0131mda this anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m , bu konuyu daha iyi anlamak i&ccedil;in bir &ouml;nceki yaz\u0131m&nbsp;<a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/03\/java-ile-oop-3-yaplandrclar.html\\\">Java - Yap\u0131land\u0131r\u0131c\u0131lar ( Constructors )<\/a>&nbsp;konusuna bakmakta fayda var.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { double width; double height; double depth; Rectangle(final double w, final double h, final double d) {  width = w;  height = h;  depth = d; } Rectangle(double w,double h){  width = w;  height = h; } Rectangle() {  width = -1;  height = -1;  depth = -1; } double volume() {  return width * height * depth; }}<\/sh><p>&nbsp;<\/p><p>Bir &ouml;nceki &ouml;rnekde parametreli yap\u0131land\u0131r\u0131c\u0131m\u0131z\u0131 tan\u0131mlarken parametre isimlerini&nbsp;<strong>w , h , d<\/strong>&nbsp;olarak tan\u0131mlam\u0131\u015ft\u0131k.Farkl\u0131 isimlerde tan\u0131mlamam\u0131z\u0131n sebebi s\u0131n\u0131f\u0131n de\u011fi\u015fkenleri ile ayn\u0131 isme sahip olmamas\u0131ndan kaynaklan\u0131r.&nbsp;<strong>this&nbsp;<\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; ile s\u0131n\u0131f\u0131n de\u011fi\u015fkenlerini referans edip ayn\u0131 ismi verebiliriz.Bunu bir &ouml;rnekle inceleyelim ;<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { double width; double height; double depth; Rectangle(final double width, final double height, final double depth) {  this.width = width;  this.height = height;  this.depth = depth; }  Rectangle(double width,double height){  this.width=width;  this.height=height; }  Rectangle() {  width = -1;  height = -1;  depth = -1; } double volume() {  return width * height * depth; }}<\/sh><p><br \/>Burada ki&nbsp;<strong>this.<\/strong>&nbsp;ile ba\u015flayan de\u011fi\u015fkenlerin hepsi asl\u0131nda s\u0131n\u0131f\u0131n de\u011fi\u015fkenlerini referans etmektedir.Daha sonra koda bakt\u0131\u011f\u0131m\u0131zda anla\u015f\u0131labilirli\u011fi artt\u0131rmak i&ccedil;in bu y&ouml;ntem kullan\u0131labilir.<br \/><br \/><em><strong>this&#39;in Di\u011fer Kullan\u0131m\u0131<\/strong><\/em><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">this(arg&uuml;man listesi);<\/sh><p><br \/>Burada arg&uuml;man listesine kar\u015f\u0131l\u0131k gelen yap\u0131land\u0131r\u0131c\u0131 &ccedil;a\u011fr\u0131l\u0131r.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { double width; double height; double depth; Rectangle(final double width, final double height) {  this.width = width;  this.height = height; } Rectangle(final double width, final double height, final double depth) {  this(width, height);  this.depth = depth; } Rectangle() {  this(-1, -1, -1); } double volume() {  return width * height * depth; }}<\/sh><p>Bu programda bir &ouml;nceki program ile ayn\u0131 i\u015flemi yapar.&Uuml;&ccedil; parametreli <strong>constructor <\/strong>&ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda iki parametreli <strong>constructor&#39;e <\/strong>g&ouml;ndermede bulunur.<br \/><br \/><strong>1 - Ayn\u0131 anda hem this() hemde super() kullan\u0131lamaz.<\/strong><br \/><strong>2 - Yap\u0131land\u0131r\u0131c\u0131ya ait herhangi bir de\u011fi\u015fken kullan\u0131lamaz.<\/strong><\/p><p>&nbsp;<\/p>","date":"1431427963","tags":"java,javase, this , c# this , this kullan\u0131m\u0131 , this nedir , this programlama , this ne i\u015fe yarar , javada this","link":"this-anahtar-sozcugu"},{"id":"118","title":"super Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"Bir &ouml;nceki &nbsp;Java - Kal\u0131t\u0131m&nbsp;adl\u0131 yaz\u0131mdan kald\u0131\u011f\u0131m yerden devam ediyorum.&Ouml;nceki konularda kulland\u0131\u011f\u0131m\u0131z &ouml;rnekler bu yaz\u0131mda da devam etmektedir.&Ouml;rne\u011fin , RectangleWeight&#39;in&nbsp;(subclasss) yap\u0131land\u0131r\u0131c\u0131s\u0131 , Rectangle ( superclass )&#39;\u0131n width,height ve depth alanlar\u0131na a&ccedil;\u0131kca de\u011fer atamas\u0131 yapabilir.Bu i\u015flem yaln\u0131zca &uuml;st s\u0131n\u0131ftan kodu kopyalay\u0131p verimi azaltmaz , ayn\u0131 zamanda bir alt s\u0131n\u0131f\u0131n &uuml;yelere eri\u015fi...\\n","content_full":"<p>Bir &ouml;nceki &nbsp;<a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-ile-oop-4-kaltm.html\\\">Java - Kal\u0131t\u0131m<\/a>&nbsp;adl\u0131 yaz\u0131mdan kald\u0131\u011f\u0131m yerden devam ediyorum.<br \/>&Ouml;nceki konularda kulland\u0131\u011f\u0131m\u0131z &ouml;rnekler bu yaz\u0131mda da devam etmektedir.<br \/><br \/>&Ouml;rne\u011fin , <strong>RectangleWeight&#39;in&nbsp;(<\/strong>subclasss) yap\u0131land\u0131r\u0131c\u0131s\u0131 , <strong>Rectangle <\/strong>( superclass )&#39;\u0131n <strong>width,height ve depth<\/strong> alanlar\u0131na a&ccedil;\u0131kca de\u011fer atamas\u0131 yapabilir.Bu i\u015flem yaln\u0131zca &uuml;st s\u0131n\u0131ftan kodu kopyalay\u0131p verimi azaltmaz , ayn\u0131 zamanda bir alt s\u0131n\u0131f\u0131n &uuml;yelere eri\u015fimini de sa\u011flar.<br \/>&Uuml;st s\u0131n\u0131f\u0131n alanlar\u0131n\u0131 kapatmak isteyece\u011fimiz ( yani , veri &uuml;yelerini <strong>private <\/strong>olarak korumak) zamanlar olucakt\u0131r. Bu durumda bir &ouml;nceki &ouml;rneklerde kulland\u0131\u011f\u0131m\u0131z yap\u0131y\u0131 kullanamay\u0131z.Bu y&ouml;ntem ise&nbsp;<strong>Sarmalama <\/strong>olarak adland\u0131r\u0131l\u0131r.Nesneye y&ouml;nelimli programlaman\u0131n birincil &ouml;zellikli\u011fidir.<br \/>Bir alt s\u0131n\u0131f\u0131n , &uuml;st s\u0131n\u0131f\u0131na g&ouml;ndermede bulunmas\u0131 gerekirse bunu <strong>super <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak yapmal\u0131y\u0131z.<br \/><strong>super <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n iki genel formu vard\u0131r,Birincisi &nbsp;, &uuml;st s\u0131n\u0131f\u0131n yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131 &ccedil;a\u011f\u0131r\u0131r.\u0130kincisi ise bir &uuml;st s\u0131n\u0131f\u0131n,bir alt s\u0131n\u0131f &uuml;yesi taraf\u0131ndan gizlenen bir &uuml;yesine eri\u015fmek i&ccedil;in kullan\u0131l\u0131r.<br \/><br \/><strong>1 - &Uuml;st S\u0131n\u0131f Yap\u0131land\u0131r\u0131c\u0131lar\u0131n\u0131 &Ccedil;a\u011f\u0131rmak \u0130&ccedil;in super Kullanmak<\/strong><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { private final double width; private final double height; private final double depth; Rectangle(Rectangle clone) {  width = clone.width;  height = clone.height;  depth = clone.depth; } Rectangle(double width, double height, double depth) {  this.width = width;  this.height = height;  this.depth = depth; } Rectangle() {  width = -1;  height = -1;  depth = -1; } double volume() {  return width * height * depth; }}class RectangleWeight extends Rectangle { double weight; RectangleWeight(RectangleWeight clone) {  super(clone);  weight = clone.weight; } RectangleWeight(double width, double height, double depth, double weight) {  super(width, height, depth);  this.weight = weight; } RectangleWeight() {  super();  weight = -1; }}class DemoRectangleWeight { public static void main(String[] args) {  final RectangleWeight myRectangle = new RectangleWeight(5, 10, 15, 25);  final RectangleWeight myRectangle2 = new RectangleWeight(myRectangle);  System.out.println(&quot;(myRectangle i&ccedil;in)\\\\nDikd&ouml;rtgenin Hacmi :  &quot;    + myRectangle.volume());  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle.weight);  System.out.println();  System.out.println(&quot;(myRectangle2 i&ccedil;in)\\\\nDikd&ouml;rtgenin Hacmi  : &quot;    + myRectangle2.volume());  System.out.println(&quot;Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + myRectangle2.weight); }}(myRectangle i&ccedil;in)Dikd&ouml;rtgenin Hacmi :  750.0Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0(myRectangle2 i&ccedil;in)Dikd&ouml;rtgenin Hacmi  : 750.0Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 25.0<\/sh><p>Bu program\u0131n &ccedil;\u0131kt\u0131s\u0131 da bir &ouml;nceki yaz\u0131mda yazd\u0131\u011f\u0131m program ile ayn\u0131d\u0131r.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">RectangleWeight(double width, double height, double depth, double w) {  this.width = width;  this.height = height;  this.depth = depth;  weight = w;  }<\/sh><p>Yani bu program ile ,<\/p><sh class=\\\"brush: java\\\">RectangleWeight(double width, double height, double depth, double w) {  super(width, height, depth);  weight = w; }<\/sh><p>bu program\u0131n yapt\u0131\u011f\u0131 i\u015f ayn\u0131d\u0131r.Fakat ikinci program hem verimlili\u011fi artt\u0131r\u0131r , tekrarlamay\u0131 &ouml;nler ve ayr\u0131ca <strong>Sarmalama <\/strong>&ouml;zelli\u011fini birebir uygular.<br \/><br \/><strong>2 - super&#39;in \u0130kinci Bir Kullan\u0131m\u0131<\/strong><br \/><br \/>super&#39;in ikinci kullan\u0131m\u0131 bir a&ccedil;\u0131dan <strong>this <\/strong>gibidir.Tek fark\u0131,her zaman , kullan\u0131ld\u0131\u011f\u0131 alt s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131na g&ouml;ndermede bulunuyor olmas\u0131d\u0131r.<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">super.uye<\/sh><p>Burada ki uye , ya bir method ya da bir &ouml;rnek de\u011fi\u015fkendir. super&#39;in bu ikinci kullan\u0131m\u0131 , bir alt s\u0131n\u0131f\u0131n &uuml;ye adlar\u0131n\u0131n , &uuml;st s\u0131n\u0131f i&ccedil;inde ki ayn\u0131 adl\u0131 &uuml;yeler ile gizlendi\u011fi durumlarda &ccedil;ok s\u0131k g&ouml;r&uuml;l&uuml;r.Bunu bir &ouml;rnek ile inceleyelim.<\/p><sh class=\\\"brush: java\\\">class A { int i;}class B extends A { int i; B(int a, int b) {  super.i = a;  i = b; } void show() {  System.out.println(&quot; Superclass i = &quot; + super.i);  System.out.println(&quot; Subclass i = &quot; + i); }}class useSuper { public static void main(String[] args) {  final B subClone = new B(1, 2);  subClone.show(); }} Superclass i = 1 Subclass i = 2<\/sh><p><strong>B<\/strong>&#39;deki <strong>i<\/strong> &ouml;rnek de\u011fi\u015fkeni <strong>A<\/strong>&#39;dakini gizlemesine ra\u011fmen <strong>super<\/strong> , &uuml;st s\u0131n\u0131f i&ccedil;erisinde tan\u0131mlanan <strong>i<\/strong>&#39;ye eri\u015fime izin verir.G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi <strong>super <\/strong>, ayr\u0131ca alt s\u0131n\u0131f taraf\u0131ndan gizlenen methodlar\u0131 &ccedil;a\u011f\u0131rmak i&ccedil;in de kullan\u0131labilir.<\/p>","date":"1431427963","tags":"java,javase,super , java super , java super kullan\u0131m\u0131 , java super nedir , java super nasil calisir , java super kullanmak","link":"super-anahtar-sozcugu"},{"id":"119","title":"Java - Kal\u0131t\u0131m #2  \u00c7ok D\u00fczeyli Bir Hiyerar\u015fi Olu\u015fturmak","content_half":"Bir &ouml;nceki yaz\u0131lar\u0131mda kal\u0131t\u0131m ile ilgili , bir &uuml;st s\u0131n\u0131f birde alt s\u0131n\u0131f olu\u015fturmu\u015ftuk.Bu yap\u0131y\u0131 istedi\u011finiz kadar kal\u0131t\u0131m katman\u0131 i&ccedil;eren bir hiyerar\u015fi olu\u015fturabilirsiniz.Olu\u015fturulmu\u015f bir alt s\u0131n\u0131f\u0131n &nbsp;( subclass) ba\u015fka bir s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131 olabilece\u011finden &ouml;nceki yaz\u0131lar\u0131mda bahsetmi\u015ftim.\u015eimdi &ouml;rne\u011fimize kald\u0131\u011f\u0131m\u0131z yerden devam edelim ve bu &ouml;rne\u011fe yeni bir s\u0131n\u0131f ekleyelim.Dikd&ouml;rtgen &ouml;rne\u011finde Dikd...\\n","content_full":"<p>Bir &ouml;nceki yaz\u0131lar\u0131mda kal\u0131t\u0131m ile ilgili , bir &uuml;st s\u0131n\u0131f birde alt s\u0131n\u0131f olu\u015fturmu\u015ftuk.Bu yap\u0131y\u0131 istedi\u011finiz kadar kal\u0131t\u0131m katman\u0131 i&ccedil;eren bir hiyerar\u015fi olu\u015fturabilirsiniz.Olu\u015fturulmu\u015f bir alt s\u0131n\u0131f\u0131n &nbsp;( subclass) ba\u015fka bir s\u0131n\u0131f\u0131n &uuml;st s\u0131n\u0131f\u0131 olabilece\u011finden &ouml;nceki yaz\u0131lar\u0131mda bahsetmi\u015ftim.<br \/>\u015eimdi &ouml;rne\u011fimize kald\u0131\u011f\u0131m\u0131z yerden devam edelim ve bu &ouml;rne\u011fe yeni bir s\u0131n\u0131f ekleyelim.<strong>Dikd&ouml;rtgen<\/strong> &ouml;rne\u011finde <strong>Dikd&ouml;rtgene A\u011f\u0131rl\u0131k <\/strong>&ouml;zelli\u011fi vermi\u015ftik , \u015fimdi size bir <strong>Nakliye <\/strong>&ouml;zelli\u011fi ekleyelim ve bu <strong>Dikd&ouml;rtgenimizin <\/strong>bir &uuml;r&uuml;n veya mal oldu\u011funu d&uuml;\u015f&uuml;nelim.<br \/>&quot;<strong>Shipment<\/strong>&quot; ad\u0131nda bir s\u0131n\u0131f ekliyorum.<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { private final double width; private final double height; private final double depth; Rectangle(Rectangle clone) {  width = clone.width;  height = clone.height;  depth = clone.depth; } Rectangle(double width, double height, double depth) {  this.width = width;  this.height = height;  this.depth = depth; } Rectangle() {  width = -1;  height = -1;  depth = -1; } double volume() {  return width * height * depth; }}class RectangleWeight extends Rectangle { double weight; RectangleWeight(RectangleWeight clone) {  super(clone);  weight = clone.weight; } RectangleWeight(double width, double height, double depth, double weight) {  super(width, height, depth);  this.weight = weight; } RectangleWeight() {  super();  weight = -1; }}class Shipment extends RectangleWeight { double cost; Shipment(Shipment clone) {  super(clone);  cost = clone.cost; } Shipment(double width, double height, double depth, double weight,   double cost) {  super(width, height, depth, weight);  this.cost = cost; } Shipment() {  super();  cost = -1; }}class DemoShipment { public static void main(String args[]) {  final Shipment shipment = new Shipment(5, 10, 15, 20, 30);  final Shipment shipment2 = new Shipment(shipment);  double vol;  vol = shipment.volume();  System.out.println(&quot;( shipment i&ccedil;in ) \\\\n Dikd&ouml;rtgenin Hacmi &quot; + vol    + &quot; \\\\n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + shipment.weight    + &quot; \\\\n Nakliye &Uuml;creti : $&quot; + shipment.cost);  System.out.println();  vol = shipment2.volume();  System.out.println(&quot;( shipment2 i&ccedil;in ) \\\\n Dikd&ouml;rtgenin Hacmi &quot; + vol    + &quot; \\\\n Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : &quot; + shipment2.weight    + &quot; \\\\n Nakliye &Uuml;creti : $&quot; + shipment2.cost); }}( shipment i&ccedil;in )  Dikd&ouml;rtgenin Hacmi 750.0  Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 20.0  Nakliye &Uuml;creti : $30.0( shipment2 i&ccedil;in )  Dikd&ouml;rtgenin Hacmi 750.0  Dikd&ouml;rtgenin A\u011f\u0131rl\u0131\u011f\u0131 : 20.0  Nakliye &Uuml;creti : $30.0<\/sh><p>super() devaml\u0131 en yak\u0131ndaki &uuml;st s\u0131n\u0131f\u0131n yap\u0131land\u0131r\u0131c\u0131s\u0131na g&ouml;ndermede bulunur.Shipment i&ccedil;indeki super(),RectangleWeight i&ccedil;erisindeki yap\u0131land\u0131r\u0131c\u0131y\u0131 &ccedil;a\u011f\u0131r\u0131r .RectangleWeight i&ccedil;erisindeki super() , Rectangle i&ccedil;indeki yap\u0131land\u0131r\u0131c\u0131y\u0131 &ccedil;a\u011f\u0131r\u0131r.&Ouml;rneklerimin daha iyi anla\u015f\u0131lmas\u0131 i&ccedil;in ayn\u0131 dosya i&ccedil;erisinde olu\u015fturarak anlat\u0131yorum , asl\u0131nda ger&ccedil;ekte her s\u0131n\u0131f\u0131n farkl\u0131 dosyalarda tutulmas\u0131 bir standartt\u0131r.<\/p>","date":"1431427963","tags":"java,javase, kal\u0131t\u0131m , kal\u0131t\u0131m , java kal\u0131t\u0131m olu\u015fturmak , java hiyerarsi , java cok duzeyli hiyerarsi , java coklu kal\u0131t\u0131m , java cok kal\u0131t\u0131m","link":"java---kalitim-sharp2-cok-duzeyli-bir-hiyerarsi-olusturmak"},{"id":"120","title":"Java - Kal\u0131t\u0131m #3 Yap\u0131land\u0131r\u0131c\u0131lar\u0131n \u00c7a\u011fr\u0131lma S\u0131ras\u0131","content_half":"Bir s\u0131n\u0131f hiyerar\u015fisinde t&uuml;retilme s\u0131ras\u0131na g&ouml;re &ccedil;a\u011fr\u0131l\u0131rlar .Yani &uuml;st s\u0131n\u0131ftan alt s\u0131n\u0131flara do\u011fru bir \u015fekilde. Bunu basit bir &ouml;rnek ile ele alal\u0131m.class A { A() {  System.out.println(&quot; Ben A&#39;n\u0131n Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;); }}class B extends A { B() {  System.out.println(&quot; Ben B&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;); }}class C extends B { C() {  System.out.println(&quot; Ben C&#39;nin Yap\u0131land...\\n","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde t&uuml;retilme s\u0131ras\u0131na g&ouml;re &ccedil;a\u011fr\u0131l\u0131rlar .Yani &uuml;st s\u0131n\u0131ftan alt s\u0131n\u0131flara do\u011fru bir \u015fekilde. Bunu basit bir &ouml;rnek ile ele alal\u0131m.<\/p><sh class=\\\"brush: java\\\">class A { A() {  System.out.println(&quot; Ben A&#39;n\u0131n Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;); }}class B extends A { B() {  System.out.println(&quot; Ben B&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;); }}class C extends B { C() {  System.out.println(&quot; Ben C&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !&quot;); }}class CallingConstuructors { public static void main(String args[]) {  final C c = new C(); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :  Ben A&#39;n\u0131n Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m ! Ben B&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m ! Ben C&#39;nin Yap\u0131land\u0131r\u0131c\u0131s\u0131y\u0131m !<\/sh><p>Mant\u0131kl\u0131 olarak bu &ccedil;a\u011fr\u0131lman\u0131n sebebi bellidir.Bir &uuml;st s\u0131n\u0131f hi&ccedil;bir \u015fekilde bir alt s\u0131n\u0131f\u0131n bilgisine sahip de\u011fildir.<\/p>","date":"1431427963","tags":"java,javase, yap\u0131land\u0131r\u0131c\u0131 , java constructors , java yap\u0131land\u0131r\u0131c\u0131 olu\u015fturmak , java yap\u0131land\u0131r\u0131c\u0131lar\u0131n ca\u011fr\u0131lma s\u0131ras\u0131 , c# constructors , c# yap\u0131land\u0131r\u0131c\u0131","link":"java---kalitim-sharp3-yapilandiricilarin-cagrilma-sirasi"},{"id":"121","title":"Java - Kal\u0131t\u0131m #4 - Methodu Ezmek","content_half":"Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim.class A { int i, j; A(int a, int b) {  i = a;  j = b; } void show() {  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j); }...\\n","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim.<\/p><sh class=\\\"brush: java\\\">class A { int i, j; A(int a, int b) {  i = a;  j = b; } void show() {  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j); }}class B extends A { int k; B(int a, int b, int c) {  super(a, b);  k = c; } void show() {  System.out.println(&quot;k = &quot; + k); }}class Override { public static void main(String args[]) {  final B subClone = new B(5, 10, 15); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :k = 15<\/sh><p><strong>B<\/strong> tipinde olu\u015fturulan bir nesne &uuml;zerinden , <strong>show()<\/strong> methodunu &ccedil;a\u011f\u0131rd\u0131\u011f\u0131m\u0131zda <strong>B<\/strong> i&ccedil;inde tan\u0131ml\u0131 olan <strong>show() <\/strong>methodu &ccedil;a\u011fr\u0131l\u0131r , &ccedil;&uuml;nk&uuml; <strong>show()&#39;<\/strong>un <strong>B <\/strong>i&ccedil;erisinde ki versiyonu <strong>A <\/strong>i&ccedil;erisindeki versiyonu ezer.<strong>(Override)<\/strong>Yine ezilen versiyona ula\u015fmak i&ccedil;in <strong>super <\/strong>kullan\u0131l\u0131r.<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class A { int i, j; A(int a, int b) {  i = a;  j = b; } void show() {  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j); }}class B extends A { int k; B(int a, int b, int c) {  super(a, b);  k = c; } void show() {  super.show();  System.out.println(&quot;k = &quot; + k); }}class Override { public static void main(String args[]) {  final B subClone = new B(5, 10, 15); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : i = 5 j = 10k = 15<\/sh><p>Method ezmesi sadece ayn\u0131 ad\u0131 ve tip imzas\u0131n\u0131 ta\u015f\u0131mas\u0131 durumunda ge&ccedil;erlidir.Aksi takdirde bir method ezmesi de\u011fil , a\u015f\u0131r\u0131 y&uuml;klenme olu\u015fur.Bunu bir &ouml;rnekle a&ccedil;\u0131klayay\u0131m.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class A { int i, j; A(int a, int b) {  i = a;  j = b; } void show() {  System.out.println(&quot;i = &quot; + i + &quot; j = &quot; + j); }}class B extends A { int k; B(int a, int b, int c) {  super(a, b);  k = c; } void show(String msg) {  System.out.println(msg + k); }}class Override { public static void main(String args[]) {  final B subClone = new B(5, 10, 15);  subClone.show(&quot;k ad\u0131nda bir de\u011fi\u015fken = &quot;);  subClone.show(); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :k ad\u0131nda bir de\u011fi\u015fken = 15i = 5 j = 10<\/sh><p>Burada B i&ccedil;erisinde ki show() methodu , A i&ccedil;erisindeki show() methodunu a\u015f\u0131r\u0131 y&uuml;klemi\u015ftir.<\/p><p>&nbsp;<\/p>","date":"1431427963","tags":"java,javase, metot, java kal\u0131t\u0131m , java metot ezme , java metod nedir , java method , java method ezmek , java method ezme , c# method , c# metot","link":"java---kalitim-sharp4---methodu-ezmek"},{"id":"122","title":"Java - Kal\u0131t\u0131m #5 Abstract S\u0131n\u0131flar\u0131 Kullanmak ( \u00d6zet\/Soyut)","content_half":"Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim. &Ouml;nceki yaz\u0131lar\u0131mda &nbsp;Java - Kal\u0131t\u0131m konular\u0131n\u0131 i\u015flemi\u015ftik. \u015eimdi kald\u0131\u011f\u0131m\u0131z yerden devam ediyoruz.E\u011fer bu konu hakk\u0131nda pek bir bilginiz yok ...\\n","content_full":"<p>Bir s\u0131n\u0131f hiyerar\u015fisinde , alt s\u0131n\u0131fa ait bir method &uuml;st s\u0131n\u0131f\u0131nda ki bir method ile ayn\u0131 tipe ve ada sahipse ve b&ouml;yle bir method &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda her zaman methodun alt s\u0131n\u0131f taraf\u0131ndan tan\u0131mlanan versiyonuna ba\u015fvurulur.&Uuml;st s\u0131n\u0131ftaki method gizlenmi\u015f olur.Bunu bir &ouml;rnek ile inceleyelim. &Ouml;nceki yaz\u0131lar\u0131mda &nbsp;<a href=\\\"http:\/\/kustemura.blogspot.com.tr\/search?q=java+kal%C4%B1t%C4%B1m\\\">Java - Kal\u0131t\u0131m<\/a> konular\u0131n\u0131 i\u015flemi\u015ftik. \u015eimdi kald\u0131\u011f\u0131m\u0131z yerden devam ediyoruz.E\u011fer bu konu hakk\u0131nda pek bir bilginiz yok ise &ouml;nceki konulara bakmakta yarar var.<\/p><p>&nbsp;<\/p><p>&Ouml;nceki &ouml;rneklerimizde kulland\u0131\u011f\u0131m\u0131z yap\u0131lar\u0131n hepsinde i&ccedil;eri\u011fi hep &uuml;st s\u0131n\u0131f taraf\u0131ndan doldurulan ve ona eklemeler yapan alt s\u0131n\u0131flar\u0131 incelemi\u015ftik.Bazen yaln\u0131zca alt s\u0131n\u0131flar taraf\u0131ndan payla\u015f\u0131lacak ve i&ccedil;eri\u011fi onlar taraf\u0131ndan doldurulacak , genel bir form tan\u0131mlayan &uuml;st s\u0131n\u0131flar olu\u015fturmak isteyebilirsiniz.B&ouml;yle bir s\u0131n\u0131f , alt s\u0131n\u0131flar\u0131n ger&ccedil;ekle\u015ftirmek zorunda oldu\u011fu methodlar\u0131n do\u011fas\u0131n\u0131 belirler.<\/p><p>Bu durumda alt s\u0131n\u0131f\u0131n ger&ccedil;ekten de t&uuml;m gerekli methodlar\u0131 ezmesini sa\u011flamak i&ccedil;in bir yol olmas\u0131 gerekir.Java bu problemi <strong><em>&ouml;zet-soyut method<\/em> ( abstract method ) <\/strong>kavram\u0131 ile &ccedil;&ouml;zer.<\/p><p>&Ouml;zet bir method deklara etmek i&ccedil;in a\u015fa\u011f\u0131daki genel form kullan\u0131l\u0131r.<\/p><p>&nbsp;<\/p><p><strong>abstract tip_adi ( <em>parametre listesi<\/em> );<\/strong><\/p><p>&nbsp;<\/p><p>G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi , bir method g&ouml;vdesi yoktur.<\/p><p>Bir s\u0131n\u0131f\u0131 &ouml;zet olarak deklere etmek i&ccedil;in <strong><em>class <\/em><\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n sol taraf\u0131nda <strong><em>abstract <\/em><\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanmak yeterlidir.<\/p><p>Anlatt\u0131\u011f\u0131m \u015feyleri bir &ouml;rnek &uuml;zerinde inceleyelim.<\/p><p>&nbsp;<\/p><sh class=\\\"brush:java\\\">abstract class A { abstract void callMe(); void callMeToo() {  System.out.println(&quot;Bu bir somut methoddur.&quot;); }}class B extends A { @Override void callMe() {  System.out.println(&quot;B A&#39;daki callMe() methodunu i&ccedil;ermek zorundad\u0131r. &quot;); }}class AbstractDemo { public static void main(String args[]) {  final B b = new B();  b.callMe();  b.callMeToo(); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : B A&#39;daki callMe() methodunu i&ccedil;ermek zorundad\u0131r. Bu bir somut methoddur.<\/sh><p>Programda A s\u0131n\u0131f\u0131ndan bir nesne deklare edilmedi\u011fine dikkat edin.&Ouml;zet bir s\u0131n\u0131f\u0131 &ouml;rneklendirmek m&uuml;mk&uuml;n de\u011fildir.Bir ba\u015fka nokta : A s\u0131n\u0131f\u0131 callMeToo() ad\u0131nda somut bir method&#39;a sahiptir.&Ouml;zet s\u0131n\u0131flar &ouml;rneklendirmek i&ccedil;in kullan\u0131lamazlar , sadece nesne referanslar\u0131 olu\u015fturmak i&ccedil;in kullan\u0131labilirler.&Ccedil;&uuml;nk&uuml; Java&#39;n\u0131n &ccedil;al\u0131\u015fma zaman\u0131 &ccedil;ok bi&ccedil;imlili\u011fine yakla\u015f\u0131m\u0131 , &uuml;st s\u0131n\u0131f referanslar\u0131 arac\u0131l\u0131\u011f\u0131yla ger&ccedil;ekle\u015fir.Bu y&uuml;zden bir alt s\u0131n\u0131f nesnesine i\u015faret etmek &uuml;zere , &ouml;zet bir s\u0131n\u0131fa referans olu\u015fturmak m&uuml;mk&uuml;nd&uuml;r. Bunu bir &ouml;rnek ile ele alal\u0131m.<\/p><sh class=\\\"brush: java\\\">abstract class Figure { double dim1; double dim2; Figure(double a, double b) {  dim1 = a;  dim2 = b; } abstract double area();}class Rectangle extends Figure { Rectangle(double a, double b) {  super(a, b); } @Override double area() {  System.out.println(&quot;Dikd&ouml;rtgen&#39;in \u0130&ccedil; Alan\u0131 &quot;);  return dim1 * dim2; }}class Triangle extends Figure { Triangle(double a, double b) {  super(a, b); } @Override double area() {  System.out.println(&quot;&Uuml;&ccedil;gen&#39;in \u0130&ccedil; Alan\u0131 &quot;);  return dim1 * dim2 \/ 2; }}class AbstractAreas { public static void main(String args[]) {  \/\/ Figure f = new Figure(10,7); Ge&ccedil;ersiz , olu\u015fturulamaz.  final Rectangle r = new Rectangle(5, 2);  final Triangle t = new Triangle(3, 7);  Figure figureReference;  figureReference = r;  System.out.println(figureReference.area());  figureReference = t;  System.out.println(figureReference.area()); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131:Dikd&ouml;rtgen&#39;in \u0130&ccedil; Alan\u0131 10.0&Uuml;&ccedil;gen&#39;in \u0130&ccedil; Alan\u0131 10.5<\/sh><p>G&ouml;rd&uuml;\u011f&uuml;n&uuml;z gibi , <strong>area() <\/strong>methodu abstract b\u0131rak\u0131lm\u0131\u015ft\u0131r . &Ccedil;&uuml;nk&uuml;<strong> area()<\/strong> hesaplamas\u0131 i&ccedil;in her nesne farkl\u0131 bir method kullanmaktad\u0131r.Dikd&ouml;rtgenin i&ccedil; alan\u0131 form&uuml;l&uuml; ile &Uuml;&ccedil;genin i&ccedil; alan\u0131 form&uuml;l&uuml; farkl\u0131 oldu\u011fu i&ccedil;in ayn\u0131 methodu kullanamay\u0131z.area() methodunu abstract olu\u015fturmam\u0131z nedeni budur.&Uuml;st s\u0131n\u0131f taraf\u0131ndan <strong>abstract <\/strong>olu\u015fturulan methodlar alt s\u0131n\u0131flar taraf\u0131ndan kendi i&ccedil;lerinde farkl\u0131 &ouml;zelliklerde olu\u015fturulmak i&ccedil;in tasarlanm\u0131\u015ft\u0131r.<\/p>","date":"1431514363","tags":"java,javase,java abstract , abstract , soyut veri , \u00f6zet s\u0131n\u0131f , soyut s\u0131n\u0131f , abstract s\u0131n\u0131f nedir , abstract nedir , c# abstract , java abstract ne i\u015fe yarar","link":"java---kalitim-sharp5-abstract-siniflari-kullanmak-ozet-soyut"},{"id":"123","title":"Java - Arabirim ( Interface )","content_half":"Bu yaz\u0131mda arabimlerden (interface) bahsedece\u011fim . interface anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak , bir s\u0131n\u0131f\u0131n arabirimini onun uygulamas\u0131ndan tamamen &ouml;zetleyebilirsiniz.Yani , interface kullanarak bir s\u0131n\u0131f\u0131n nas\u0131l yapaca\u011f\u0131n\u0131 de\u011fil , ne yapmas\u0131 gerekti\u011fini belirtebilirsiniz. Arabirimler s&ouml;z dizimi olarak s\u0131n\u0131flarla benzerlik g&ouml;sterirler.Fakat arabirimlerin &ouml;rnek de\u011fi\u015fkenleri yoktur ve methodlar\u0131 g&ouml;vdesiz olarak deklare edilir.- Ara...\\n","content_full":"<p>Bu yaz\u0131mda <strong>arabimlerden (interface)<\/strong> bahsedece\u011fim . <em><strong>interface<\/strong><\/em> anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml; kullanarak , bir s\u0131n\u0131f\u0131n arabirimini onun uygulamas\u0131ndan tamamen &ouml;zetleyebilirsiniz.Yani , interface kullanarak bir s\u0131n\u0131f\u0131n nas\u0131l yapaca\u011f\u0131n\u0131 de\u011fil , ne yapmas\u0131 gerekti\u011fini belirtebilirsiniz. Arabirimler s&ouml;z dizimi olarak s\u0131n\u0131flarla benzerlik g&ouml;sterirler.Fakat arabirimlerin &ouml;rnek de\u011fi\u015fkenleri yoktur ve methodlar\u0131 g&ouml;vdesiz olarak deklare edilir.<br \/><br \/>- Arabirim bir kez tan\u0131mland\u0131\u011f\u0131nda bir &ccedil;ok s\u0131n\u0131f taraf\u0131ndan implement edilebilir.Ayr\u0131ca bir s\u0131n\u0131f da bir &ccedil;ok arabirime sahip olabilir.<br \/>- &Ouml;zet s\u0131n\u0131flara benzemelerine ra\u011fmen arabirimlerin bir kabiliyeti daha vard\u0131r:Bir s\u0131n\u0131f birden fazla arabirim uyguyabilir.Buna kar\u015f\u0131l\u0131k bir s\u0131n\u0131f sadece tek bir &uuml;st s\u0131n\u0131ftan ( &ouml;zet veya ba\u015fka) t&uuml;retilebilir.<br \/>- Bir arabirim implement etmek i&ccedil;in s\u0131n\u0131f\u0131n arabirim taraf\u0131ndan tan\u0131mlanan methodlar\u0131n t&uuml;m&uuml;n&uuml; uygulamas\u0131 zorunludur.<br \/>- Implement edilen arabirimin methodlar\u0131 uygland\u0131\u011f\u0131nda s\u0131n\u0131f kendi methodlar\u0131n\u0131 da ekleyebilir.<br \/>- Implement edildi\u011fi s\u0131n\u0131f\u0131n arabirim ile ayn\u0131 ismi ta\u015f\u0131yan methodun ayn\u0131 tip imzas\u0131 ve <em><strong>public <\/strong><\/em>eri\u015fim belirtecine sahip olmas\u0131 gereklidir.<\/p><p><br \/>Basit bir &ouml;rnek ile inceleyelim.<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">interface Callback { void callBack(int param);}class Client implements Callback { @Override public void callBack(int param) {  System.out.println(&quot;callBack methodu &ccedil;a\u011fr\u0131ld\u0131 &quot; + param); } void nonIFaceMeth() {  System.out    .println(&quot;Bir s\u0131n\u0131fa implement edilen arabirimden (interface) &quot;      + &quot;&uuml;yelerinden ba\u015fka kendi &uuml;yelerini tan\u0131mlayabilir. &quot;); }}class TestInterface { public static void main(String args[]) {  Callback c = new Client();  c.callBack(5); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : callBack methodu &ccedil;a\u011fr\u0131ld\u0131 5<\/sh><p>Burada <strong>c<\/strong> , <strong>Callback <\/strong>arabirim tipinde deklare edilmi\u015ftir.Ancak ona <strong>Client&#39;in <\/strong>bir &ouml;rne\u011fi atanm\u0131\u015ft\u0131r<strong>.c,<\/strong> <strong>callBack()<\/strong>&nbsp;methoduna eri\u015fmek i&ccedil;in kullan\u0131labilmesine ra\u011fmen <strong>Client <\/strong>s\u0131n\u0131f\u0131n\u0131n di\u011fer &uuml;yelerine eri\u015femez.Bir arabirim referans de\u011fi\u015fkeni sadece kendi interface deklerasyonunda deklare edilen methodun bilgisine sahiptir.Bu sebepten &ouml;t&uuml;r&uuml; c , <strong>nonIFaceMeth<\/strong>() methoduna eri\u015femez.&Ccedil;&uuml;nk&uuml;<strong> c<\/strong> , <strong>Callback <\/strong>taraf\u0131ndan de\u011fil , <strong>Client <\/strong>taraf\u0131ndan tan\u0131mlanm\u0131\u015ft\u0131r. Ba\u015fka bir &ouml;rnek ile a&ccedil;\u0131klayay\u0131m.<\/p><sh class=\\\"brush: java\\\">interface Callback { void callBack(int param);}class Client implements Callback { @Override public void callBack(int param) {  System.out.println(&quot;Client \\\\n callBack methodu &ccedil;a\u011fr\u0131ld\u0131 &quot; + param); } void nonIFaceMeth() {  System.out    .println(&quot;Bir s\u0131n\u0131fa implement edilen arabirimden (interface) &quot;      + &quot;&uuml;yelerinden ba\u015fka kendi &uuml;yelerini tan\u0131mlayabilir. &quot;); }}class AnotherClient implements Callback { @Override public void callBack(int param) {  System.out.println(&quot;AnotherClient&quot;);  System.out.println(&quot; &quot; + param + &quot;&#39;in Karesi &quot; + (param * param)); }}class TestInterface2 { public static void main(String args[]) {  Callback c = new Client();  final AnotherClient ac = new AnotherClient();  c.callBack(5);  c = ac;  c.callBack(5); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Client  callBack methodu &ccedil;a\u011fr\u0131ld\u0131 5AnotherClient 5&#39;in Karesi 25<\/sh><p><strong>Yuvalanm\u0131\u015f Arabimler<\/strong> Bir arabirim bir s\u0131n\u0131f\u0131n yada ba\u015fka bir arabirim &uuml;yesi olarak deklare edilebilir.B&ouml;yle bir arabirime &uuml;ye <strong>arabirim <\/strong>veya <strong>yuvalanm\u0131\u015f arabirim <\/strong>denir. Bir &ouml;rnek yapal\u0131m.<\/p><sh class=\\\"brush: java\\\">class A { public interface NestedIF {  boolean isNotNegative(int x); }}class B implements A.NestedIF { @Override public boolean isNotNegative(int x) {  if (x &lt; 0) {   return false;  } else {   return true;  } }}class NestedIFDemo { public static void main(String args[]) {   A.NestedIF nif = new B();  if (nif.isNotNegative(10)) {   System.out.println(&quot;10 : Bu bir pozitif say\u0131d\u0131r.&quot;);  }  if (nif.isNotNegative(-10)) {   System.out.println(&quot;-10 : Bu bir pozitif say\u0131d\u0131r.&quot;);  } else {   System.out.println(&quot;-10 : Bu bir negatif say\u0131d\u0131r.&quot;);  } }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : 10 : Bu bir pozitif say\u0131d\u0131r.-10 : Bu bir negatif say\u0131d\u0131r.<\/sh><p><strong>A&#39;n\u0131n NestedIF<\/strong> adl\u0131 bir &uuml;ye arabirim tan\u0131mlad\u0131\u011f\u0131na ve bu arabirimin public olarak deklare edildi\u011fine dikkat edelim.<strong>B<\/strong> s\u0131n\u0131f\u0131 implements <strong>A.NestedIF<\/strong> \u015feklinde belirtilerek yuvalanm\u0131\u015f arabirimi uygular.nif adl\u0131 <strong>A.NestedIF<\/strong> referans\u0131 olu\u015fturulur ve <strong>B <\/strong>nesnesine referans atan\u0131r.<strong>B<\/strong> s\u0131n\u0131f\u0131<strong> A.NestedIF<\/strong> arabirimini uyguland\u0131\u011f\u0131ndan bu kullan\u0131m ge&ccedil;erlidir.<\/p>","date":"1431514363","tags":"java,javase, interface , interface , interface nedir , java arabirim nedir , java interface nas\u0131l kullan\u0131l\u0131r , java arabirim kullanmak , java interface nedir , c# interface , c# interface nedir","link":"java---arabirim-interface"},{"id":"124","title":"Java - Interface & Abstract \u00d6rne\u011fi","content_half":"&Ouml;nceki yaz\u0131lar\u0131mda Interface ( Arabirim )&nbsp;ve Abstract ( &Ouml;zet \/ Soyut)&nbsp;konular\u0131ndan&nbsp;bahsetmi\u015ftim.\u015eimdi daha geni\u015f ve anla\u015f\u0131labilir bir &ouml;rnek ile bunu ele alal\u0131m.interface Living { String talk(); String myNameIs();}abstract class People implements Living { private final String name; protected People(String name) {  this.name = name; } @Override public String myNameIs() {  return name; }}class Ali extends People {\\r...\\n","content_full":"<p>&Ouml;nceki yaz\u0131lar\u0131mda <strong><a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-arabirim-interface.html\\\">Interface ( Arabirim )&nbsp;<\/a><\/strong>ve<a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-kaltm-5-abstract-snflar-kullanmak.html\\\"><strong> Abstract ( &Ouml;zet \/ Soyut)<\/strong><\/a><strong>&nbsp;<\/strong>konular\u0131ndan&nbsp;bahsetmi\u015ftim.<br \/>\u015eimdi daha geni\u015f ve anla\u015f\u0131labilir bir &ouml;rnek ile bunu ele alal\u0131m.<\/p><sh class=\\\"brush: java\\\">interface Living { String talk(); String myNameIs();}abstract class People implements Living { private final String name; protected People(String name) {  this.name = name; } @Override public String myNameIs() {  return name; }}class Ali extends People { public Ali(String name) {  super(name); } @Override public String talk() {  return &quot; Merhaba , Benim Ad\u0131m&quot;; }}class Can extends People { public Can(String name) {  super(name); } @Override public String talk() {  return &quot; Merhaba , Ben &quot;; }}class PeopleDemo { public static void main(String args[]) {  final Living[] peoples = { new Ali(&quot; Ali &quot;), new Can(&quot; Can &quot;) };  for (final Living people : peoples) {   System.out.println(people.talk() + people.myNameIs());  } }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :  Merhaba , Benim Ad\u0131m Ali  Merhaba , Ben  Can <\/sh><p>Bu programda <strong>Living (Canl\u0131lar)<\/strong> ad\u0131nda bir <strong>interface <\/strong>olu\u015fturdum . Ard\u0131ndan bir<strong> abstract<\/strong> s\u0131n\u0131fa bunu <strong>implement <\/strong>ettim. Daha sonra olu\u015fturdu\u011fum bu <strong>abstract People (\u0130nsan)<\/strong> s\u0131n\u0131f\u0131ndan 2 adet <strong>alt s\u0131n\u0131f (subclass)<\/strong> olu\u015fturdum.Olu\u015fturdu\u011fum 2 alt class&#39;\u0131nda <strong>talk()<\/strong> methodu birbirinden ba\u011f\u0131ms\u0131z bir sonu&ccedil; d&ouml;nderiyor.Fakat name de\u011fi\u015fkeni ise hep ayn\u0131 constructoru ve sadece abstract class i&ccedil;erisindeki <strong>myNameIs()<\/strong> methoduna g&ouml;nderme yap\u0131yor.Bu sayede <strong>myNameIs()<\/strong> methodunu tekrar tekrar yazmaktansa sadece 1 kere yaz\u0131p b&uuml;t&uuml;n alt classlarda &ccedil;a\u011f\u0131rm\u0131\u015f olduk.Bu yap\u0131 ayn\u0131 zamanda &Ccedil;ok Bi&ccedil;imlilik &ouml;zelli\u011fini i\u015faret eder.Temel s\u0131n\u0131f ( People )&#39;dan t&uuml;retilmi\u015f olan alt s\u0131n\u0131flarda payla\u015f\u0131lan ayn\u0131 methodun bu s\u0131n\u0131flarda farkl\u0131 \u015fekillerde uyarlanabilmesidir.<\/p>","date":"1431514363","tags":"java,javase,interface ve abstract , interface and abstract , java interface abstract class, java interface and abstract calss , java interface abstract sample , java interface abstract \u00f6rne\u011fi","link":"java---interface-abstract-ornegi"},{"id":"125","title":"Java - Interface & Abstract \u00d6rne\u011fi #2","content_half":"Bir &ouml;nceki &ouml;rne\u011fe buradan ula\u015fabilirsiniz.Bu &ouml;rne\u011fe GitHub &uuml;zerinden eri\u015febilirsiniz.GitHub - InterfaceAbstractExampleTwo&nbsp;&nbsp;\/** * @Author : Ali Can Ku\u015ftemur * @Date : 14 May 2015 * @File_Name : Animal.java * @Blog : http:\/\/alicankustemur.github.io *\/interface BasicAnimals { String talk(); void sit(); void run(); void features();}abstract class Animal implements BasicAnimals { private String name; pr...\\n","content_full":"<p>Bir &ouml;nceki &ouml;rne\u011fe <a href=\\\"http:\/\/kustemura.blogspot.com\/2015\/05\/java-interface-abstract-ornegi.html\\\">buradan <\/a>ula\u015fabilirsiniz.<br \/>Bu &ouml;rne\u011fe GitHub &uuml;zerinden eri\u015febilirsiniz.<br \/><a href=\\\"https:\/\/github.com\/alicankustemur\/InterfaceAbstractExampleTwo\\\">GitHub - InterfaceAbstractExampleTwo<\/a><\/p><p><a href=\\\"https:\/\/i0.wp.com\/farm8.staticflickr.com\/7220\/7254909368_550561e4d5.jpg\\\"><img src=\\\"https:\/\/i0.wp.com\/farm8.staticflickr.com\/7220\/7254909368_550561e4d5.jpg\\\" style=\\\"height:174px; width:320px\\\" \/><\/a><\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-QvzM_pKbO6k\/VVvoLreaD_I\/AAAAAAAABpI\/PomybfUHsCw\/s1600\/Java%2B-%2BInterface%2B%2526%2BAbstract%2B%25C3%2596rne%25C4%259Fi%2B2%2BUML.jpg\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-QvzM_pKbO6k\/VVvoLreaD_I\/AAAAAAAABpI\/PomybfUHsCw\/s1600\/Java%2B-%2BInterface%2B%2526%2BAbstract%2B%25C3%2596rne%25C4%259Fi%2B2%2BUML.jpg\\\" \/><\/a><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">\/** * @Author : Ali Can Ku\u015ftemur * @Date : 14 May 2015 * @File_Name : Animal.java * @Blog : http:\/\/alicankustemur.github.io *\/interface BasicAnimals { String talk(); void sit(); void run(); void features();}abstract class Animal implements BasicAnimals { private String name; private double height; private double weight; private String color; private String eyeColor; @Override abstract public String talk(); protected Animal(final String name, final double height,   final double weight, final String color, final String eyeColor) {  setName(name);  setHeight(height);  setWeight(weight);  setColor(eyeColor);  setEyeColor(eyeColor); } protected Animal() {  setName(&quot;\u0130simsiz bir hayvan&quot;);  setHeight(-1);  setWeight(-1);  setColor(&quot;Siyah&quot;);  setEyeColor(&quot;Siyah&quot;); } @Override public void sit() {  System.out.println(&quot; Oturuyorum !&quot;); } @Override public void run() {  System.out.println(&quot; Ko\u015fuyorum !&quot;); } @Override public void features() {  System.out.println(&quot; Ad\u0131 :&quot; + getName());  System.out.println(&quot; Boyu :&quot; + getHeight() + &quot; cm&quot;);  System.out.println(&quot; A\u011f\u0131rl\u0131\u011f\u0131 :&quot; + getWeight() + &quot; kg&quot;);  System.out.println(&quot; Rengi :&quot; + getColor());  System.out.println(&quot; G&ouml;z Rengi :&quot; + getEyeColor()); } public String getName() {  return name; } public void setName(final String name) {  this.name = name; } public double getHeight() {  return height; } public void setHeight(final double height) {  this.height = height; } public double getWeight() {  return weight; } public void setWeight(final double weight) {  this.weight = weight; } public String getColor() {  return color; } public void setColor(final String color) {  this.color = color; } public String getEyeColor() {  return eyeColor; } public void setEyeColor(final String eyeColor) {  this.eyeColor = eyeColor; }}class Dog extends Animal { Dog(final String name, final double height, final double weight,   final String color, final String eyeColor) {  super(name, height, weight, color, eyeColor); } Dog() {  super(); } @Override public String talk() {  return &quot; Hav Hav!&quot;; }}class Cat extends Animal { Cat(final String name, final double height, final double weight,   final String color, final String eyeColor) {  super(name, height, weight, color, eyeColor); } Cat() {  super(); } @Override public String talk() {  return &quot; Miyav Miyav&quot;; }}class AnimalDemo { public static void main(final String args[]) {  final BasicAnimals myDog = new Dog(&quot;Karaba\u015f&quot;, 45, 25, &quot;Beyaz&quot;,    &quot;Kahverengi&quot;);  myDog.features();  myDog.sit();  myDog.run();  System.out.println(myDog.talk());  System.out.println();  final BasicAnimals myCat = new Cat(&quot;Minno\u015f&quot;, 20, 3, &quot; Gri &quot;, &quot; Ye\u015fil&quot;);  myCat.features();  myCat.sit();  myCat.run();  System.out.println(myCat.talk());  System.out.println();  final BasicAnimals dog = new Dog();  dog.features();  dog.sit();  dog.run();  System.out.println(dog.talk()); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :  Ad\u0131 :Karaba\u015f Boyu :45.0 cm A\u011f\u0131rl\u0131\u011f\u0131 :25.0 kg Rengi :Beyaz G&ouml;z Rengi :Kahverengi Oturuyorum ! Ko\u015fuyorum ! Hav Hav! Ad\u0131 :Minno\u015f Boyu :20.0 cm A\u011f\u0131rl\u0131\u011f\u0131 :3.0 kg Rengi : Gri  G&ouml;z Rengi : Ye\u015fil Oturuyorum ! Ko\u015fuyorum ! Miyav Miyav Ad\u0131 :\u0130simsiz bir hayvan Boyu :-1.0 cm A\u011f\u0131rl\u0131\u011f\u0131 :-1.0 kg Rengi :Siyah G&ouml;z Rengi :Siyah Oturuyorum ! Ko\u015fuyorum ! Hav Hav!<\/sh><p><strong>BasicAnimals interface&#39;i <\/strong>ile bir <strong>Hayvan <\/strong>&ouml;rne\u011fi &uuml;zerinden &ccedil;al\u0131\u015f\u0131yoruz.Temel hayvanlar\u0131n , temel &ouml;zellikleri asla de\u011fi\u015fmeyece\u011finden bunlar\u0131n birka&ccedil;\u0131n\u0131 <strong>BasicAnimals&#39;da<\/strong>&nbsp;topluyoruz.Ard\u0131ndan olu\u015fturdu\u011fumuz t&uuml;m hayvanlar bu &ouml;zellikleri zaten i&ccedil;ermek zorunda.<br \/><strong>Animals <\/strong>s\u0131n\u0131f\u0131nda tan\u0131mlad\u0131\u011f\u0131m\u0131z de\u011fi\u015fkenlerin <strong>private <\/strong>olarak tan\u0131mland\u0131\u011f\u0131na dikkat edin.Bu de\u011fi\u015fkenlere sadece <strong>get <\/strong>ve <strong>set <\/strong>methodlar\u0131 ile eri\u015filebilir.Buradaki kavram&nbsp;<strong>Object-Oriented Programming<\/strong>&#39;te <strong>Encapsulation (Kaps&uuml;lleme) <\/strong>olarak adland\u0131r\u0131l\u0131r.<br \/><br \/><strong>BasicAnimals interface&#39;i <\/strong>sayesinde alt s\u0131n\u0131flara implement edece\u011fimiz methodlar\u0131 olu\u015fturduk.<strong>Animals <\/strong>s\u0131n\u0131f\u0131na <strong>BasicAnimals <\/strong>interface&#39;ini implement ediyoruz.Olu\u015fturdu\u011fumuz <strong>Animals <\/strong>soyut s\u0131n\u0131f\u0131 ,<strong> BasicAnimals&#39;\u0131n<\/strong> t&uuml;m &ouml;zelliklerini ayn\u0131 \u015fekilde uygulamak zorundad\u0131r.<strong>sit() , run() ve features()<\/strong> methodlar\u0131 t&uuml;m hayvanlar i&ccedil;in ayn\u0131 \u015feyi ifade etti\u011finden <strong>Animals <\/strong>s\u0131n\u0131f\u0131 i&ccedil;erisinde methodlar\u0131m\u0131z\u0131 olu\u015fturup olu\u015fturdu\u011fumuz nesneler &uuml;zerinden bunlara eri\u015febiliriz.Ancak her hayvan\u0131n konu\u015fmas\u0131 kendine &ouml;zg&uuml; bir yap\u0131ya sahip oldu\u011fu i&ccedil;in di\u011fer hayvanlardan ba\u011f\u0131ms\u0131z olmal\u0131d\u0131r.Bu y&uuml;zden&nbsp;<strong>talk()<\/strong>&nbsp;methodunu soyut olarak tan\u0131ml\u0131yoruz.Her s\u0131n\u0131f kendi i&ccedil;erisinde&nbsp;<strong>talk()&nbsp;<\/strong>methodunu farkl\u0131 bi&ccedil;imlerde i\u015fleyecektir.Animals s\u0131n\u0131f\u0131ndan geni\u015fletti\u011fimiz&nbsp;<strong>Dog&nbsp;<\/strong>ve&nbsp;<strong>Cat&nbsp;<\/strong>s\u0131n\u0131flar\u0131nda g&ouml;r&uuml;ld&uuml;\u011f&uuml; gibi t&uuml;m&nbsp;<strong>sit()<\/strong>&nbsp;,<strong>&nbsp;run()&nbsp;<\/strong>ve<strong>&nbsp;features()&nbsp;<\/strong>methodlar\u0131 ayn\u0131 yere &ccedil;a\u011fr\u0131 yaparken ,&nbsp;<strong>talk()<\/strong>&nbsp;methodu birbirinden ba\u011f\u0131ms\u0131z bir \u015fekilde &ccedil;a\u011fr\u0131l\u0131yor.Bu kavram&nbsp;<strong>Object-Oriented Programming<\/strong>&#39;te <strong>Polimorfizm(&Ccedil;ok Bi&ccedil;imlilik)<\/strong> olarak adland\u0131r\u0131l\u0131r.<\/p><p>&nbsp;<\/p>","date":"1431600763","tags":"java,javase, interface abstract , java abstract , java interface ,c# interface , c# abstract , java interface \u00f6rne\u011fi , java interface sample , java abstract \u00f6rne\u011fi , java abstract sample , java interface ve abstract","link":"java---interface-abstract-ornegi-sharp2"},{"id":"127","title":"Java - Interface (Arabirim) Geni\u015fletmek","content_half":"Bir arabirim, extends anahtar s&ouml;zc&uuml;\u011f&uuml; ile ayn\u0131 s\u0131n\u0131flardaki gibi kal\u0131t\u0131m ald\u0131\u011f\u0131 arabirimi geni\u015fletebilir.Kal\u0131t\u0131m zinciri tamamlanan arabirimin tan\u0131mlanan t&uuml;m methodlar\u0131n\u0131 uygulad\u0131\u011f\u0131 s\u0131n\u0131f sa\u011flamak zorundad\u0131r. Bunu bir &ouml;rnek ile ele alal\u0131m.interface A { void method1(); void method2();}interface B extends A { void method3();}class TestInterfaceInheritance implements B { @Override public void method1() {  System.out.pri...\\n","content_full":"<p>Bir arabirim, <strong>extends <\/strong>anahtar s&ouml;zc&uuml;\u011f&uuml; ile ayn\u0131 s\u0131n\u0131flardaki gibi kal\u0131t\u0131m ald\u0131\u011f\u0131 arabirimi geni\u015fletebilir.Kal\u0131t\u0131m zinciri tamamlanan arabirimin tan\u0131mlanan t&uuml;m methodlar\u0131n\u0131 uygulad\u0131\u011f\u0131 s\u0131n\u0131f sa\u011flamak zorundad\u0131r. Bunu bir &ouml;rnek ile ele alal\u0131m.<\/p><sh class=\\\"brush: java\\\">interface A { void method1(); void method2();}interface B extends A { void method3();}class TestInterfaceInheritance implements B { @Override public void method1() {  System.out.println(&quot;method1 &ccedil;a\u011fr\u0131ld\u0131!&quot;); } @Override public void method2() {  System.out.println(&quot;method2 &ccedil;a\u011fr\u0131ld\u0131!&quot;); } @Override public void method3() {  System.out.println(&quot;method3 &ccedil;a\u011fr\u0131ld\u0131!&quot;); }}class MainClass { public static void main(String args[]) {  final TestInterfaceInheritance t = new TestInterfaceInheritance();  t.method1();  t.method2();  t.method3(); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :method1 &ccedil;a\u011fr\u0131ld\u0131!method2 &ccedil;a\u011fr\u0131ld\u0131!method3 &ccedil;a\u011fr\u0131ld\u0131!<\/sh><p>Burada <strong>B <\/strong>arabirimi , <strong>A <\/strong>arabiriminin b&uuml;t&uuml;n methodlar\u0131n\u0131 i&ccedil;erir , <strong>method3()<\/strong>&#39;&uuml; ekler<strong>.B<\/strong> arabirimini uygulayan <strong>TestInterfaceInheritance <\/strong>s\u0131n\u0131f\u0131 ise <strong>A ve B <\/strong>arabirimlerinin b&uuml;t&uuml;n methodlar\u0131n\u0131 uygulamak zorundad\u0131r.<\/p>","date":"1431773563","tags":"java,javase, interface geni\u015fletmek , interface geni\u015fletmek , extends interface , interface extends , java interface , java extends , c# interface","link":"java---interface-arabirim-genisletmek"},{"id":"128","title":"Java - \u00c7ok Kanall\u0131 Programlama (Multi-Threaded Programming) #1","content_half":"Merhaba bu yaz\u0131m &Ccedil;ok Kanall\u0131 Programlama konusunu i&ccedil;eriyor.Vermi\u015f oldu\u011fum link&#39;te &ccedil;ok kanall\u0131 programlaman\u0131n temel i\u015flemlerini , Runnable Interface&#39;ini ve Deprecated olmu\u015f methodlar\u0131n ayr\u0131nt\u0131l\u0131 ve anla\u015f\u0131l\u0131r bir bi&ccedil;imde a&ccedil;\u0131klamas\u0131 yer al\u0131yor.class CurrentThreadDemo { public static void main(final String args[]) {  final Thread thread = Thread.currentThread();  System.out.println(&quot;Varsay\u0131lan ismi :&quot; + thread); ...\\n","content_full":"<p>Merhaba bu yaz\u0131m <a href=\\\"http:\/\/www.godoro.com\/Divisions\/Ehil\/Mahzen\/Java\/TheJavaBook\/txt\/html\/document_MultiThreadedProgramming.html\\\">&Ccedil;ok Kanall\u0131 Programlama<\/a> konusunu i&ccedil;eriyor.Vermi\u015f oldu\u011fum link&#39;te &ccedil;ok kanall\u0131 programlaman\u0131n temel i\u015flemlerini , <strong>Runnable Interface&#39;ini <\/strong>ve <strong>Deprecated<\/strong> olmu\u015f methodlar\u0131n ayr\u0131nt\u0131l\u0131 ve anla\u015f\u0131l\u0131r bir bi&ccedil;imde a&ccedil;\u0131klamas\u0131 yer al\u0131yor.<\/p><sh class=\\\"brush: java\\\">class CurrentThreadDemo { public static void main(final String args[]) {  final Thread thread = Thread.currentThread();  System.out.println(&quot;Varsay\u0131lan ismi :&quot; + thread);  thread.setName(&quot;myThread&quot;);  System.out.println(&quot;Ad\u0131 De\u011fi\u015fti :&quot; + thread);  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(i);    Thread.sleep(1000);   }  } catch (final InterruptedException e) {   e.printStackTrace();  } }}<\/sh><p>Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-LpolafpVD5c\/VV57ql8Ep3I\/AAAAAAAABqM\/AZs8WH1uNcY\/s1600\/thread1.gif\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-LpolafpVD5c\/VV57ql8Ep3I\/AAAAAAAABqM\/AZs8WH1uNcY\/s1600\/thread1.gif\\\" \/><\/a><\/p><p>&nbsp;<\/p><p>Burada <strong>Thread <\/strong>s\u0131n\u0131f\u0131ndan referans etti\u011fimiz <strong>thread <\/strong>&ouml;rnek de\u011fi\u015fkeni <strong>Thread <\/strong>s\u0131n\u0131f\u0131n\u0131n<strong> currentThread() <\/strong>methoduna g&ouml;ndermede bulunur.Olu\u015fan &ccedil;\u0131kt\u0131lar\u0131n s\u0131ralamas\u0131 ,&nbsp;<\/p><p><em>1 -Ana Kanal\u0131n Ad\u0131 &nbsp;, 2- &nbsp;&Ouml;nceli\u011fi , 3-Grubunun Ad\u0131. <\/em><strong>( Thread[main,5,main])<\/strong><\/p><p>Program\u0131n &ccedil;\u0131kt\u0131s\u0131ndan da anla\u015f\u0131ld\u0131\u011f\u0131 gibi <strong>try <\/strong>blo\u011fu i&ccedil;erisinde ki <strong>for <\/strong>d&ouml;ng&uuml;s&uuml;nde &ccedil;a\u011fr\u0131lan i de\u011fi\u015fkeni 1000 milisaniye yani 1 saniye bekleyerek be\u015ften geriye do\u011fru ekrana yazd\u0131r\u0131yor.Bu d&ouml;ng&uuml; tekrar\u0131ndaki duraklama <strong>sleep() methodu<\/strong> taraf\u0131ndan sa\u011flan\u0131r.<strong>sleep() <\/strong>methodu bir <strong>InterruptedException <\/strong>f\u0131rlatabilir.Bunu catch constructorunda yakal\u0131yoruz.<\/p><p><strong>setName()&nbsp;<\/strong>methodu varsay\u0131lan kanal ad\u0131n\u0131 de\u011fi\u015ftirmek i&ccedil;in kullan\u0131l\u0131r.<\/p><p><strong>getName()<\/strong> methodu ise kanal ad\u0131n\u0131 elde etmek i&ccedil;in kullan\u0131l\u0131r.<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">package com.blogger_project;class CurrentThreadDemo { public static void main(final String args[]) {  final Thread thread = Thread.currentThread();  thread.setName(&quot;myThread&quot;);  System.out.println(thread.getName()); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : myThread<\/sh>","date":"1432205563","tags":"java,javase, \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp1"},{"id":"129","title":"Java - \u00c7ok Kanall\u0131 Programlama (Multi-Threaded Programming) #2","content_half":"&Ouml;nceki &ouml;rnek &uuml;zerinden devam ediyorum.Buradan ona ula\u015fabilirsiniz.class NewThread implements Runnable { Thread thread; NewThread() {  thread = new Thread(this, &quot;Demo Thread&quot;);  System.out.println(&quot;&Ccedil;ocuk Thread&quot; + thread);  thread.start(); } @Override public void run() {  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(&quot;&Ccedil;ocuk Thread &quot; + i);    Thread.sleep(500);   }  } catch (final I...\\n","content_full":"<p>&Ouml;nceki &ouml;rnek &uuml;zerinden devam ediyorum.<a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-cok-kanall-programlama-multi.html\\\">Buradan ona ula\u015fabilirsiniz.<\/a><\/p><sh class=\\\"brush: java\\\">class NewThread implements Runnable { Thread thread; NewThread() {  thread = new Thread(this, &quot;Demo Thread&quot;);  System.out.println(&quot;&Ccedil;ocuk Thread&quot; + thread);  thread.start(); } @Override public void run() {  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(&quot;&Ccedil;ocuk Thread &quot; + i);    Thread.sleep(500);   }  } catch (final InterruptedException e) {   e.printStackTrace();  }  System.out.println(&quot;&Ccedil;ocuk Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;); }}class ThreadDemo { public static void main(final String args[]) {  new NewThread();  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(&quot;Ana Thread &quot; + i);    Thread.sleep(1000);   }  } catch (final InterruptedException e) {   e.printStackTrace();     }  System.out.println(&quot;Ana Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;); }}<\/sh><p>Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-W9EmKTjw1UA\/VV56uxnrJcI\/AAAAAAAABqE\/bUFpWo523rM\/s1600\/thread2.gif\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-W9EmKTjw1UA\/VV56uxnrJcI\/AAAAAAAABqE\/bUFpWo523rM\/s320\/thread2.gif\\\" style=\\\"height:193px; width:320px\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><strong>run() <\/strong>methodunu olu\u015fturabilmemiz i&ccedil;in Runnable arabirimini s\u0131n\u0131f\u0131m\u0131za implement ediyoruz.<\/p><sh class=\\\"brush: java\\\">thread = new Thread(this, &quot;Demo Thread&quot;); <\/sh><p>Burada <strong>this <\/strong>arg&uuml;man\u0131 nesne thread nesnesi &uuml;zerindeki <strong>run()<\/strong> methoduna g&ouml;ndermede bulunur.<strong>start()<\/strong> methodu ise <strong>run() <\/strong>methodunu ba\u015flat\u0131r.Bu <strong>&Ccedil;ocuk Thread&#39;i<\/strong>n ba\u015flamas\u0131na neden olur.Ard\u0131ndan main methodundaki <strong>NewThread()<\/strong> <strong>constructoru <\/strong>&ccedil;al\u0131\u015fmaya ba\u015flar ve <strong>main() <\/strong>methoduna geri d&ouml;ner.Burada her iki <strong>for <\/strong>d&ouml;ng&uuml;s&uuml; CPU&#39;yu payla\u015farak &ccedil;al\u0131\u015fmaya devam ederler.( Program\u0131 &ccedil;al\u0131\u015ft\u0131rd\u0131\u011f\u0131n\u0131zda elde edece\u011finiz &ccedil;\u0131kt\u0131 buradaki &ccedil;\u0131kt\u0131 ile ayn\u0131 <strong>olmayabilir<\/strong>, i\u015flemci h\u0131z\u0131na ve g&ouml;rev y&uuml;k&uuml;ne g&ouml;re farkl\u0131l\u0131klar g&ouml;stericektir.) Genellikle &ccedil;al\u0131\u015fmay\u0131 bitiren son kanal <strong>Ana Kanal<\/strong> olmak zorundad\u0131r<strong>.<em>JVM&#39;in baz\u0131 versiyonlar\u0131nda ana kanal &ccedil;ocuk kanaldan &ouml;nce biterse , &nbsp;Java &ccedil;al\u0131\u015fma zaman\u0131 sistemi ask\u0131ya al\u0131nabilir.(suspended).Yukar\u0131daki program her zaman Ana Thread&#39;in &Ccedil;ocuk Thread&#39;den sonra bitmesini garantiler .&Ccedil;&uuml;nk&uuml; &Ccedil;ocuk Thread 500 milisaniye uyurken , Ana Thread 1000 milisaniye uyur ve bu yap\u0131 &Ccedil;ocuk Thread&#39;in Ana Threadden daha h\u0131zl\u0131 bir \u015fekilde sonlanmas\u0131na neden olur.<\/em><\/strong><\/p>","date":"1432205563","tags":"java,javase , \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp2"},{"id":"130","title":"Java - \u00c7ok Kanall\u0131 Programlama  (Multi-Threaded Programming)  #3 Thread S\u0131n\u0131f\u0131n\u0131 Geni\u015fletmek","content_half":"&Ouml;nceki &ouml;rneklere a\u015fa\u011f\u0131daki ba\u011flant\u0131lardan ula\u015fabilirsiniz:Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#2Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#1Bir &ouml;nceki &ouml;rne\u011fi daha iyi bir yoldan yapal\u0131m.&nbsp;class NewThread extends Thread { NewThread() {  super(&quot;Demo Thread&quot;);  System.out.print(&quot;&Ccedil;ocuk Thread&quot;);  System.out.print(&quot;&Ccedil;ocuk Thread&quot; + ...\\n","content_full":"<p>&Ouml;nceki &ouml;rneklere a\u015fa\u011f\u0131daki ba\u011flant\u0131lardan ula\u015fabilirsiniz:<br \/><a href=\\\"http:\/\/goo.gl\/6QChb0\\\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#2<\/a><br \/><a href=\\\"http:\/\/goo.gl\/iVJsyP\\\">Java - &Ccedil;ok Kanall\u0131 Programlama (Multi-Threaded Programming) &nbsp;#1<\/a><br \/><br \/>Bir &ouml;nceki &ouml;rne\u011fi daha iyi bir yoldan yapal\u0131m.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class NewThread extends Thread { NewThread() {  super(&quot;Demo Thread&quot;);  System.out.print(&quot;&Ccedil;ocuk Thread&quot;);  System.out.print(&quot;&Ccedil;ocuk Thread&quot; + this);  start(); } @Override public void run() {  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(&quot;&Ccedil;ocuk Thread&quot; + i);    Thread.sleep(500);   }  } catch (final InterruptedException e) {   e.printStackTrace();  }  System.out.println(&quot;&Ccedil;ocuk Thread&#39;den &ccedil;\u0131k\u0131ld\u0131.&quot;); }}class ExtendThread { public static void main(final String args[]) {  new NewThread();  try {   for (int i = 5; i &gt; 0; i--) {    System.out.println(&quot;Ana Thread&quot; + i);    Thread.sleep(1000);   }  } catch (final InterruptedException e) {   e.printStackTrace();  } }}<\/sh><p>Bir &ouml;nceki program ile bu program\u0131n yapt\u0131\u011f\u0131 i\u015f ayn\u0131d\u0131r.Yeni bir kanal olu\u015fturman\u0131n bir di\u011fer yolu ise Thread s\u0131n\u0131f\u0131n\u0131 geni\u015fleten bir s\u0131n\u0131f olu\u015fturup ve bu s\u0131n\u0131f\u0131n bir &ouml;rne\u011fini olu\u015fturmak.<\/p><sh>super(&quot;Demo Thread&quot;);<\/sh><p><strong>NewThread&#39;in i&ccedil;indeki super()&#39;e yap\u0131lan &ccedil;a\u011fr\u0131 Thread yap\u0131land\u0131r\u0131c\u0131s\u0131n\u0131n a\u015fa\u011f\u0131daki formunu &ccedil;a\u011f\u0131r\u0131r.<\/strong><\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">public Thread(String threadName);<\/sh><p>Buradaki threadName kanal\u0131n ad\u0131n\u0131 belirler.<\/p><p>&nbsp;<\/p>","date":"1432205563","tags":"java,javase,java \u00e7ok kanall\u0131 programlama, thread, runnable, java thread runnable, runnable interface, java runnable, java multithread,","link":"java---cok-kanalli-programlama-multi-threaded-programming-sharp3-thread-sinifini-genisletmek"},{"id":"131","title":"Java - Set ve Get Methodlar\u0131","content_half":"Bu yaz\u0131mdaki &ouml;rnekleri this anahtar s&ouml;zc&uuml;\u011f&uuml;&nbsp;&uuml;zerinden devam etmek istiyorum.&Ouml;nceki programlarda olu\u015fturdu\u011fumuz yap\u0131lar kullan\u0131\u015fl\u0131 olsada tam olarak yeterli de\u011fildir.Hi&ccedil;bir de\u011fi\u015fkene direk eri\u015fim m&uuml;mk&uuml;n olmamal\u0131d\u0131r.Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n en &ouml;nemli &ouml;zelliklerinden olan Encapsulation ( Kaps&uuml;lleme ) kavram\u0131n\u0131 tam olarak uygulamam\u0131z i&ccedil;in de\u011fi\u015fkenlerimizin Set ve Get methodlar\u0131n\u0131 olu\u015f...\\n","content_full":"<p>Bu yaz\u0131mdaki &ouml;rnekleri <a href=\\\"http:\/\/kustemura.blogspot.com\/2015\/05\/this-anahtar-sozcugu.html\\\">this anahtar s&ouml;zc&uuml;\u011f&uuml;<\/a>&nbsp;&uuml;zerinden devam etmek istiyorum.<br \/>&Ouml;nceki programlarda olu\u015fturdu\u011fumuz yap\u0131lar kullan\u0131\u015fl\u0131 olsada tam olarak yeterli de\u011fildir.Hi&ccedil;bir de\u011fi\u015fkene direk eri\u015fim m&uuml;mk&uuml;n olmamal\u0131d\u0131r.<strong>Nesneye Y&ouml;nelimli Programlama&#39;n\u0131n<\/strong> en &ouml;nemli &ouml;zelliklerinden olan <strong>Encapsulation ( Kaps&uuml;lleme ) <\/strong>kavram\u0131n\u0131 tam olarak uygulamam\u0131z i&ccedil;in de\u011fi\u015fkenlerimizin Set ve Get methodlar\u0131n\u0131 olu\u015fturmal\u0131y\u0131z.<br \/>&Ouml;rnek &uuml;zerinden devam edelim.<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Rectangle { double width; double height; double depth; Rectangle(double width, double height, double depth) {  this.width = width;  this.height = height;  this.depth = depth; }}<\/sh><p>Buradaki de\u011fi\u015fkenler default de\u011fer olarak sadece kendi paketleri i&ccedil;erisinde &ccedil;a\u011fr\u0131labilirler , fakat direkt olarak &ccedil;a\u011fr\u0131l\u0131p &uuml;zerinde i\u015flem yap\u0131labilir durumdad\u0131rlar.Bu kullan\u0131m olduk&ccedil;a tehlikeli ve yanl\u0131\u015ft\u0131r.A\u015fa\u011f\u0131daki program\u0131 inceleyelim:<\/p><sh class=\\\"brush: java\\\">class Rectangle { private double width; private double height; private double depth; Rectangle(final double width, final double height, final double depth) {  setWidth(width);  setHeight(height);  setDepth(depth); } Rectangle() {  setWidth(-1);  setHeight(-1);  setDepth(-1); } double volume() {  return width * height * depth; } public double getWidth() {  return width; } public void setWidth(final double width) {  this.width = width; } public double getHeight() {  return height; } public void setHeight(final double height) {  this.height = height; } public double getDepth() {  return depth; } public void setDepth(final double depth) {  this.depth = depth; }}class RectangleDemo { public static void main(final String args[]) {  final Rectangle myRectangle = new Rectangle(5, 12, 6);  System.out.println(&quot;Geni\u015flik :&quot; + myRectangle.getWidth());  System.out.println(&quot;Y&uuml;kseklik :&quot; + myRectangle.getHeight());  System.out.println(&quot;Derinlik :&quot; + myRectangle.getDepth());  System.out.println(&quot;Hacim : &quot; + myRectangle.volume()); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Geni\u015flik :5.0Y&uuml;kseklik :12.0Derinlik :6.0Hacim : 360.0<\/sh><p>Bir &ouml;nceki kullan\u0131mda<\/p><sh class=\\\"brush: java\\\">         this.width = width; this.height = height; this.depth = depth;<\/sh><p>olarak constructor&#39;e uygulayarak de\u011ferlerimizi atam\u0131\u015ft\u0131k.Fakat burada <strong>set&lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>isimli methodlar\u0131m\u0131zda yapt\u0131\u011f\u0131m\u0131z i\u015flemler asl\u0131nda &uuml;stteki &uuml;&ccedil; i\u015flem ile ayn\u0131 i\u015fi yapar. (<strong> set &lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>ve <strong>get &lt; De\u011fi\u015fken Ad\u0131&gt;<\/strong> kullan\u0131m\u0131 programc\u0131l\u0131kta bir standart haline geldi\u011fi i&ccedil;in bu &ouml;rnekte bu \u015fekilde kullan\u0131lmaktad\u0131r.<strong>Eclipse -&gt; Sa\u011f T\u0131k -&gt; Source&nbsp;-&gt; Generate Setters and Getters<\/strong> i\u015flemini uygulayarak <strong>Set <\/strong>ve <strong>Get <\/strong>methodlar\u0131n\u0131 otomatik olu\u015fturabilirsiniz.<strong>Eclipse <\/strong>standart kullan\u0131m\u0131 yapmakla beraber method isimlerini de\u011fi\u015ftirmenize olanak sa\u011flar. )Ayr\u0131ca de\u011fi\u015fkenleri gizler ve d\u0131\u015fardan herhangi bir de\u011fi\u015fime izin vermezler.Burada de\u011fi\u015fken de\u011ferini de\u011fi\u015ftirmek i&ccedil;in sadece de\u011fi\u015fkenin <strong>set <\/strong>methodu kullan\u0131labilir.Bu yap\u0131y\u0131 kullanarak art\u0131k de\u011fi\u015fkenlere direkt bir \u015fekilde eri\u015filemez.Sadece <strong>get&lt; De\u011fi\u015fken Ad\u0131&gt; <\/strong>methodu kullan\u0131larak eri\u015filebilir.<\/p>","date":"1432291963","tags":"java,javase, get set , java set get , java set, java get , get set , set get , java set get methods,java set get methodlar\u0131 , java get set methods , java get set methodlar\u0131","link":"java---set-ve-get-methodlari"},{"id":"132","title":"Java - Enums ( Numaraland\u0131rmalar )","content_half":"Bu &ouml;zellik Java&#39;ya 1.5 s&uuml;r&uuml;m&uuml;yle beraber eklenmi\u015ftir.Enum adland\u0131r\u0131lm\u0131\u015f sabitlerden olu\u015fan bir listedir.&Ouml;rne\u011fin g&uuml;nler gibi.Java&#39;da numaraland\u0131rmalar bir s\u0131n\u0131f tipini tan\u0131mlarlar.Bir &ouml;rnek ile ele alal\u0131m. \/** * @Author    : Ali Can Ku\u015ftemur * @Date      : 22 May 2015 * @File_Name : EnumDemo.java * @Blog      : http:\/\/alicankustemur.github.io *\/public class EnumDemo { public enum Day {  PAZARTESI, SALI,...\\n","content_full":"<p>Bu &ouml;zellik Java&#39;ya 1.5 s&uuml;r&uuml;m&uuml;yle beraber eklenmi\u015ftir.<br \/>Enum adland\u0131r\u0131lm\u0131\u015f sabitlerden olu\u015fan bir listedir.&Ouml;rne\u011fin g&uuml;nler gibi.<br \/>Java&#39;da numaraland\u0131rmalar bir s\u0131n\u0131f tipini tan\u0131mlarlar.<br \/>Bir &ouml;rnek ile ele alal\u0131m.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">\/** * @Author    : Ali Can Ku\u015ftemur * @Date      : 22 May 2015 * @File_Name : EnumDemo.java * @Blog      : http:\/\/alicankustemur.github.io *\/public class EnumDemo { public enum Day {  PAZARTESI, SALI, CARSAMBA, PERSEMBE, CUMA, CUMARTES\u0130, PAZAR } public static void main(final String[] args) {  Day theDay = Day.PAZARTESI;  printToday(theDay);  theDay = Day.PERSEMBE;  printToday(theDay);  theDay = Day.valueOf(&quot;PERSEMBE&quot;);  printToday(theDay);  System.out.println();  for (final Day allDay : Day.values()) {   System.out.println(allDay);  } } public static void printToday(final Day day) {  if (day == Day.PAZARTESI) {   System.out.println(&quot;Pazartesi g&uuml;n&uuml;ne bir \\\\&quot;Merhaba\\\\&quot; de bakal\u0131m. &quot;);  } else {   System.out.println(&quot;Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.&quot;);  } }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Pazartesi g&uuml;n&uuml;ne bir &quot;Merhaba&quot; de bakal\u0131m. Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.PAZARTESISALICARSAMBAPERSEMBECUMACUMARTES\u0130PAZAR<\/sh><p>Burada <strong>PAZARTESI,SALI <\/strong>ve di\u011fer tan\u0131mlay\u0131c\u0131lar , numaraland\u0131rma sabitleri olarak adland\u0131r\u0131l\u0131rlar.Her biri kapal\u0131 olarak <strong>Day&#39;in public,static <\/strong>ve <strong>final <\/strong>birer &uuml;yesi olarak deklare edilmi\u015ftir.Bu sabitlerin tipleri deklare edildikleri tiplerdir yani burada Day tipinde.<strong>Enum&#39;lar bir s\u0131n\u0131f tipi olmalar\u0131na ra\u011fmen new anahtar s&ouml;zc&uuml;\u011f&uuml; ile bir enum &ouml;rne\u011fi olu\u015fturulamaz<\/strong>;ama bir numaraland\u0131rma de\u011fi\u015fkenini ilkel de\u011fi\u015fken tiplerinde oldu\u011fu gibi ayn\u0131 \u015fekilde deklare edebilirsiniz. &Ouml;rne\u011fimizde <strong>theDay <\/strong>ad\u0131nda bir <strong>Day <\/strong>&ouml;rne\u011fi olu\u015fturduk ve bu &ouml;rne\u011fe <strong>PAZARTESI <\/strong>sabitini atad\u0131k.)enumlar if veya switch yap\u0131lar\u0131nda kullan\u0131labilirler.)Ard\u0131ndan <strong>printToday()<\/strong> methoduna arg&uuml;man olarak ge&ccedil;ti\u011fimiz <strong>theDay <\/strong>de\u011fi\u015fkeni ile d&ouml;nen de\u011fere g&ouml;re yazd\u0131rma i\u015flemlerimizi yap\u0131yoruz. <strong>valueOf() <\/strong>methoduna aktar\u0131lan karakter katar\u0131na kar\u015f\u0131l\u0131k gelen sabiti d&ouml;nd&uuml;r&uuml;r. &quot;Bug&uuml;n \u015fansl\u0131 g&uuml;n&uuml;ndesin.&quot; &ccedil;\u0131kt\u0131s\u0131n\u0131n iki adet oldu\u011funa dikkat edin.Bunun sebebi <strong>valueOf()<\/strong> methoduna arg&uuml;man olarak yazd\u0131\u011f\u0131m\u0131z &quot;<strong>PERSEMBE<\/strong>&quot; karakter katar\u0131n\u0131n <strong>printToday()<\/strong> methodunda else blo\u011funa d&uuml;\u015fmesidir.<strong> values() <\/strong>methodu &ccedil;a\u011fr\u0131ld\u0131 <strong>enum <\/strong>tipinde bir diziyi d&ouml;nd&uuml;r&uuml;r.Burada for-each i&ccedil;erisindeki <strong>allDay<\/strong> de\u011fi\u015fkenine <strong>Day <\/strong>enum&#39;unun sabitleri birer birer aktar\u0131l\u0131r ve ekrana yazd\u0131r\u0131l\u0131r.<br \/><br \/><strong>Java Numaraland\u0131rmalar\u0131 S\u0131n\u0131f Tipleridir<\/strong><br \/>enum&#39;larda new kullanarak bir enum &ouml;rne\u011fi olu\u015fturamasakta , bunun d\u0131\u015f\u0131nda di\u011fer s\u0131n\u0131flar ile ayn\u0131 yeteneklere sahiptirler.&Ouml;rne\u011fin numaraland\u0131rmalara yap\u0131land\u0131r\u0131c\u0131 verebilir ,&ouml;rnek de\u011fi\u015fken ve methodlar ekleyebilir hatta arabirimler uygulayabilirsiniz.<br \/>Bir &ouml;rnekle inceleyelim.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">\/** * @Author : Ali Can Ku\u015ftemur * @Date : 22 May 2015 * @File_Name : EnumDemo.java * @Blog : http:\/\/alicankustemur.github.io *\/public class EnumDemo { enum Fruit {  Apple(5), Banana(7), Orange(2), Peach(4), Melon(6), WaterMelon;  private int price;  Fruit() {   price = -1;  }  Fruit(final int price) {   setPrice(price);  }  void setPrice(final int price) {   this.price = price;  }  int getPrice() {   return price;  } } public static void main(final String args[]) {  Fruit myFruit = Fruit.Orange;  System.out.println(myFruit + &quot; : &quot; + myFruit.getPrice() + &quot; $&quot;);  myFruit = Fruit.Peach;  System.out.println(myFruit + &quot; : &quot; + myFruit.getPrice() + &quot; $&quot;);  System.out.println(&quot;Fruit\/Melon :&quot; + Fruit.Melon.getPrice() + &quot; $&quot;);  System.out.println();  System.out.println(&quot;Fruit Numaraland\u0131rma Sabitleri Listesi &quot;);  for (final Fruit fruit : Fruit.values()) {   System.out.println(fruit + &quot; : &quot; + fruit.getPrice() + &quot; $&quot;);  } }}Orange : 2 $Peach : 4 $Fruit\/Melon :6 $Fruit Numaraland\u0131rma Sabitleri Listesi Apple : 5 $Banana : 7 $Orange : 2 $Peach : 4 $Melon : 6 $WaterMelon : -1 $<\/sh><p><strong>Constructor <\/strong>de\u011ferlerini sabitlere tan\u0131mlad\u0131ktan sonra <strong>getPrice()<\/strong> methodu ile <strong>Fruit <\/strong>numaraland\u0131r\u0131c\u0131 sabitlerinin price de\u011ferlerine ula\u015f\u0131p yazd\u0131rd\u0131k.Bir <strong>enum <\/strong>&ouml;rnek de\u011fi\u015fkeni olu\u015fturup new ifadesi kullanmad\u0131\u011f\u0131m\u0131za dikkat edelim. <strong>Constructor&#39;u <\/strong>bo\u015f ge&ccedil;ilen <strong>WaterMelon <\/strong>sabiti ise yine s\u0131n\u0131flarda oldu\u011fu gibi a\u015f\u0131r\u0131 y&uuml;klenebilir.<strong>Constructor <\/strong>arg&uuml;man\u0131 bo\u015f ge&ccedil;ilen sabit&#39;in -1 de\u011fer ald\u0131\u011f\u0131n\u0131 g&ouml;r&uuml;yoruz.Buradaki &ouml;nemli par&ccedil;alar :<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">Fruit myFruit = Fruit.Orange;myFruit.getPrice(); Fruit.Melon.getPrice();<\/sh><p>Burada getPrice() methodunun 2 farkl\u0131 &ccedil;a\u011fr\u0131lma \u015feklini g&ouml;rd&uuml;k. <strong>Numaraland\u0131rlar ile ilgili &ouml;nemli k\u0131s\u0131tlamalar:<\/strong> <em>1 - Bir numaraland\u0131rma bir ba\u015fka s\u0131n\u0131f\u0131 kal\u0131t\u0131mla devralamaz. 2 - Bir <strong>enum <\/strong>bir &uuml;st s\u0131n\u0131f olamaz. ( <strong>enum&#39;lar <\/strong>geni\u015fletilemezler.) 3 - Her bir numaraland\u0131rma sabiti tan\u0131mland\u0131\u011f\u0131 s\u0131n\u0131f\u0131n tipinde bir nesne olmal\u0131d\u0131r. <\/em><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">\/** * @Author : Ali Can Ku\u015ftemur * @Date : 23 May 2015 * @File_Name : EnumDemo2.java * @Blog : http:\/\/alicankustemur.github.io *\/public class EnumDemo2 { enum Fruit {  Apple, Banana, Orange, Peach, Melon, WaterMelon; } public static void main(final String args[]) {  final Fruit fr1, fr2, fr3;  for (final Fruit fruit : Fruit.values()) {   System.out.println(fruit + &quot; : &quot; + fruit.ordinal());  }  System.out.println();  fr1 = Fruit.Apple;  fr2 = Fruit.Banana;  fr3 = Fruit.Apple;  if (fr1.compareTo(fr2) &lt; 0) {   System.out.println(fr1 + &quot; &quot; + fr2 + &quot;&#39;dan &ouml;nce gelir.&quot;);  }  if (fr1.compareTo(fr2) &gt; 0) {   System.out.println(fr2 + &quot; &quot; + fr1 + &quot;&#39;dan &ouml;nce gelir.&quot;);  }  if (fr1.compareTo(fr3) == 0) {   System.out.println(fr1 + &quot; e\u015fittir &quot; + fr3 + &quot;&#39;a&quot;);  }  if (fr1.equals(fr3)) {   System.out.println(fr1 + &quot; e\u015fittir &quot; + fr3 + &quot;&#39;a&quot;);  } }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Apple : 0Banana : 1Orange : 2Peach : 3Melon : 4WaterMelon : 5Apple Banana&#39;dan &ouml;nce gelir.Apple e\u015fittir Apple&#39;aApple e\u015fittir Apple&#39;a<\/sh><p>T&uuml;m numaraland\u0131rmalar <strong>java.lang.Enum<\/strong> s\u0131n\u0131f\u0131n\u0131 devral\u0131r.Bu s\u0131n\u0131f\u0131n baz\u0131 methodlar\u0131 vard\u0131r.Bu &ouml;rnekte <strong>for-each<\/strong> d&ouml;ng&uuml;s&uuml; i&ccedil;erisinde kullanm\u0131\u015f oldu\u011fum<strong> ordinal() <\/strong>methodu ilgili enum sabitinin konumunu <strong>integer<\/strong> olarak d&ouml;nderir.( Dizideki indis(index) mant\u0131\u011f\u0131 ile ayn\u0131) <strong>compareTo()<\/strong> methodu ise &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131 sabit ile parametresine ald\u0131\u011f\u0131 sabit&#39;in konumlar\u0131n\u0131 kar\u015f\u0131la\u015ft\u0131r\u0131r.E\u011fer &ccedil;a\u011f\u0131ran sabitin ordinal de\u011feri &ccedil;a\u011fr\u0131landan k&uuml;&ccedil;&uuml;k ise negatif bir de\u011fer d&ouml;nd&uuml;r&uuml;r.B&uuml;y&uuml;k ise pozitif de\u011fer d&ouml;nd&uuml;r&uuml;r.E\u011fer s\u0131f\u0131r de\u011ferini d&ouml;nd&uuml;r&uuml;rse 2 sabitin konumu e\u015fit demektir.Buradaki <strong>equals() <\/strong>methodu ise &ccedil;a\u011f\u0131ran ve &ccedil;a\u011fr\u0131lan sabitlerin her ikiside ayn\u0131 numaraland\u0131rmadan gelen ayn\u0131 sabite kar\u015f\u0131l\u0131k geliyorsa <strong>true<\/strong> d&ouml;nd&uuml;r&uuml;r.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p>","date":"1432378363","tags":"java,javase , enums,java enum , enum , enums , c# enum , c# enums , java numaraland\u0131rma , java numaralandirma , numaralandirma , c# numaralandirma","link":"java---enums-numaralandirmalar"},{"id":"133","title":"Java - Dosya Okuma ve Dosya Yazma","content_half":"Merhaba bu yaz\u0131mda Java&#39;da Dosya \u0130\u015flemleri ile ilgili en &ccedil;ok kullan\u0131lan 2 yap\u0131y\u0131 anlataca\u011f\u0131m.&nbsp;FileInputStream(String fileName) throws FileNotFoundExceptionFileOutputStream(String fileName) throws FileNotFoundExceptionBuradaki fileName a&ccedil;mak istedi\u011finiz dosyan\u0131n ismini belirtir.E\u011fer dosya bulunamaz ise&nbsp;IOException s\u0131n\u0131f\u0131n\u0131n bir alt s\u0131n\u0131f\u0131 olan&nbsp;FileNotFoundException&#39;\u0131&nbsp;f\u0131rlat\u0131r.Yap\u0131lan dosya i\u015flemleri tamamland\u0131\u011f...\\n","content_full":"<p>Merhaba bu yaz\u0131mda Java&#39;da Dosya \u0130\u015flemleri ile ilgili en &ccedil;ok kullan\u0131lan 2 yap\u0131y\u0131 anlataca\u011f\u0131m.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">FileInputStream(String fileName) throws FileNotFoundExceptionFileOutputStream(String fileName) throws FileNotFoundException<\/sh><p>Buradaki <strong>fileName <\/strong>a&ccedil;mak istedi\u011finiz dosyan\u0131n ismini belirtir.E\u011fer dosya bulunamaz ise&nbsp;<strong>IOException <\/strong>s\u0131n\u0131f\u0131n\u0131n bir alt s\u0131n\u0131f\u0131 olan&nbsp;<strong>FileNotFoundException&#39;\u0131&nbsp;<\/strong>f\u0131rlat\u0131r.<br \/><br \/>Yap\u0131lan dosya i\u015flemleri tamamland\u0131\u011f\u0131nda&nbsp;<strong>close()<\/strong> methodu ile kapat\u0131lmal\u0131d\u0131r.Aksi takdirde sistem kaynaklar\u0131&nbsp;serbest kal\u0131r ve burada bir g&uuml;venlik a&ccedil;\u0131\u011f\u0131 meydana gelmi\u015f olur.<br \/><br \/><strong><em>1 - Dosya Okuma<\/em><\/strong><br \/><br \/>&Ouml;rnek &uuml;zerinden anlatay\u0131m :<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">import java.io.FileInputStream;import java.io.IOException;class FileRead { public static void main(final String args[]) {  int i;  String str = &quot;&quot;;  FileInputStream input = null;  try {   input = new FileInputStream(&quot;C:\\\\\\\\first.txt&quot;);   do {    i = input.read();    if (i != -1) {     str += (char) i;    }   } while (i != -1);  } catch (final IOException e) {   e.printStackTrace();  }  try {   input.close();  } catch (final IOException e) {   e.printStackTrace();  }  System.out.println(str); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Hello World !<\/sh><p>Yukar\u0131da ki programda <strong>input <\/strong>de\u011fi\u015fkeni<strong> FileInputStream <\/strong>s\u0131n\u0131f\u0131n\u0131 referans etmektedir.<strong>try <\/strong>blo\u011funun i&ccedil;erisinde nesnemizi olu\u015fturuyoruz ve bir parametreli Constructor&#39;un ald\u0131\u011f\u0131 arg&uuml;man de\u011feri dosyan\u0131n ismidir.(Dosya ismi i&ccedil;erisindeki arg&uuml;man\u0131n iki adet &quot;\\\\&quot; ifadesi almas\u0131n\u0131n sebebi derleyicinin &quot;\\\\&quot; karakterinden sonraki karakteri dikkate almadan derleme i\u015flemine devam etmesini sa\u011flad\u0131k.Yani <strong>&quot;C:\\\\\\\\first.txt&quot; <\/strong>bu de\u011ferin &ccedil;\u0131kt\u0131s\u0131 <strong>&quot;C:\\\\first.txt&quot;<\/strong> bu olucakt\u0131r.Onu ba\u015fka bir yaz\u0131mda anlataca\u011f\u0131m.<strong>[Escape Characters]) . do-while<\/strong> i&ccedil;erisinde ki <strong>i<\/strong> de\u011fi\u015fkenine atad\u0131\u011f\u0131m\u0131z <strong>input <\/strong>de\u011fi\u015fkeni <strong>FileInputStream<\/strong> s\u0131n\u0131f\u0131n\u0131n <strong>read()<\/strong> methodunu &ccedil;a\u011f\u0131r\u0131r ve bu method bir tamsay\u0131 de\u011fer d&ouml;nd&uuml;r&uuml;r.E\u011fer dosya okuma i\u015fleminin sonuna yakla\u015f\u0131rsa d&ouml;nd&uuml;rd&uuml;r&uuml;\u011f&uuml; de\u011fer <strong>-1<\/strong> olur.<strong>i<\/strong> de\u011fi\u015fkenini <strong>char <\/strong>tipinde <strong>cast <\/strong>ettikten sonra <strong>str&#39;ye <\/strong>ekliyoruz.Ben &ouml;rnek olarak <strong>first.txt <\/strong>i&ccedil;erisine <strong>&quot;Hello World !&quot; <\/strong>yaz\u0131p kaydettim.Okuma i\u015flemini yapt\u0131ktan sonra yukar\u0131da belirtti\u011fim gibi dosyay\u0131 kapatmam\u0131z gerekiyor.Bunuda bir <strong>try-catch <\/strong>blo\u011funda <strong>close() <\/strong>methodunu &ccedil;a\u011f\u0131rarak yap\u0131yoruz.Yap\u0131lan bu i\u015flemlerin hepsi birer <strong>IOException <\/strong>f\u0131rlatabilir.<br \/><br \/>&nbsp;<strong><em>2 - Dosya Yazma <\/em><\/strong><br \/><br \/>Buradaki program<strong> &quot; first.txt &quot;<\/strong> i&ccedil;erisindeki verileri <strong>&quot; second.txt &quot;<\/strong> &#39;ye aktar\u0131r.<br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;class FileRead { public static void main(final String args[]) {  int i;  FileInputStream input = null;  FileOutputStream output = null;  try {   input = new FileInputStream(&quot;C:\\\\\\\\first.txt&quot;);   output = new FileOutputStream(&quot;C:\\\\\\\\second.txt&quot;);   do {    i = input.read();    if (i != -1) {     output.write(i);    }   } while (i != -1);  } catch (final IOException e) {   e.printStackTrace();  } finally {   try {    if (input != null) {     input.close();    }   } catch (final IOException e) {    e.printStackTrace();   }   try {    if (output != null) {     output.close();    }   } catch (final IOException e2) {    e2.printStackTrace();   }  } }}<\/sh><p>Burada <strong>&quot;Dosya Okuma&quot; <\/strong>i\u015flemlerinde yapm\u0131\u015f oldu\u011fumuz <strong>str <\/strong>&nbsp;de\u011fi\u015fkenine ekledi\u011fimiz de\u011ferleri output nesnesine <strong>FileOutputStream<\/strong> s\u0131n\u0131f\u0131n\u0131n <strong>write()<\/strong> methodunu kullanarak aktar\u0131yoruz.Bir &ouml;nceki i\u015flemlerden farkl\u0131 olarak <strong>try-catch<\/strong> blo\u011funda bir <strong>finally <\/strong>blo\u011fu yer al\u0131yor.Buras\u0131 program\u0131m\u0131za bir esneklik sa\u011fl\u0131yor.<strong>finally<\/strong> blo\u011fu her zaman <strong>try-catch <\/strong>bloklar\u0131ndan sonra kesinlikle &ccedil;al\u0131\u015ft\u0131r\u0131l\u0131r.Dosya kapatma i\u015flemlerini burdan y&ouml;netmek hem daha &ouml;nceden olu\u015fan sorunlardan &ouml;t&uuml;r&uuml; kapanmayan dosyalar\u0131 kapat\u0131r hemde kodu k\u0131salt\u0131r.<\/p>","date":"1432378363","tags":"java,javase, filestream , fileinputstream , fileoutputstream , java fileinputstream , java file read , java file write , try-catch , try catch , try-with resources","link":"java---dosya-okuma-ve-dosya-yazma"},{"id":"134","title":"Java - Dosya Okuma ve Dosya Yazma #2","content_half":"Bir &ouml;nceki yaz\u0131ma buradan ula\u015fabilirsiniz.Bu yaz\u0131mda daha geli\u015fmi\u015f JDK 7 s&uuml;r&uuml;m&uuml; ile gelen bir &ouml;zellik&nbsp;try-with resources ile birlikte Dosya Okuma ve Dosya Yazma i\u015flemlerini g&ouml;sterece\u011fim.JDK 7&#39;den &ouml;nce dosya kapatma i\u015flemi halen ge&ccedil;erli ve faydal\u0131 olmas\u0131na ra\u011fmen , yeni &ouml;zellik ile kapatma i\u015flemini otomatik hale getirerek daha kullan\u0131\u015fl\u0131 bir yap\u0131 olu\u015fturur.Art\u0131k bu yeni &ouml;zellik ile close() methodunu &ccedil...\\n","content_full":"<p><a href=\\\"http:\/\/kustemura.blogspot.com.tr\/2015\/05\/java-dosya-okuma-ve-dosya-yazma.html\\\">Bir &ouml;nceki yaz\u0131ma buradan ula\u015fabilirsiniz.<\/a><br \/><br \/>Bu yaz\u0131mda daha geli\u015fmi\u015f <strong>JDK 7 <\/strong>s&uuml;r&uuml;m&uuml; ile gelen bir &ouml;zellik&nbsp;<strong>try-with resources <\/strong>ile birlikte <strong>Dosya Okuma ve Dosya Yazma<\/strong> i\u015flemlerini g&ouml;sterece\u011fim.<br \/><br \/><strong>JDK 7<\/strong>&#39;den &ouml;nce dosya kapatma i\u015flemi halen ge&ccedil;erli ve faydal\u0131 olmas\u0131na ra\u011fmen , yeni &ouml;zellik ile kapatma i\u015flemini otomatik hale getirerek daha kullan\u0131\u015fl\u0131 bir yap\u0131 olu\u015fturur.<br \/><br \/>Art\u0131k bu yeni &ouml;zellik ile <strong>close() <\/strong>methodunu &ccedil;a\u011f\u0131rmam\u0131za gerek yoktur.Bir ba\u015fka deyi\u015fle dosyay\u0131 kapatmay\u0131 unutmam\u0131za imkan yoktur.<br \/>Hemen &ouml;rnek &uuml;zerinde bunu g&ouml;relim.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;class FileRead { public static void main(final String args[]) {  int i;  try (FileInputStream input = new FileInputStream(&quot;C:\\\\\\\\first.txt&quot;);    FileOutputStream output = new FileOutputStream(&quot;C:\\\\\\\\second.txt&quot;)) {   do {    i = input.read();    if (i != -1) {     output.write(i);    }   } while (i != -1);  } catch (final IOException e) {   e.printStackTrace();  } }}<\/sh><p>Bu program ile <strong>&quot; Dosya Yazma &quot; <\/strong>b&ouml;l&uuml;m&uuml;ndeki program ayn\u0131 i\u015flemi yapar.Daha k\u0131sa ve sade bir kullan\u0131ma sahiptir.Ayr\u0131ca daha kullan\u0131\u015fl\u0131d\u0131r.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">try (FileInputStream input = new FileInputStream(&quot;C:\\\\\\\\first.txt&quot;);    FileOutputStream output = new FileOutputStream(&quot;C:\\\\\\\\second.txt&quot;)) {<\/sh><p>Buradaki kullan\u0131ma dikkat edelim.<strong>try <\/strong>blo\u011fu sonland\u0131\u011f\u0131nda otomatik olarak <strong>input <\/strong>ve <strong>output <\/strong>dosya i\u015flemleri kapat\u0131lacakt\u0131r.<\/p><p>&nbsp;<\/p>","date":"1432378363","tags":"java,javase , filestream , fileinputstream , fileoutputstream , java fileinputstream , java file read , java file write , try-catch , try catch , try-with resources","link":"java---dosya-okuma-ve-dosya-yazma-sharp2"},{"id":"135","title":"Java  - instanceof Anahtar S\u00f6zc\u00fc\u011f\u00fc","content_half":"Bu yaz\u0131mda instanceof anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n ne i\u015fe yarad\u0131\u011f\u0131n\u0131 ve kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m.Java&#39;da ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;m&uuml; bir &ccedil;al\u0131\u015fma hatas\u0131na neden olur.Ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mlerinin &ccedil;o\u011fu &ccedil;al\u0131\u015fma zaman\u0131nda yakalanabilir.Ancak s\u0131n\u0131f hiyerar\u015fisindeki tip d&ouml;n&uuml;\u015f&uuml;mleri ancak &ccedil;al\u0131\u015fma zaman\u0131nda alg\u0131labilen ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mleri &uuml;reteb...\\n","content_full":"<p>Bu yaz\u0131mda instanceof anahtar s&ouml;zc&uuml;\u011f&uuml;n&uuml;n ne i\u015fe yarad\u0131\u011f\u0131n\u0131 ve kullan\u0131m\u0131n\u0131 anlataca\u011f\u0131m.<br \/>\\nJava&#39;da ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;m&uuml; bir &ccedil;al\u0131\u015fma hatas\u0131na neden olur.Ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mlerinin &ccedil;o\u011fu &ccedil;al\u0131\u015fma zaman\u0131nda yakalanabilir.Ancak s\u0131n\u0131f hiyerar\u015fisindeki tip d&ouml;n&uuml;\u015f&uuml;mleri ancak &ccedil;al\u0131\u015fma zaman\u0131nda alg\u0131labilen ge&ccedil;ersiz tip d&ouml;n&uuml;\u015f&uuml;mleri &uuml;retebilirler.Bu bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 f\u0131rlat\u0131r.Java bu durumlara &ccedil;&ouml;z&uuml;m bulabilmek i&ccedil;in <strong>instanceof <\/strong>ad\u0131nda bir &ccedil;al\u0131\u015fma zaman\u0131 operatoru tan\u0131mlar.<br \/>\\n&nbsp;Kullan\u0131m \u015fekli a\u015fa\u011f\u0131da oldu\u011fu gibidir.<br \/>\\n&nbsp;<\/p>\\n\\n<p>&lt; &Ouml;rnek Referans &gt; instanceof &lt; S\u0131n\u0131f Tipi&gt;<\/p>\\n\\n<p>&nbsp;<\/p>\\n\\n<p><strong>&quot;&Ouml;rnek Referans&quot; <\/strong> belirtilen s\u0131n\u0131f tipinde ise veya belirtilen tipe d&ouml;n&uuml;\u015ft&uuml;rebiliyorsa <strong>true<\/strong> de\u011ferini d&ouml;nd&uuml;r&uuml;r. Bir &ouml;rnek ile inceleyelim.<\/p>\\n\\n<p>&nbsp;<\/p>\\n\\n<p>&nbsp;<\/p>\\n\\n<p>\/** * @Author : Ali Can Ku\u015ftemur * @Date : 24 May 2015 * @File_Name : InstanceOf.java * @Blog : http:\/\/alicankustemur.github.io *\/ class Ford { int weight, model; } class Volkswagen { int weight, model; } class GT extends Ford { int speed; } class Mustang extends Ford { int speed; } class InstanceOf { public static void main(final String args[]) { final Ford car = new Ford(); final Volkswagen car1 = new Volkswagen(); final GT car2 = new GT(); final Mustang car3 = new Mustang(); if (car instanceof Ford) { System.out.println(&quot;car &ouml;rnek referans\u0131 ,&quot; + &quot; Ford s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } if (car1 instanceof Volkswagen) { System.out.println(&quot;car1 &ouml;rnek referans\u0131 ,&quot; + &quot; Volkswagen s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } if (car2 instanceof GT) { System.out.println(&quot;car2 &ouml;rnek referans\u0131 ,&quot; + &quot; GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } if (car3 instanceof Mustang) { System.out.println(&quot;car3 &ouml;rnek referans\u0131 ,&quot; + &quot; Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } if (car instanceof GT) { System.out.println(&quot;car &ouml;rnek referans\u0131 ,&quot; + &quot; GT s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;); } System.out.println(); Ford newCar; newCar = car3; if (newCar instanceof Mustang) { System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot; + &quot; Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } newCar = car2; if (newCar instanceof GT) { System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot; + &quot; GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir.&quot;); } if (newCar instanceof Mustang) { System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot; + &quot; Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;); } else { System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot; + &quot; Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lemez!&quot;); } if (newCar instanceof Ford) { System.out.println(&quot;newCar &ouml;rnek referans\u0131 ,&quot; + &quot; Ford s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.&quot;); } } } Program\u0131n &Ccedil;\u0131kt\u0131s\u0131: car &ouml;rnek de\u011fi\u015fkeni , Ford s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. car1 &ouml;rnek referans\u0131 , Volkswagen s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. car2 &ouml;rnek referans\u0131 , GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. car3 &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. newCar &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. newCar &ouml;rnek referans\u0131 , GT s\u0131n\u0131f tipinin bir &ouml;rne\u011fidir. newCar &ouml;rnek referans\u0131 , Mustang s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lemez! newCar &ouml;rnek referans\u0131 , Ford s\u0131n\u0131f tipine d&ouml;n&uuml;\u015ft&uuml;r&uuml;lebilir.<\/p>\\n\\n<p>&nbsp;<\/p>\\n\\n<p>&nbsp;<\/p>\\n","date":"1432464763","tags":"java,javase , instanceof , java instanceof kullan\u0131m\u0131 , instaceof nedir , java instanceof nedir","link":"java---instanceof-anahtar-sozcugu"},{"id":"136","title":"Java - Jenerikler ( Generics )","content_half":"Merhaba , bu yaz\u0131mda Jenerikler(Generics)&#39;den bahsedece\u011fim. Jenerikler Java&#39;ya JDK 5 ile eklenmi\u015ftir.Jeneriklerin kullan\u0131ld\u0131\u011f\u0131 kaynak kodlar javac derleyicisinin daha &ouml;nceki versiyonlar\u0131nda derlenemez. Jenerikler, Java&#39;y\u0131 iki &ouml;nemli bak\u0131mdan de\u011fi\u015ftirmi\u015ftir.Birincisi , bu yeni &ouml;zellik dile yeni bir s&ouml;zdizimi &ouml;\u011fesi eklemi\u015ftir.\u0130kincisi ise , &ccedil;ekirdek API&#39;daki bir&ccedil;ok s\u0131n\u0131f ve method&#39;da de\u011fi\u015fikliklere neden olmu\u015ftur.J...\\n","content_full":"<p>Merhaba , bu yaz\u0131mda Jenerikler(Generics)&#39;den bahsedece\u011fim. Jenerikler Java&#39;ya JDK 5 ile eklenmi\u015ftir.<br \/><strong><em>Jeneriklerin kullan\u0131ld\u0131\u011f\u0131 kaynak kodlar javac derleyicisinin daha &ouml;nceki versiyonlar\u0131nda derlenemez. <\/em><\/strong><br \/><strong>Jenerikler<\/strong>,<strong> Java&#39;y\u0131 <\/strong>iki &ouml;nemli bak\u0131mdan de\u011fi\u015ftirmi\u015ftir.Birincisi , bu yeni &ouml;zellik dile yeni bir s&ouml;zdizimi &ouml;\u011fesi eklemi\u015ftir.\u0130kincisi ise , &ccedil;ekirdek <strong>API&#39;daki <\/strong>bir&ccedil;ok s\u0131n\u0131f ve method&#39;da de\u011fi\u015fikliklere neden olmu\u015ftur.Java kodlar\u0131n\u0131n yaz\u0131lma bi&ccedil;imini temelden de\u011fi\u015ftirmi\u015ftir.<br \/>Temel olarak jenerikler terimi , <em>parametreli tipler <\/em>anlam\u0131na gelir.Bu yap\u0131 &ouml;nemlidir , &uuml;zerinde &ccedil;al\u0131\u015facaklar\u0131 veri tipinin bir parametre olarak belirtildi\u011fi s\u0131n\u0131flar , arabirimler ve methodlar olu\u015fturabilmenizi sa\u011flar.<br \/><strong>Jenerikler&#39;den <\/strong>&ouml;nce <strong>Object <\/strong>tipindeki referanslar yoluyla yaz\u0131lan kaynak kodlar\u0131 hala g&uuml;n&uuml;m&uuml;zde kullan\u0131ma devam etmektedir.<strong>Object <\/strong>tipindeki sorun tip g&uuml;venli\u011fi olmamas\u0131yd\u0131.<strong>Jenerikler <\/strong>bu soruna &ccedil;&ouml;z&uuml;m olarak tasarlanm\u0131\u015ft\u0131r.Ayr\u0131ca s&uuml;reci h\u0131zland\u0131r\u0131r art\u0131k <strong>Object <\/strong>ve &uuml;zerinde &ccedil;al\u0131\u015fan tip aras\u0131nda d&ouml;n&uuml;\u015f&uuml;m yap\u0131lmas\u0131na gerek duyulmaz.<strong>Jeneriklerde <\/strong>t&uuml;m tip atamalar\u0131 otomatik ve kapal\u0131 olarak yap\u0131l\u0131r.Bu \u015fekilde Jenerikler kodunuzu tekrar kullanabilme yetene\u011finizi artt\u0131r\u0131r , bunu g&uuml;venle ve kolayl\u0131kla yapabilmenizi sa\u011flar.Bir &ouml;rnek &uuml;zerinden inceleyelim.<br \/><br \/><sh class=\\\"brush: java\\\">class NonGen { Object type; NonGen(final Object type) {  this.type = type; } Object getObject() {  return type; } void showType() {  System.out.println(&quot;Object type&#39;\u0131n tipi :&quot; + type.getClass().getName()); }}class NonGenDemo { public static void main(final String args[]) {  final NonGen intType = new NonGen(35);  final int v = (Integer) intType.getObject();  intType.showType();  System.out.println(&quot;De\u011feri :&quot; + v);  System.out.println();  final NonGen strType = new NonGen(&quot;Hello World!&quot;);  final String str = (String) strType.getObject();  strType.showType();  System.out.println(&quot;De\u011feri : &quot; + str);  System.out.println();  final NonGen doubleType = new NonGen(12.5);  final Double d = (Double) doubleType.getObject();  doubleType.showType();  System.out.println(&quot;De\u011feri : &quot; + d); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Object type&#39;\u0131n tipi :java.lang.IntegerDe\u011feri :35Object type&#39;\u0131n tipi :java.lang.StringDe\u011feri : Hello World!Object type&#39;\u0131n tipi :java.lang.DoubleDe\u011feri : 12.5<\/sh><p>&nbsp;<\/p><p><br \/>Yukar\u0131daki programda <strong>Object <\/strong>tan\u0131mlamalar\u0131 oldu\u011fu i&ccedil;in <strong>NonGen&#39;in jenerik versiyon<\/strong> gibi her tipte nesneyi depolayabilmesini sa\u011flar.Ancak ayn\u0131 zamanda java derleyicisinin ger&ccedil;ekte <strong>NonGen <\/strong>i&ccedil;erisinde depolanan verinin tipi hakk\u0131nda ger&ccedil;ek bir bilgiye sahip olmas\u0131n\u0131 &ouml;nler.Bu , iki nedenle k&ouml;t&uuml;d&uuml;r.<strong><em>Birincisi depolanan veriyi elde etmek i&ccedil;in a&ccedil;\u0131k tip atamalar\u0131 gereklidir.\u0130kincisi ise &ccedil;al\u0131\u015fma zaman\u0131nda &ccedil;e\u015fitli t&uuml;rlerde tip uyu\u015fmazl\u0131\u011f\u0131 hatalar\u0131 olu\u015fabilir. <\/em><\/strong><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">int v = (Integer) intType.getObject();<\/sh><p><br \/>Burada ,<strong> getObject() <\/strong>methodunun d&ouml;n&uuml;\u015f tipi <strong>Object <\/strong>oldu\u011fundan , de\u011ferin kutudan &ccedil;\u0131kart\u0131l\u0131p<strong> v <\/strong>de\u011fi\u015fkeninde depolanmas\u0131n\u0131 sa\u011flamak i&ccedil;in <strong>Integer&#39;a <\/strong>tip atamas\u0131 gereklidir.Tip atamas\u0131n\u0131 kald\u0131r\u0131rsan\u0131z program derlenmemez.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">intType = strType;v = (Integer) intType.getObject();<\/sh><p><br \/>Burada bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 olu\u015fur.&Ccedil;&uuml;nk&uuml; <strong>intType&#39;a strType <\/strong>atan\u0131r.Ancak <strong>strType <\/strong>bir tamsay\u0131 de\u011fil , karakter katar\u0131 i&ccedil;eren bir nesneye referans yapar.Bu atama s&ouml;zdizimsel a&ccedil;\u0131dan ge&ccedil;erli de\u011fildir.&Ccedil;&uuml;nk&uuml; t&uuml;m <strong>NonGen <\/strong>referanslar\u0131 ayn\u0131d\u0131r ve herhangi bir <strong>NonGen <\/strong>referans\u0131 bir ba\u015fka <strong>NonGen <\/strong>nesnesine referans yapabilir.Ancak bu mant\u0131ksal olarak yanl\u0131\u015ft\u0131r.<strong>getObject() <\/strong>methodunun d&ouml;&uuml;\u015f tipi tip atamas\u0131yla integer yap\u0131l\u0131r ve sonra bu de\u011feri <strong>v<\/strong> de\u011fi\u015fkenine atama yap\u0131l\u0131r.Sorun art\u0131k <strong>intType&#39;in <\/strong>bir Integer de\u011fil bir <strong>String <\/strong>i&ccedil;eren nesneye referans yapmas\u0131d\u0131r.\u0130\u015fte burada <strong>Jenerikler <\/strong>kullan\u0131lmadan java derleyicisinin bunu bilmesine imkan yoktur ve bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131 ortaya &ccedil;\u0131km\u0131\u015ft\u0131r.<strong>Jeneriklerde <\/strong>ayn\u0131 i\u015flem denenseydi , derleyici sorunu yakalayacak ve bir hata bildirecekti.Bu da bir &ccedil;al\u0131\u015fma zaman\u0131 hatas\u0131n\u0131 &ouml;nleyecekti.<strong>Jenerikler <\/strong>sayesinde olu\u015fan &ccedil;al\u0131\u015fma zaman\u0131 hatalar\u0131 , art\u0131k derlenme zaman\u0131 hatas\u0131 haline gelmi\u015ftir.<br \/><br \/><em><strong>Bir programc\u0131n\u0131n en &ccedil;ok korktu\u011fu \u015feydir bu! E\u011fer iyi bir programc\u0131 olmak istiyorsak , kullanaca\u011f\u0131m\u0131z her\u015fey t&uuml;m kurallara uygun olmal\u0131d\u0131r.\u0130yi bir programc\u0131 &ccedil;al\u0131\u015fma zaman\u0131 hatalar\u0131na izin vermemelidir.Bir i\u015fi yapan her program do\u011fru sonu&ccedil;lar verebilir fakat do\u011fru kullan\u0131ma sahip de\u011fildir &nbsp;:)<\/strong><\/em><br \/><br \/>\u015eimdi yukar\u0131da ki program\u0131n <strong>Jenerik <\/strong>versiyonunu olu\u015ftural\u0131m.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Gen { T type; Gen(final T type) {  this.type = type; } T getType() {  return type; } void showType() {  System.out.println(&quot;Jenerik type&#39;\u0131n tipi : &quot;+ type.getClass().getName()); }}class GenDemo { public static void main(final String args[]) {  final Gen intType = new Gen(35);  intType.showType();  final int v = intType.getType();  System.out.println(&quot;De\u011feri :&quot; + v);  System.out.println();  final Gen strType = new Gen(&quot;Hello World!&quot;);  strType.showType();  final String str = strType.getType();  System.out.println(&quot;De\u011feri : &quot; + str);  System.out.println();  final Gen doubleType = new Gen(12.5);  doubleType.showType();  final Double d = doubleType.getType();  System.out.println(&quot;De\u011feri : &quot; + d); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 :Jenerik type&#39;\u0131n tipi : java.lang.IntegerDe\u011feri :35Jenerik type&#39;\u0131n tipi : java.lang.StringDe\u011feri : Hello World!Jenerik type&#39;\u0131n tipi : java.lang.DoubleDe\u011feri : 12.5<\/sh><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class Gen { ..<\/sh><p><br \/>Bu kullan\u0131ma dikkat edelim.<br \/><strong>T<\/strong> , bir tip parametresinin ad\u0131d\u0131r.Bu ad nesne olu\u015fturulurken <strong>Gen <\/strong>s\u0131n\u0131f\u0131na aktar\u0131lacak olan ger&ccedil;ek tip i&ccedil;in bir <em><strong>yer tutucudur.<\/strong><\/em>Bu y&uuml;zden <strong>type <\/strong>, <strong>T<\/strong>&#39;ye akrat\u0131lan tipte bir nesne olucakt\u0131r.&Ouml;rnekte oldu\u011fu gibi <strong>T<\/strong>&#39;ye aktar\u0131lan tip<strong> Integer,String ve Double <\/strong>tipleri , <strong>type&#39;\u0131 <\/strong>o tipe ait bir nesne yap\u0131yor.<strong>Java <\/strong>derleyicisinin ger&ccedil;ekte <strong>Gen&#39;in <\/strong>ya da bir ba\u015fka <strong>jenerik <\/strong>s\u0131n\u0131f\u0131n de\u011fi\u015fik versiyonlar\u0131n\u0131n olu\u015fturulmad\u0131\u011f\u0131n\u0131 belirtmemiz gerekir.<strong>Derleyici <\/strong>, t&uuml;m <strong>jenerik <\/strong>tip bilgilerini ortadan kald\u0131r\u0131r.Bu i\u015fleme <em><strong>silme( erasure ) <\/strong><\/em>denir.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">Gen intType = new Gen(35);<\/sh><p><br \/>Bu sat\u0131r <strong>Gen constructoru<\/strong> &ccedil;a\u011fr\u0131ld\u0131\u011f\u0131nda , <strong>Integer <\/strong>tip arg&uuml;man\u0131n\u0131n da belirtildi\u011fine dikkat edelim.Bu gereklidir , &ccedil;&uuml;nk&uuml; referans atanaca\u011f\u0131 nesnenin <strong>(intType) <\/strong>tipi <strong>Gen &lt; Integer &gt;<\/strong>&#39;d\u0131r.Bu y&uuml;zden <strong>new <\/strong>taraf\u0131ndan d&ouml;nd&uuml;r&uuml;len referansda ayn\u0131 tipe sahip olmal\u0131d\u0131r.De\u011filse bir derleme zaman\u0131 hatas\u0131 ger&ccedil;ekle\u015fir.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">Gen intType;intType = new Gen(35);<\/sh><p><br \/>Yukar\u0131daki kod buna bir &ouml;rnektir.Nesne <strong>Gen<\/strong><strong> <\/strong>tipinde oldu\u011fundan <strong>Gen<\/strong><strong> <\/strong>tipinde bir nesneye ba\u015fvuramaz.Tip kontrol&uuml; <strong>Jeneriklerin <\/strong>en ba\u015fl\u0131ca avantajlar\u0131ndan biridir.<br \/><br \/>Jenerikler sadece nesnelerle &ccedil;al\u0131\u015f\u0131r.Jenerik bir tipte &ouml;rnek deklare ederken , tip parametresine aktar\u0131lan tip s\u0131n\u0131f tipi olmal\u0131d\u0131r.int yada char gibi bir primitif tip kullan\u0131lamaz.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">Gen intType = new Gen(35);<\/sh><p>&Ouml;rnek olarak <strong>Gen <\/strong>s\u0131n\u0131f\u0131nda , <strong>T&#39;<\/strong>ye herhangi bir s\u0131n\u0131f tipi aktarabilirsiniz,ancak tip parametresine bir primitif tip aktaramazs\u0131n\u0131z.<br \/><br \/><br \/>Jenerikler iki tip parametreli olarakda kullan\u0131labilir.A\u015fa\u011f\u0131daki program\u0131 inceleyelim.<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><sh class=\\\"brush: java\\\">class TwoGen { T type; Y type2; TwoGen(final T type, final Y type2) {  this.type = type;  this.type2 = type2; } T getType() {  return type; } Y getType2() {  return type2; } void showType() {  System.out.println(&quot;Jenerik type&#39;\u0131n tipi : &quot;    + type.getClass().getName());  System.out.println(&quot;Jenerik type2&#39;\u0131n tipi : &quot;    + type2.getClass().getName()); }}class GenDemo { public static void main(final String args[]) {  final TwoGen twoType = new TwoGen(35,    &quot;Hello World!&quot;);  twoType.showType();  final int v = twoType.getType();  System.out.println(&quot;De\u011feri (int):&quot; + v);  final String str = twoType.getType2();  System.out.println(&quot;De\u011feri (String):&quot; + str); }}Program\u0131n &Ccedil;\u0131kt\u0131s\u0131 : Jenerik type&#39;\u0131n tipi : java.lang.IntegerJenerik type2&#39;\u0131n tipi : java.lang.StringDe\u011feri (int):35De\u011feri (String):Hello World!<\/sh><p>&nbsp;<\/p><p>&nbsp;<\/p>","date":"1432464763","tags":"java,javase, jenerikler , java generics , generic , generics , java collections , java collection framework","link":"java---jenerikler-generics"},{"id":"137","title":"Giri\u015f Sayfas\u0131 ve CRUD Paneli (Servlet JSP \/ PHP)","content_half":"Bu yaz\u0131mda yapm\u0131\u015f oldu\u011fum ufak bir projeyi payla\u015f\u0131yorum.Projeyi kaynak belirtmeden herhangi bir yerde kullanabilirsiniz.Bir giri\u015f sayfam\u0131z var,e\u011fer giri\u015f ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015firse yine giri\u015f sayfas\u0131 i&ccedil;in anl\u0131k olarak kullan\u0131c\u0131\/yetkili olu\u015furup , listeleyip, g&uuml;ncelleyip , silebilece\u011fimiz bir sayfa geliyor.Veritaban\u0131 sunucusu olarak MySQL&#39;i kulland\u0131m.Baz\u0131 i\u015flemler i&ccedil;in &ccedil;ok k\u0131sa JavaScript kullan\u0131lm\u0131\u015ft\u0131r.Servlet ...\\n","content_full":"<p>Bu yaz\u0131mda yapm\u0131\u015f oldu\u011fum ufak bir projeyi payla\u015f\u0131yorum.<br \/>Projeyi kaynak belirtmeden herhangi bir yerde kullanabilirsiniz.<br \/>Bir giri\u015f sayfam\u0131z var,e\u011fer giri\u015f ba\u015far\u0131l\u0131 bir \u015fekilde ger&ccedil;ekle\u015firse yine giri\u015f sayfas\u0131 i&ccedil;in anl\u0131k olarak kullan\u0131c\u0131\/yetkili olu\u015furup , listeleyip, g&uuml;ncelleyip , silebilece\u011fimiz bir sayfa geliyor.<br \/>Veritaban\u0131 sunucusu olarak <strong>MySQL<\/strong>&#39;i kulland\u0131m.Baz\u0131 i\u015flemler i&ccedil;in &ccedil;ok k\u0131sa <strong>JavaScript <\/strong>kullan\u0131lm\u0131\u015ft\u0131r.<br \/><br \/><strong>Servlet <\/strong>ile olu\u015fturulan versiyonu <strong>JDBC <\/strong>, <strong>JSP <\/strong>sayfalar\u0131 ise <strong>JSTL <\/strong>kullan\u0131larak&nbsp; <strong>MVC <\/strong>ve <strong>DAO <\/strong>Tasar\u0131m \u015eablonlar\u0131 uygulanarak <strong>Maven Project <\/strong>olarak<strong> Eclipse<\/strong>&#39;de haz\u0131rlanm\u0131\u015ft\u0131r.<br \/><br \/><strong>PHP <\/strong>versiyonunda herhangi bir framework kullan\u0131lmam\u0131\u015ft\u0131r.<br \/><br \/><strong>Servlet&nbsp; JSP <\/strong>versiyonu <strong>GitHub <\/strong>linki :<br \/><a href=\\\"https:\/\/github.com\/kustemura\/LoginCrudServletJSPExample\\\">https:\/\/github.com\/kustemura\/LoginCrudServletJSPExample<\/a><br \/><br \/><strong>Servlet JSP <\/strong>versiyonu<strong> Google Drive<\/strong> linki :<br \/><a href=\\\"https:\/\/drive.google.com\/file\/d\/0BytHrEwKQAMjOVJFMERZRThuRTg\/view\\\">https:\/\/drive.google.com\/file\/d\/0BytHrEwKQAMjOVJFMERZRThuRTg\/view<\/a><br \/><br \/><strong>PHP <\/strong>versiyonu <strong>GitHub <\/strong>linki :<br \/><a href=\\\"https:\/\/github.com\/kustemura\/LoginCrudPHPExample\\\">https:\/\/github.com\/kustemura\/LoginCrudPHPExample<\/a><br \/><br \/><strong>PHP<\/strong> versiyonu <strong>Google Drive<\/strong> linki :<br \/><a href=\\\"https:\/\/drive.google.com\/open?id=0BytHrEwKQAMjT3ZJRWhHTV80c1E\\\">https:\/\/drive.google.com\/open?id=0BytHrEwKQAMjT3ZJRWhHTV80c1E<\/a><br \/><br \/>A\u015fa\u011f\u0131daki resimler projenin 2 versiyonundaki ekran g&ouml;r&uuml;nt&uuml;leri bulunmaktad\u0131r.<br \/><br \/>Giri\u015f Sayfas\u0131<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-UHXRR_QlEv4\/VZwVXknG07I\/AAAAAAAABqo\/ZZ97yROautY\/s1600\/1.png\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-UHXRR_QlEv4\/VZwVXknG07I\/AAAAAAAABqo\/ZZ97yROautY\/s1600\/1.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><br \/>&nbsp;&nbsp;&nbsp; giri\u015f sayfas\u0131nda olu\u015fan durumlar i&ccedil;in bir validasyon sistemine sahip ve &uuml;st tarafta uyar\u0131lar olu\u015fmakta .Kullan\u0131c\u0131 ad\u0131 veya \u015fifre bo\u015f ge&ccedil;ilirse ,<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-frKhNOt-wmE\/VZwW7e7PbCI\/AAAAAAAABq8\/0KCzE_6mzy4\/s1600\/3.png\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-frKhNOt-wmE\/VZwW7e7PbCI\/AAAAAAAABq8\/0KCzE_6mzy4\/s1600\/3.png\\\" \/>&nbsp;<\/a><\/p><p>&nbsp;<\/p><p>sistemdeki t&uuml;m kullan\u0131c\u0131lar\u0131 kald\u0131r\u0131p &ccedil;\u0131k\u0131\u015f yapt\u0131ktan sonra tekrar giri\u015f yapmay\u0131 denersek ,<br \/>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-DZ2Gkkie2i4\/VZwY9NLWC2I\/AAAAAAAABrI\/YYsF1Yp_-8w\/s1600\/13.png\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-DZ2Gkkie2i4\/VZwY9NLWC2I\/AAAAAAAABrI\/YYsF1Yp_-8w\/s1600\/13.png\\\" \/><\/a><\/p><p><br \/>&nbsp;hatal\u0131 girilirse ,<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-xQC0LW1sFTM\/VZwW3TBxC8I\/AAAAAAAABq0\/E1UJRMLxvAA\/s1600\/2.png\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-xQC0LW1sFTM\/VZwW3TBxC8I\/AAAAAAAABq0\/E1UJRMLxvAA\/s1600\/2.png\\\" \/>&nbsp;<\/a><\/p><p>&nbsp;<\/p><p>e\u011fer giri\u015f yapan ki\u015fi yetkili de\u011fil ise ,&nbsp;&nbsp;<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/1.bp.blogspot.com\/-Tixpw27H27A\/VZwaJhkxQwI\/AAAAAAAABrQ\/F4nvroonpzQ\/s1600\/5.png\\\"><img src=\\\"http:\/\/1.bp.blogspot.com\/-Tixpw27H27A\/VZwaJhkxQwI\/AAAAAAAABrQ\/F4nvroonpzQ\/s1600\/5.png\\\" \/><\/a>&nbsp;<\/p><p>&nbsp;<\/p><p>kullan\u0131c\u0131 ad\u0131 ve \u015fifre do\u011fru girildikten sonra giren ki\u015fi yetkili ise CRUD paneli ve kullan\u0131c\u0131 listesi sayfas\u0131 ekran\u0131 gelmektedir.<\/p><p><a href=\\\"http:\/\/1.bp.blogspot.com\/-O5jyKDtoOfg\/VZwblUb8GdI\/AAAAAAAABrY\/lT2JXjbiQfE\/s1600\/14.png\\\"><img src=\\\"http:\/\/1.bp.blogspot.com\/-O5jyKDtoOfg\/VZwblUb8GdI\/AAAAAAAABrY\/lT2JXjbiQfE\/s1600\/14.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>&nbsp;<\/p><p>Yap\u0131lan di\u011fer i\u015flemlerde olu\u015fan ekran g&ouml;r&uuml;nt&uuml;leri a\u015fa\u011f\u0131dad\u0131r.<\/p><p><a href=\\\"http:\/\/1.bp.blogspot.com\/-uPzDuPQIbXA\/VZwcCcO9qpI\/AAAAAAAABro\/5dzauJaX5fU\/s1600\/4.png\\\"><img src=\\\"http:\/\/1.bp.blogspot.com\/-uPzDuPQIbXA\/VZwcCcO9qpI\/AAAAAAAABro\/5dzauJaX5fU\/s1600\/4.png\\\" \/><\/a><\/p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br \/>&nbsp;ayn\u0131 isme sahip eklemelere izin verilmez.<br \/>&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-lTi7kWQCQ30\/VZwcBwRazeI\/AAAAAAAABrg\/F8IhPx2r40I\/s1600\/7.png\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-lTi7kWQCQ30\/VZwcBwRazeI\/AAAAAAAABrg\/F8IhPx2r40I\/s1600\/7.png\\\" \/>&nbsp;<\/a><\/p><p>&nbsp;<\/p><p>G&uuml;ncelleme yap\u0131laca\u011f\u0131 zaman sadece kullan\u0131c\u0131 ad\u0131 de\u011fi\u015ftirilip \u015fifre bo\u015f ge&ccedil;ilirse ayn\u0131 \u015fifre ge&ccedil;erlili\u011fini devam ettirmektedir.G&uuml;ncellemeden &ouml;nce<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/3.bp.blogspot.com\/-CG_5udzNgGk\/VZwc1f2RuTI\/AAAAAAAABrw\/ZeyAP1W7eNE\/s1600\/8.png\\\"><img src=\\\"http:\/\/3.bp.blogspot.com\/-CG_5udzNgGk\/VZwc1f2RuTI\/AAAAAAAABrw\/ZeyAP1W7eNE\/s1600\/8.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-ZH-2tHTtP6k\/VZwc1gjgnPI\/AAAAAAAABr8\/iudLD9-oPa4\/s1600\/9.png\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-ZH-2tHTtP6k\/VZwc1gjgnPI\/AAAAAAAABr8\/iudLD9-oPa4\/s1600\/9.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p>g&uuml;ncellendikten sonra ,<br \/>&nbsp;<\/p><p><a href=\\\"http:\/\/4.bp.blogspot.com\/-qaJyR3uIJhM\/VZwfUsg81bI\/AAAAAAAABsE\/N7xHlRjNTKs\/s1600\/10.png\\\"><img src=\\\"http:\/\/4.bp.blogspot.com\/-qaJyR3uIJhM\/VZwfUsg81bI\/AAAAAAAABsE\/N7xHlRjNTKs\/s1600\/10.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/2.bp.blogspot.com\/-3nFnHKuAlkg\/VZwfUzbp7kI\/AAAAAAAABsI\/h7PM-8z48zw\/s1600\/11.png\\\"><img src=\\\"http:\/\/2.bp.blogspot.com\/-3nFnHKuAlkg\/VZwfUzbp7kI\/AAAAAAAABsI\/h7PM-8z48zw\/s1600\/11.png\\\" \/>&nbsp;<\/a><\/p><p>kullan\u0131c\u0131 ad\u0131 ve \u015fifre g&uuml;ncellendi\u011finde ,&nbsp;<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/1.bp.blogspot.com\/-tpDx3FRTQIA\/VZwfpF1I96I\/AAAAAAAABsU\/m3DbqIktnbE\/s1600\/12.png\\\"><img src=\\\"http:\/\/1.bp.blogspot.com\/-tpDx3FRTQIA\/VZwfpF1I96I\/AAAAAAAABsU\/m3DbqIktnbE\/s1600\/12.png\\\" \/>&nbsp;<\/a><\/p><p>silinmek istendi\u011finde<\/p><p>&nbsp;<\/p><p><a href=\\\"http:\/\/2.bp.blogspot.com\/-e9L0nCi8_M8\/VZwfsHFhb9I\/AAAAAAAABsc\/l-PK-80qcwo\/s1600\/6.png\\\"><img src=\\\"http:\/\/2.bp.blogspot.com\/-e9L0nCi8_M8\/VZwfsHFhb9I\/AAAAAAAABsc\/l-PK-80qcwo\/s1600\/6.png\\\" \/><\/a><\/p><p>&nbsp;<\/p><p>&nbsp;<\/p>","date":"1436266363","tags":"java,servletjsp,servlet,jsp,java login crud page , java login page , java crud , java servlet jsp , servlet jsp crud","link":"giris-sayfasi-ve-crud-paneli-servlet-jsp-php"},{"id":"138","title":"indir.com Mobil Uygulama \u00d6d\u00fclleri 2016 Yar\u0131\u015fmas\u0131","content_half":"\u0130ndir.com ekibini d&uuml;zenlemi\u015f oldu\u011fu &lsquo;indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n 3. Turu i&ccedil;in ba\u015fvurular ba\u015flad\u0131!Her ya\u015ftan geli\u015ftiricinin kat\u0131lma f\u0131rsat\u0131 buldu\u011fu Mobil Uygulama Yar\u0131\u015fmas\u0131&rsquo;nda tek \u015fart uygulama veya oyunun 1 Ocak 2016 tarihinden sonra uygulama ma\u011fazas\u0131na y&uuml;klenmi\u015f olmas\u0131.Mobil uyumlu uygulama ve oyunlar\u0131n tan\u0131t\u0131lmas\u0131na destek olmak amac\u0131yla d&uuml;zenlenen indir.com Mobil Uygulama &Ouml;d&uuml;lleri...\\n","content_full":"<p>\u0130ndir.com ekibini d&uuml;zenlemi\u015f oldu\u011fu &lsquo;indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n 3. Turu i&ccedil;in ba\u015fvurular ba\u015flad\u0131!<p>Her ya\u015ftan geli\u015ftiricinin kat\u0131lma f\u0131rsat\u0131 buldu\u011fu Mobil Uygulama Yar\u0131\u015fmas\u0131&rsquo;nda tek \u015fart uygulama veya oyunun 1 Ocak 2016 tarihinden sonra uygulama ma\u011fazas\u0131na y&uuml;klenmi\u015f olmas\u0131.Mobil uyumlu uygulama ve oyunlar\u0131n tan\u0131t\u0131lmas\u0131na destek olmak amac\u0131yla d&uuml;zenlenen indir.com Mobil Uygulama &Ouml;d&uuml;lleri&rsquo; yar\u0131\u015fmas\u0131n\u0131n bu y\u0131l ki program\u0131nda de\u011fi\u015fiklik yap\u0131ld\u0131.<\/p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img alt=\\\"\\\" src=\\\"http:\/\/alicankustemur.github.io\/images\/logo.jpg\\\" \/><\/p><p>\u0130lki 2014 y\u0131l\u0131nda ba\u015flayan ve ard\u0131ndan 2015 y\u0131l\u0131nda devam eden Mobil Uygulama Yar\u0131\u015fmas\u0131&rsquo;n\u0131n 2016 takvimi 2 etkinlik ve 2 yar\u0131\u015fma \u015feklinde d&uuml;zenlendi.<\/p><p>Yar\u0131\u015fmac\u0131lar daha fazla kullan\u0131c\u0131ya ula\u015fmay\u0131 bekleyen mobil uygulamalar\u0131n\u0131 tan\u0131tma f\u0131rsat\u0131 bulabilecekleri gibi ayn\u0131 zamanda muhte\u015fem &ouml;d&uuml;llerin de sahibi olacak.<\/p><p>Yar\u0131\u015fmaya kat\u0131lmaya hak kazanan uygulamalar &ouml;nce j&uuml;ri daha sonra halk oylamas\u0131ndan ge&ccedil;erek ilk 3&rsquo;&uuml; belirlenecek. De\u011ferlendirmelerin ard\u0131ndan dereceye giren uygulama veya oyunlar i&ccedil;in geli\u015ftiricilere harika &ouml;d&uuml;ller takdim edilecek.<\/p><p><strong>Kazananlara Verilecek &Ouml;d&uuml;ller<\/strong><\/p><p><strong>Birinciye<\/strong> 1 hafta Silikon Vadisi tatili (San Francisco), bukalemun.com&#39;dan 5000 TL de\u011ferinde ASO hizmeti,&nbsp;indir.com&#39;dan 5.000TL de\u011ferinde reklam.<\/p><p><strong>\u0130kinciye<\/strong> Antalya&#39;da 1 hafta tatil,&nbsp;indir.com&#39;dan 2.500TL de\u011ferinde uygulaman\u0131n tan\u0131t\u0131m\u0131.<\/p><p>&Uuml;&ccedil;&uuml;nc&uuml;ye Antalya&#39;da 3 g&uuml;n tatil,&nbsp;indir.com&#39;dan 1.000TL de\u011ferinde uygulaman\u0131n tan\u0131t\u0131m\u0131<\/p><p><strong>&Uuml;niversitelilere &Ouml;zel &Ouml;d&uuml;l<\/strong><\/p><p><strong>Mobil Uygulama Yar\u0131\u015fmas\u0131 kapsam\u0131nda &uuml;niversiteler i&ccedil;in ayr\u0131 bir &ouml;d&uuml;llendirme de yap\u0131lacakt\u0131r. &Uuml;niversitelere <\/strong>&ouml;zel d&uuml;zenlenen &ouml;d&uuml;l t&ouml;reninde ise kazanana Silikon Vadisi tatilindeki ihtiya&ccedil;lar\u0131n\u0131 kar\u015f\u0131lamak amac\u0131yla&nbsp;<strong>5000 TL nakit para &ouml;d&uuml;l&uuml;<\/strong>&nbsp;verilecektir.<\/p><p><strong>&lsquo;&Uuml;niversiteler \u0130&ccedil;in<\/strong> <strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong>&#39; Takvimi<\/p><p><strong>Yar\u0131\u015fma Ba\u015flang\u0131c\u0131:<\/strong>&nbsp;1 Ocak 2016<\/p><p><strong>Son Ba\u015fvuru:<\/strong> 30 A\u011fustos 2016<\/p><p><strong>Halk Oylamas\u0131:<\/strong> 5 Eyl&uuml;l 2016<\/p><p><strong>J&uuml;ri De\u011ferlendirmesi:<\/strong> 10 Eyl&uuml;l 2016<\/p><p><strong>Mobil Etkinlik:<\/strong> Ekim Ay\u0131nda<\/p><p>Yar\u0131\u015fman\u0131n &ouml;d&uuml;l t&ouml;reni yar\u0131\u015fmay\u0131 birinci olan\u0131n okudu\u011fu &Uuml;niversite&rsquo;de ger&ccedil;ekle\u015ftirilecek olup t&ouml;rene t&uuml;m &ouml;\u011frenciler kat\u0131labilecektir.<\/p><p><strong>&lsquo;&Uuml;niversiteler \u0130&ccedil;in<\/strong> <strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong>&#39; \u015fartlar ve ba\u015fvuru i&ccedil;in <a href=\\\"http:\/\/www.indir.com\/yarismauni\/\\\">buraya<\/a> t\u0131klayabilirsiniz.<\/p><p><strong>&lsquo;indir.com Mobil Uygulama Yar\u0131\u015fmas\u0131 2016&rsquo;<\/strong> Takvimi<\/p><p><strong>Yar\u0131\u015fma Ba\u015flang\u0131c\u0131<\/strong>: 1 Ocak 2016<\/p><p><strong>Son Ba\u015fvuru:<\/strong> 28 Nisan 2016<\/p><p><strong>Halk Oylamas\u0131:<\/strong> 30 Nisan 2016<\/p><p><strong>J&uuml;ri De\u011ferlendirmesi<\/strong>: 7 May\u0131s 2016<\/p><p><strong>Mobil Etkinlik:<\/strong> 14 May\u0131s 2016&nbsp;<\/p><p>Hi&ccedil;bir ya\u015f s\u0131n\u0131r\u0131 g&ouml;zetmeksizin herkesin kat\u0131labildi\u011fi yar\u0131\u015fman\u0131n &ouml;d&uuml;l t&ouml;reni ise 14 May\u0131s 2016&#39;da&nbsp;<strong>\u0130stanbul Bah&ccedil;e\u015fehir &Uuml;niversitesi<\/strong>&#39;nde ikincisi ger&ccedil;ekle\u015fecek olan Mobil Etkinlik&#39;te yap\u0131lacakt\u0131r.<\/p><p>Yar\u0131\u015fma ba\u015fvuru formu i&ccedil;in<strong> &lsquo;<\/strong><a href=\\\"http:\/\/www.indir.com\/yarisma\/\\\"><strong>indir.com Mobil Uygulama &Ouml;d&uuml;lleri 2016<\/strong><\/a><a name=\\\"_GoBack\\\"><\/a>&#39; adresini ziyaret edebilirsiniz.<\/p>","date":"1454967635","tags":"indir.com , mobil \u00f6d\u00fcl , \u00f6d\u00fcl mobil , indir","link":"indir.com-mobil-uygulama-odulleri-2016-yarismasi"},{"id":"139","title":"Spring Framework ile Java Tabanl\u0131 DataSource Konfigurasyonu","content_half":"Merhaba arkada\u015flar ,bu yazd\u0131ma Spring Framework DataSource konfigurasyonunu XML kullanmadan sadece Java tabanl\u0131 olarak olu\u015fturaca\u011f\u0131z.(Bu &ouml;rnekte MySQL kullan\u0131lacakt\u0131r.) &Ouml;ncelikle .properties dosyam\u0131z\u0131 olu\u015fturuyoruz.&nbsp;driverClassName = com.mysql.jdbc.Driverurl = jdbc:mysql:\/\/localhost:3306\/database-nameusername = rootpassword =&nbsp;&nbsp;Ard\u0131ndan s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturuyoruz.@Configuration@PropertySource(&quot;classpath:\/mysql.p...\\n","content_full":"<p>Merhaba arkada\u015flar ,bu yazd\u0131ma <strong>Spring Framework<\/strong> <strong>DataSource <\/strong>konfigurasyonunu <strong>XML<\/strong> kullanmadan sadece <strong>Java <\/strong>tabanl\u0131 olarak olu\u015fturaca\u011f\u0131z.<strong>(Bu &ouml;rnekte MySQL kullan\u0131lacakt\u0131r.) <\/strong><br \/><br \/>&Ouml;ncelikle <strong>.properties <\/strong>dosyam\u0131z\u0131 olu\u015fturuyoruz.<br \/><br \/>&nbsp;<\/p><sh class=\\\"brush: java\\\">driverClassName = com.mysql.jdbc.Driverurl = jdbc:mysql:\/\/localhost:3306\/database-nameusername = rootpassword =&nbsp;<\/sh><p>&nbsp;<\/p><p><br \/>Ard\u0131ndan s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturuyoruz.<\/p><sh class=\\\"brush: java\\\" highlight=\\\"13\\\" >@Configuration@PropertySource(&quot;classpath:\/mysql.properties&quot;)@ComponentScan(basePackages = &quot;io.github.alicankustemur.blogproject&quot;)public class BeanConfiguration{ @Autowired public Environment  environment; @Bean public SingleConnectionDataSource createDriverManagerDataSourceBean() {  SingleConnectionDataSource driverManager = new SingleConnectionDataSource();  driverManager.setDriverClassName(environment.getProperty(&quot;driverClassName&quot;));  driverManager.setUrl(environment.getProperty(&quot;url&quot;));  driverManager.setUsername(environment.getProperty(&quot;username&quot;));  driverManager.setPassword(environment.getProperty(&quot;password&quot;));  return driverManager; }}<\/sh><p>Bu s\u0131n\u0131f\u0131n bir konfigurasyon i\u015flemi yapt\u0131\u011f\u0131n\u0131 belirtmek i&ccedil;in <strong>@Configuration <\/strong>anotasyonunu s\u0131n\u0131f\u0131n ba\u015f\u0131na ekliyoruz.<br \/><br \/><strong>@PropertySource <\/strong>anotasyonu i&ccedil;erisinde ki <strong>&quot;classpath:\/mysql.properties&quot; <\/strong>de\u011feri <strong>mysql.properties <\/strong>dosyas\u0131n\u0131 classpath i&ccedil;erisinde aray\u0131p <strong>Environment&#39;a<\/strong> enjekte etmektedir.<br \/>Daha sonra <strong>getProperty()&nbsp; <\/strong>methodu ile birlikte properties dosyas\u0131nda ki de\u011fi\u015fken de\u011ferlerine eri\u015fiyoruz.Bu de\u011ferleri de olu\u015fturdu\u011fumuz <strong>SingleConnectionDataSource<\/strong> nesnesine set ediyoruz.<br \/><br \/>Burada <strong>SingleConnectionDataSource <\/strong>kullanmam\u0131n sebebi bu s\u0131n\u0131f ile yap\u0131lan <strong>DataSource<\/strong> tan\u0131mlamalar\u0131 sadece bir <strong>Connection <\/strong>nesnesinin kullan\u0131m\u0131na izin verir.Uygulama her zaman ayn\u0131 <strong>Connection <\/strong>nesnesini kullanarak &ccedil;al\u0131\u015fmay\u0131 s&uuml;rd&uuml;r&uuml;r.<strong>DriverManagerDataSource <\/strong>kullan\u0131larak olu\u015fturulan bir <strong>DataSource <\/strong>tan\u0131mlamas\u0131 her veri taban\u0131 ba\u011flant\u0131 iste\u011fi i&ccedil;in yeni bir <strong>Connection<\/strong> nesnesi olu\u015fturacakt\u0131r.<br \/><br \/><strong>@ComponentScan <\/strong>anotasyonu ile Spring&#39;e gerekli s\u0131n\u0131flar\u0131 classpath i&ccedil;erisinde aramas\u0131 gerekti\u011fini belirtiyoruz.<br \/><br \/>Burada <strong>createDriverManagerDataSourceBean() <\/strong>methodu &uuml;zerinde ki <strong>@Bean <\/strong>anotasyonu methodu bean haline getirip <strong>DAO <\/strong>i\u015flemleri i&ccedil;in <strong>Repository <\/strong>s\u0131n\u0131flar\u0131 i&ccedil;erisinde <strong>DataSource <\/strong>tan\u0131mlamalar\u0131na <strong>@Autowired <\/strong>anotasyonu ile otomatik olarak enjekte edece\u011fiz.<br \/>&nbsp;<\/p><p>A\u015fa\u011f\u0131da bununla ilgili k\u0131sa bir &ouml;rnek verilmi\u015ftir.<\/p><sh class=\\\"brush: java\\\">@Componentpublic class JdbcRepositoryImpl implements Repository{  @Autowired private DataSource dataSource;  @Override public void save(User user) {  PreparedStatement preparedStatement = null;  try  {   Connection connection = dataSource.getConnection();   preparedStatement = connection     .prepareStatement(&quot;INSERT INTO user (id,name) VALUES (?,?)&quot;);   preparedStatement.setLong(1, user.getId());   preparedStatement.setString(2, user.getName());   preparedStatement.executeUpdate();   preparedStatement.close();  }  catch (Exception e)  {  } } }<\/sh><p>Olu\u015fturdu\u011fumuz konfigurasyon s\u0131n\u0131f\u0131n\u0131 <strong>ApplicationContext <\/strong>&uuml;zerinden &ccedil;a\u011f\u0131rabilmek i&ccedil;in <strong>AnnotationConfigApplicationContext <\/strong>nesnesi ile olu\u015fturup constructor de\u011ferine ilgili konfigurasyon s\u0131n\u0131f\u0131n\u0131 belirtmek gerekmektedir.<br \/><br \/>A\u015fa\u011f\u0131da bununla ilgili k\u0131sa bir &ouml;rnek verilmi\u015ftir.<\/p><sh class=\\\"brush: java\\\" highlight=\\\"7\\\" >public class Main{ public static void main(String[] args) throws SQLException {  ApplicationContext applicationContext = new AnnotationConfigApplicationContext(BeanConfiguration.class);  Repository repository = applicationContext.getBean(Repository.class);  User user = new User(&quot;1&quot;,&quot;Ali Can Ku\u015ftemur&quot;);  repository.save(user); }}<\/sh>","date":"1460987141","tags":"java , spring, datasource","link":"spring-framework-ile-java-tabanli-datasource-konfigurasyonu"},{"id":"140","title":"PrimeFaces Ba\u015flarken","content_half":"Nedir bu PrimeFaces ?PrimeFaces opsiyonel ara&ccedil;lar d\u0131\u015f\u0131nda hi&ccedil;bir ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan s\u0131f\u0131r konfigurasyonlu bir JSF framework&#39;&uuml;dur.\u015eu anda en son olarak 5.3 s&uuml;r&uuml;m&uuml; bulunmaktad\u0131r.Ben burada yazd\u0131\u011f\u0131m t&uuml;m PrimeFaces makalelerinde projeleri&nbsp;Maven olarak olu\u015fturaca\u011f\u0131m.Bir Maven Projesi olu\u015fturduktan sonra ilgili dependecy&#39;i pom.xml&nbsp;dosyam\u0131za ekliyoruz.  org.primefaces  primefaces  5.3xhtml dosyalar\u0131m...\\n","content_full":"<p>Nedir bu <strong>PrimeFaces <\/strong>?<strong>PrimeFaces<\/strong> opsiyonel ara&ccedil;lar d\u0131\u015f\u0131nda hi&ccedil;bir ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan s\u0131f\u0131r konfigurasyonlu bir <strong>JSF <\/strong>framework&#39;&uuml;dur.\u015eu anda en son olarak <strong>5.3 <\/strong>s&uuml;r&uuml;m&uuml; bulunmaktad\u0131r.Ben burada yazd\u0131\u011f\u0131m t&uuml;m <strong>PrimeFaces <\/strong>makalelerinde projeleri&nbsp;<strong>Maven<\/strong> olarak olu\u015fturaca\u011f\u0131m.Bir <strong>Maven Projesi<\/strong> olu\u015fturduktan sonra ilgili <strong>dependecy&#39;i pom.xml&nbsp;<\/strong>dosyam\u0131za ekliyoruz.<\/p><sh class=\\\"brush: xml\\\"><dependency>  <groupId>org.primefaces<\/groupId>  <artifactId>primefaces<\/artifactId>  <version>5.3<\/version><\/dependency><\/sh><p><strong>xhtml <\/strong>dosyalar\u0131m\u0131zda kullanabilmemiz i&ccedil;in <strong>html tag&#39;i <\/strong>i&ccedil;erisine bu <strong>namespace&#39;i <\/strong>eklemek zorunday\u0131z.<\/p><sh class=\\\"brush: xml\\\">xmlns:p=\\\"http:\/\/primefaces.org\/ui\\\"<\/sh><p>a\u015fa\u011f\u0131daki <strong>test <\/strong>sayfas\u0131n\u0131 olu\u015fturup ba\u015fl\u0131yoruz.<\/p><sh class=\\\"brush: xml\\\"  >&lthtml xmlns=\\\"http:\/\/www.w3.org\/1999\/xhtml\\\"  xmlns:h=\\\"http:\/\/java.sun.com\/jsf\/html\\\"  xmlns:f=\\\"http:\/\/java.sun.com\/jsf\/core\\\"  xmlns:ui=\\\"http:\/\/java.sun.com\/jsf\/facelets\\\"  xmlns:p=\\\"http:\/\/primefaces.org\/ui\\\"><h:head><\/h:head><h:body>  <h:form>    <p:spinner\/>  <\/h:form><\/h:body>&lt\/html&gt<\/sh><p>proje'ye <b>GitHub<\/b> \u00fczerinden eri\u015febilirsiniz. <b>Link :<\/b> <a href=\\\"https:\/\/github.com\/alicankustemur\/PrimeFacesExamples\/tree\/master\/Beggin-Started\\\"><i class=\\\"fa fa-github-square fa-2x\\\"><\/i><\/a> <\/p>","date":"1462867082","tags":"java , primefaces , jsf","link":"primefaces-baslarken"},{"id":"141","title":"PrimeFaces Komponentler","content_half":"Merhaba arkada\u015flar bir &ouml;nceki&nbsp;PrimeFaces&nbsp;yaz\u0131ma bu link&nbsp;&uuml;zerinden eri\u015febilirsiniz.PrimeFaces ile ilgili orjinal d&ouml;k&uuml;mantasyona bu link &uuml;zerinden eri\u015febilirsiniz , zaten bende &ouml;rnekleri bu&nbsp;d&ouml;k&uuml;mantasyon &uuml;zerinden olu\u015fturmaktay\u0131m.&nbsp;Input : AutoComplete &Ouml;rne\u011fi :&nbsp;@ManagedBean(name = &quot;autoComplete&quot;)public class AutoComplete{\\tprivate String text;\\tpublic List complete(String que...\\n","content_full":"<p>Merhaba arkada\u015flar bir &ouml;nceki&nbsp;<strong>PrimeFaces<\/strong>&nbsp;yaz\u0131ma bu <a href=\\\"http:\/\/alicankustemur.github.io\/post_page.html?p=140\/primefaces-baslarken\\\">link<\/a>&nbsp;&uuml;zerinden eri\u015febilirsiniz.<strong>PrimeFaces<\/strong> ile ilgili orjinal d&ouml;k&uuml;mantasyona bu <a href=\\\"http:\/\/primefaces.org\/documentation\\\">link <\/a>&uuml;zerinden eri\u015febilirsiniz , zaten bende &ouml;rnekleri bu&nbsp;d&ouml;k&uuml;mantasyon &uuml;zerinden olu\u015fturmaktay\u0131m.<\/p><p>&nbsp;<\/p><p><strong>Input : AutoComplete &Ouml;rne\u011fi :<\/strong><\/p><p>&nbsp;<\/p><pre class=\\\"java\\\">@ManagedBean(name = &quot;autoComplete&quot;)public class AutoComplete{\\tprivate String text;\\tpublic List complete(String query)\\t{\\t\\tList results = new ArrayList();\\t\\tfor (int i = 0; i &lt; 10; i++)\\t\\t{\\t\\t\\tresults.add(query + i);\\t\\t}\\t\\treturn results;\\t}\\tpublic List completeNew(String query)\\t{\\t\\tList someTexts = new ArrayList();\\t\\tsomeTexts.add(&quot;Java&quot;);\\t\\tsomeTexts.add(&quot;Java Enterprise Edition&quot;);\\t\\tsomeTexts.add(&quot;Primefaces&quot;);\\t\\tsomeTexts.add(&quot;JSF&quot;);\\t\\treturn someTexts;\\t}\\tpublic String getText()\\t{\\t\\treturn text;\\t}\\tpublic void setText(String text)\\t{\\t\\tthis.text = text;\\t}}<\/pre><p><strong>ManagedBean&#39;<\/strong>imizi olu\u015fturduk ,<\/p><p>&nbsp;<\/p><sh class=\\\"brush: xml\\\"><!DOCTYPE html PUBLIC \\\"-\/\/W3C\/\/DTD XHTML 1.0 Transitional\/\/EN\\\" \\\"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd\\\"><h:html xmlns=\\\"http:\/\/www.w3.org\/1999\/xhtml\\\"\\txmlns:h=\\\"http:\/\/java.sun.com\/jsf\/html\\\"\\txmlns:f=\\\"http:\/\/java.sun.com\/jsf\/core\\\"\\txmlns:ui=\\\"http:\/\/java.sun.com\/jsf\/facelets\\\"\\txmlns:p=\\\"http:\/\/primefaces.org\/ui\\\"><h:head><\/h:head><h:body>\\t<h:form>\\t\\t\\t\\t<p:panelGrid columns=\\\"2\\\" >\\t\\t\\t<p:outputLabel value=\\\"Random\\\" \/>\\t\\t\\t<p:autoComplete value=\\\"#{autoComplete.text}\\\" completeMethod=\\\"#{autoComplete.complete}\\\" \/>\\t\\t\\t\\t\\t\\t<p:outputLabel value=\\\"Some Text\\\" \/>\\t\\t\\t<p:autoComplete value=\\\"#{autoComplete.text}\\\" completeMethod=\\\"#{autoComplete.completeNew}\\\" \/>\\t\\t<\/p:panelGrid>\\t\\t\\t<\/h:form><\/h:body><\/h:html><\/sh><img src=\\\"http:\/\/alicankustemur.github.io\/images\/PrimeFacesExamples\/autocomplete.jpg\\\" class=\\\"content-img\\\" \/>Burada <b>completeMethod<\/b> de\u011feri <b>autoComplete.complete<\/b> methodu olan komponent girilen her de\u011fer i\u00e7in random  10 adet de\u011fer sonucu vericektir.<b>completeMethod<\/b> de\u011feri <b>autoComplete.completeNew<\/b> olan komponent ise girilen de\u011feri <b>completeNew<\/b> i\u00e7erisinde arayacakt\u0131r.<sh class=\\\"brush: java\\\">@ManagedBean(name = \\\"carBean\\\")public class CarBean{\\tprivate List<Car>\\tcars;\\tprivate Car\\t\\t\\tselected;\\tpublic Car getSelected()\\t{\\t\\treturn selected;\\t}\\tpublic void setSelected(Car selected)\\t{\\t\\tthis.selected = selected;\\t}\\tpublic CarBean()\\t{\\t\\tcars = new ArrayList<Car>();\\t\\tfor (int i = 0; i < 10; i++)\\t\\t{\\t\\t\\tcars.add(new Car(\\\"myModel\\\" + i, 2005, \\\"ManufacturerX\\\", \\\"blue\\\"));\\t\\t}\\t}\\tpublic List<Car> getCars()\\t{\\t\\treturn cars;\\t}\\tpublic void setCars(List<Car> cars)\\t{\\t\\tthis.cars = cars;\\t}}<\/sh>ard\u0131ndan <b>xhtml<\/b> dosyam\u0131z\u0131 olu\u015fturuyoruz.<sh class=\\\"brush: xml\\\"><!DOCTYPE html PUBLIC \\\"-\/\/W3C\/\/DTD XHTML 1.0 Transitional\/\/EN\\\" \\\"http:\/\/www.w3.org\/TR\/xhtml1\/DTD\/xhtml1-transitional.dtd\\\"><h:html xmlns=\\\"http:\/\/www.w3.org\/1999\/xhtml\\\" xmlns:h=\\\"http:\/\/java.sun.com\/jsf\/html\\\" xmlns:f=\\\"http:\/\/java.sun.com\/jsf\/core\\\"\\txmlns:ui=\\\"http:\/\/java.sun.com\/jsf\/facelets\\\" xmlns:p=\\\"http:\/\/primefaces.org\/ui\\\"><h:head><\/h:head><h:body>\\t<p:outputLabel value=\\\"Carousel Slider Example\\\"><\/p:outputLabel>\\t<p:carousel value=\\\"#{carBean.cars}\\\" var=\\\"car\\\" autoPlayInterval=\\\"3000\\\" numVisible=\\\"3\\\" responsive=\\\"true\\\">\\t\\t<p:graphicImage value=\\\"resources\/images\/car\/#{car.manufacturer}.jpg\\\" \/>\\t\\t<h:outputText value=\\\"Model: #{car.model} \\\" \/>\\t\\t<h:outputText value=\\\"Year: #{car.year} \\\" \/>\\t\\t<h:outputText value=\\\"Color: #{car.color} \\\" \/>\\t<\/p:carousel>\\t<p:outputLabel value=\\\"Carousel Tab Example\\\"><\/p:outputLabel>\\t<p:carousel rows=\\\"1\\\" itemStyle=\\\"height:200px;width:600px;\\\" responsive=\\\"true\\\">\\t\\t<p:tab title=\\\"Car I\\\">\\t\\t\\t<h:panelGrid columns=\\\"2\\\" cellpadding=\\\"10\\\">\\t\\t\\t\\t<p:graphicImage value=\\\"resources\/images\/car\/ManufacturerX.jpg\\\" \/>\\t\\t\\t\\t<h:outputText\\t\\t\\t\\t\\tvalue=\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas eu pretium erat. Fusce imperdiet quam id luctus tempor. Aenean sed turpis varius, venenatis enim id, tristique massa. Ut vel dui sit amet nunc cursus ultricies. Proin condimentum magna eget est elementum tristique. Integer condimentum elit mauris, vel malesuada neque suscipit sit amet. Morbi lectus nibh, interdum sodales posuere eu, scelerisque sit amet nisl.\\\" \/>\\t\\t\\t<\/h:panelGrid>\\t\\t<\/p:tab>\\t\\t<p:tab title=\\\"Car II\\\">\\t\\t\\t<h:panelGrid columns=\\\"2\\\" cellpadding=\\\"10\\\">\\t\\t\\t\\t<p:graphicImage value=\\\"resources\/images\/car\/ManufacturerX.jpg\\\" \/>\\t\\t\\t\\t<h:outputText\\t\\t\\t\\t\\tvalue=\\\"Etiam velit nunc, ornare non lectus facilisis, sagittis eleifend tellus. Curabitur posuere congue varius. Nunc quis efficitur erat. Nunc euismod lorem at elit fermentum, sodales tempus felis pretium. Etiam eleifend, tortor eget luctus dapibus, magna orci interdum ligula, nec pretium est lectus sit amet ligula. Aliquam nec justo dolor. Phasellus ullamcorper rhoncus leo. Aenean ac nulla vel mi eleifend euismod non nec eros. Vivamus eget lectus in arcu varius euismod. In fringilla aliquam molestie.\\\" \/>\\t\\t\\t<\/h:panelGrid>\\t\\t<\/p:tab>\\t\\t<p:tab title=\\\"Car III\\\">\\t\\t\\t<h:panelGrid columns=\\\"2\\\" cellpadding=\\\"10\\\">\\t\\t\\t\\t<p:graphicImage value=\\\"resources\/images\/car\/ManufacturerX.jpg\\\" \/>\\t\\t\\t\\t<h:outputText\\t\\t\\t\\t\\tvalue=\\\"Integer gravida eleifend arcu congue accumsan. Quisque vitae nunc feugiat, venenatis augue vel, dignissim nisl. Mauris tempus ex sit amet nunc tempus, ut dapibus eros maximus. Curabitur ac felis erat. Suspendisse potenti. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vestibulum eget ligula ut eros faucibus tincidunt ut convallis nulla. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc lacus nibh, molestie quis sagittis ac, varius ut erat. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\\\" \/>\\t\\t\\t<\/h:panelGrid>\\t\\t<\/p:tab>\\t<\/p:carousel>\\t\\t<p:outputLabel value=\\\"Carousel Selected Example\\\" \/>\\t<h:form id=\\\"form\\\">\\t\\t<p:carousel value=\\\"#{carBean.cars}\\\" var=\\\"car\\\" itemStyle=\\\"width:200px\\\">\\t\\t\\t<p:graphicImage value=\\\"resources\/images\/car\/#{car.manufacturer}.jpg\\\" \/>\\t\\t\\t<p:commandLink update=\\\":form\\\" oncomplete=\\\"PF('dlg').show()\\\">\\t\\t\\t\\t<h:outputText value=\\\"Model: #{car.model}\\\" \/>\\t\\t\\t\\t<f:setPropertyActionListener value=\\\"#{car}\\\" target=\\\"#{carBean.selected}\\\" \/>\\t\\t\\t<\/p:commandLink>\\t\\t<\/p:carousel>\\t\\t<p:dialog widgetVar=\\\"dlg\\\">\\t\\t\\t<p:panelGrid columns=\\\"2\\\" columnClasses=\\\"label,value\\\">\\t\\t\\t\\t<f:facet name=\\\"header\\\">\\t\\t\\t\\t\\t<p:graphicImage id=\\\"detail1\\\" value=\\\"resources\/images\/car\/#{carBean.selected.manufacturer}.jpg\\\" \/>\\t\\t\\t\\t<\/f:facet>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h:outputText value=\\\"Model\\\" style=\\\"font-weight:bold\\\" \/>\\t\\t\\t\\t<h:outputText id=\\\"detail2\\\" value=\\\"#{carBean.selected.model}\\\" \/>\\t\\t\\t\\t<h:outputText value=\\\"Year\\\" style=\\\"font-weight:bold\\\" \/>\\t\\t\\t\\t<h:outputText id=\\\"detail3\\\" value=\\\"#{carBean.selected.year}\\\" \/>\\t\\t\\t\\t<h:outputText value=\\\"Color\\\" style=\\\"font-weight:bold\\\"\/>\\t\\t\\t\\t<h:outputText id=\\\"detail4\\\" value=\\\"#{carBean.selected.color}\\\" \/>\\t\\t\\t<\/p:panelGrid>\\t\\t<\/p:dialog>\\t<\/h:form><\/h:body><\/h:html><\/sh><img src=\\\"http:\/\/alicankustemur.github.io\/images\/PrimeFacesExamples\/carousel.jpg\\\" class=\\\"content-img\\\" \/>Burada 3 adet <b>carousel<\/b> bulunmaktad\u0131r , ilki 3 saniyede bir tetiklenen bir <b>slider<\/b>'a ikincisi <b>tab<\/b> \u015feklinde en sonuncu ise se\u00e7ilen de\u011feri bir <b>dialog<\/b> i\u00e7erisinde g\u00f6stermektedir.<p>proje'ye <b>GitHub<\/b> \u00fczerinden eri\u015febilirsiniz. <b>Link :<\/b> <a href=\\\"https:\/\/github.com\/alicankustemur\/PrimeFacesExamples\/tree\/master\/Components\\\"><i class=\\\"fa fa-github-square fa-2x\\\"><\/i><\/a> <\/p>","date":"1462899809","tags":"java , primefaces , jsf","link":"primefaces-komponentler"},{"id":"142","title":"PrimeFaces dataTable \u00d6rne\u011fi","content_half":"Merhaba arkada\u015flar bu yaz\u0131mda basit bir dataTable&nbsp;&ouml;rne\u011fi olu\u015fturaca\u011f\u0131z.Yine daha &ouml;nceki PrimeFaces&nbsp;yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m Car&nbsp;yap\u0131s\u0131 &uuml;zerinden devam etmekteyim.Burada dataTable&nbsp;value&#39; attribute&#39;&uuml;ne verece\u011fimiz bir list veya array&#39;e&nbsp;tekil olarak eri\u015febilmek i&ccedil;in var&nbsp;attribute&#39;&uuml;ne bir de\u011fer tan\u0131ml\u0131yoruz ve bu de\u011fer &uuml;zerinden verdi\u011fimiz yap\u0131n\u0131n&nbsp;model&#39;ine eri\u015febiliyoruz.Sa\u011f tara...\\n","content_full":"<p>Merhaba arkada\u015flar bu yaz\u0131mda basit bir <strong>dataTable&nbsp;<\/strong>&ouml;rne\u011fi olu\u015fturaca\u011f\u0131z.\\nYine daha &ouml;nceki <strong>PrimeFaces<\/strong>&nbsp;yaz\u0131lar\u0131mda kulland\u0131\u011f\u0131m <strong>Car<\/strong>&nbsp;yap\u0131s\u0131 &uuml;zerinden devam etmekteyim.Burada <strong>dataTable<\/strong>&nbsp;<strong>value&#39; attribute<\/strong>&#39;&uuml;ne verece\u011fimiz bir <strong>list<\/strong> veya <strong>array&#39;e&nbsp;<\/strong>tekil olarak eri\u015febilmek i&ccedil;in <strong>var&nbsp;attribute&#39;<\/strong>&uuml;ne bir de\u011fer tan\u0131ml\u0131yoruz ve bu de\u011fer &uuml;zerinden verdi\u011fimiz yap\u0131n\u0131n&nbsp;<strong>model&#39;ine <\/strong>eri\u015febiliyoruz.<\/p>\\n\\n<p>Sa\u011f tarafta bulunan <strong>commandButton&nbsp;<\/strong>se&ccedil;ti\u011fimiz sat\u0131rda ki veriyi&nbsp;bir <strong>dialog <\/strong>i&ccedil;erisinde g&ouml;stermektedir.<\/p>\\n\\n<img src=\\\"http:\/\/alicankustemur.github.io\/images\/PrimeFacesExamples\/datatable.jpg\\\" alt=\\\"\\\" class=\\\"content-img\\\">\\n\\t\\t  \\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 1 - Car.java\\npublic class Car\\n{\\n\\tprivate String\\tmodel;\\n\\tprivate int\\t\\tyear;\\n\\tprivate String\\tmanufacturer;\\n\\tprivate String\\tcolor;\\n\\n\\tpublic Car(String model, int year, String manufacturer, String color)\\n\\t{\\n\\t\\tsuper();\\n\\t\\tthis.model = model;\\n\\t\\tthis.year = year;\\n\\t\\tthis.manufacturer = manufacturer;\\n\\t\\tthis.color = color;\\n\\t}\\n    \/\/ getters and setters\\n}\\n<\/sh>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 2 - CarBean.java\\n@ManagedBean(name = \\\"carBean\\\")\\npublic class CarBean\\n{\\n\\n\\tprivate List<Car>\\tcars;\\n\\n\\tprivate Car\\t\\t\\tselected;\\n\\n\\tpublic CarBean()\\n\\t{\\n\\t\\tcars = new ArrayList<Car>();\\n\\t\\tfor (int i = 0; i < 10; i++)\\n\\t\\t{\\n\\t\\t\\tcars.add(new Car(\\\"myModel\\\" + i, 2005, \\\"ManufacturerX\\\", \\\"blue\\\"));\\n\\t\\t}\\n\\t}\\n    \/\/ getters and setters\\n}\\n<\/sh>\\n\\n<sh class=\\\"brush: xml\\\">\\n\/\/ Kod 3 - datatable.xhtml\\n<h:html xmlns=\\\"http:\/\/www.w3.org\/1999\/xhtml\\\" xmlns:h=\\\"http:\/\/java.sun.com\/jsf\/html\\\"\\n\\txmlns:f=\\\"http:\/\/java.sun.com\/jsf\/core\\\" xmlns:ui=\\\"http:\/\/java.sun.com\/jsf\/facelets\\\" xmlns:p=\\\"http:\/\/primefaces.org\/ui\\\">\\n\\n<h:head>\\n<\/h:head>\\n<h:body>\\n\\n\\t<h:form id=\\\"form\\\">\\n\\t\\t<p:dataTable var=\\\"car\\\" value=\\\"#{carBean.cars}\\\"  >\\n\\n\\t\\t\\t<p:column headerText=\\\"Model\\\">\\n\\t\\t\\t\\t<h:outputText value=\\\"#{car.model}\\\" \/>\\n\\t\\t\\t<\/p:column>\\n\\n\\t\\t\\t<p:column headerText=\\\"Year\\\">\\n\\t\\t\\t\\t<h:outputText value=\\\"#{car.year}\\\" \/>\\n\\t\\t\\t<\/p:column>\\n\\n\\t\\t\\t<p:column headerText=\\\"Color\\\">\\n\\t\\t\\t\\t<h:outputText value=\\\"#{car.color}\\\" \/>\\n\\t\\t\\t<\/p:column>\\n\\t\\t\\t<p:column style=\\\"width:32px;text-align: center\\\">\\n\\t\\t\\t\\t<p:commandButton update=\\\":form\\\" oncomplete=\\\"PF('carDialog').show()\\\" icon=\\\"ui-icon-search\\\" title=\\\"View\\\">\\n\\t\\t\\t\\t\\t<f:setPropertyActionListener value=\\\"#{car}\\\" target=\\\"#{carBean.selected}\\\" \/>\\n\\t\\t\\t\\t<\/p:commandButton>\\n\\t\\t\\t<\/p:column>\\n\\t\\t<\/p:dataTable>\\n\\n\\t\\t<p:dialog header=\\\"Selected Car\\\" widgetVar=\\\"carDialog\\\" modal=\\\"true\\\" showEffect=\\\"fade\\\" hideEffect=\\\"fade\\\"\\n\\t\\t\\tresizable=\\\"false\\\" width=\\\"200\\\">\\n\\t\\t\\t<p:outputPanel id=\\\"multiCarDetail\\\" style=\\\"text-align:center;\\\">\\n\\t\\t\\t\\t<ui:repeat value=\\\"#{carBean.selected}\\\" var=\\\"car\\\">\\n\\t\\t\\t\\t\\t<h:outputText value=\\\"#{car.model} - #{car.year}\\\" style=\\\"display:block\\\" \/>\\n\\t\\t\\t\\t<\/ui:repeat>\\n\\t\\t\\t<\/p:outputPanel>\\n\\t\\t<\/p:dialog>\\n\\n\\t<\/h:form>\\n\\n<\/h:body>\\n<\/h:html>\\n<\/sh>\\n\\n","date":"1462953400","tags":"java , primefaces , jsf , datatable","link":"primefaces-datatable-ornegi"},{"id":"143","title":"Spring MVC , MongoDB ve Bootstrap 3 ile Ki\u015fisel Rehber Projesi ","content_half":"Merhaba arkada\u015flar bu yaz\u0131mda Spring MVC&nbsp;yap\u0131s\u0131n\u0131 kullanarak MongoDB&nbsp;veritaban\u0131 uygulamas\u0131 ile birlikte sunum katman\u0131nda Bootstrap 3&nbsp;kullanarak bir Ki\u015fisel Rehber Projesi&nbsp;olu\u015fturaca\u011f\u0131z.Ayr\u0131ca entegrasyon ve Mockito Testing Framework&nbsp;ile baz\u0131 test s\u0131n\u0131flar\u0131n\u0131 da olu\u015fturaca\u011f\u0131z.( Test taraf\u0131n\u0131 ilerleyen zamanlar da yazaca\u011f\u0131m. )Bu uygulama sadece temel veritaban\u0131 i\u015flemlerini i&ccedil;ermektedir. ( ekleme , getirme , g&uuml;ncelleme ve silme )...\\n","content_full":"<p>Merhaba arkada\u015flar bu yaz\u0131mda <strong>Spring MVC&nbsp;<\/strong>yap\u0131s\u0131n\u0131 kullanarak <strong>MongoDB<\/strong>&nbsp;veritaban\u0131 uygulamas\u0131 ile birlikte sunum katman\u0131nda <strong>Bootstrap 3&nbsp;<\/strong>kullanarak bir <strong>Ki\u015fisel Rehber Projesi&nbsp;<\/strong>olu\u015fturaca\u011f\u0131z.Ayr\u0131ca entegrasyon ve <strong>Mockito Testing Framework<\/strong>&nbsp;ile baz\u0131 test s\u0131n\u0131flar\u0131n\u0131 da olu\u015fturaca\u011f\u0131z.( Test taraf\u0131n\u0131 ilerleyen zamanlar da yazaca\u011f\u0131m. )<\/p>\\n\\n<p>Bu uygulama sadece temel veritaban\u0131 i\u015flemlerini i&ccedil;ermektedir. ( ekleme , getirme , g&uuml;ncelleme ve silme )<\/p>\\n\\n<p>&Ouml;ncelikle bir <strong>Maven Projesi <\/strong>olu\u015fturuyoruz ve <strong>pom.xml <\/strong>dosyam\u0131za <strong>dependecy<\/strong>&#39;lerimizi ekliyoruz.(<strong>dependecy<\/strong> listesi uzun oldu\u011fu i&ccedil;in direk <strong>pom.xml<\/strong> dosyas\u0131na <a href=\\\"https:\/\/github.com\/alicankustemur\/PersonalContact\/blob\/master\/pom.xml\\\">buradan<\/a> eri\u015febilirsiniz.)<\/p>\\n\\n<p>Projeyi anotasyonlar &uuml;zerinden ger&ccedil;ekle\u015ftirece\u011fimiz i&ccedil;in <strong>Spring <\/strong>konfigurasyonu d\u0131\u015f\u0131nda di\u011fer t&uuml;m i\u015flemlerde anotasyon kullanabilmek i&ccedil;in <strong>servlet-context.xml&nbsp;<\/strong>dosyas\u0131na projenin temel package adresini verip <strong>Spring&#39;in <\/strong>ilgili s\u0131n\u0131flar\u0131 bizim i&ccedil;in bulup ilgili yerlere enjekte etmesini sa\u011flayaca\u011f\u0131z.<\/p>\\n\\n<p><strong>MongoDB &nbsp;key-value<\/strong> \u015feklinde &ccedil;al\u0131\u015fan , &nbsp;d&ouml;k&uuml;man tabanl\u0131 bir <strong>NoSQL&nbsp;<\/strong>veritaban\u0131 uygulamas\u0131d\u0131r.&nbsp;Bildi\u011fimiz <strong>SQL&#39;deki&nbsp;<\/strong>tablonun kar\u015f\u0131l\u0131\u011f\u0131 burada <strong>Collection <\/strong>olarak tan\u0131mlanmaktad\u0131r.&nbsp;<\/p>\\n\\n<img src=\\\"https:\/\/camo.githubusercontent.com\/36bfe2dbcf8c0eaefddf631f6ae32fcb551ac752\/687474703a2f2f616c6963616e6b757374656d75722e6769746875622e696f2f696d616765732f506572736f6e616c436f6e7461637453637265656e73686f6f742d312e6a7067\\\" alt=\\\"\\\" class=\\\"content-img\\\">\\n\\n<img src=\\\"https:\/\/camo.githubusercontent.com\/358bc2faf29dc7112cdf5f208ba2cc57a475d53d\/687474703a2f2f616c6963616e6b757374656d75722e6769746875622e696f2f696d616765732f506572736f6e616c436f6e7461637453637265656e73686f6f742d322e6a7067\\\" alt=\\\"\\\" class=\\\"content-img\\\">\\n\\n<p><strong>Spring MVC&nbsp;<\/strong>i&ccedil;in gerekli <strong>xml <\/strong>konfigurasyonlar\u0131n\u0131 yapt\u0131ktan sonra <strong>MongoDB <\/strong>i&ccedil;in konfigurasyon s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturuyoruz.<\/p>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 1 - MongoConfiguration.java\\n@Configuration\\n@EnableMongoRepositories(basePackages = \\\"com.tr.t2.personalcontact.dao\\\")\\npublic class MongoConfiguration extends AbstractMongoConfiguration\\n{\\n\\n\\t@Override\\n\\tprotected String getDatabaseName()\\n\\t{\\n\\t\\treturn \\\"test\\\";\\n\\t}\\n\\n\\t@Override\\n\\tpublic Mongo mongo() throws Exception\\n\\t{\\n\\t\\treturn new MongoClient(new ServerAddress(\\\"localhost\\\", 27017));\\n\\t}\\n\\n}\\n<\/sh>\\n\\n<p><strong>@Configuration<\/strong> anotasyonu ile bu s\u0131n\u0131f\u0131n bir konfigurasyon dosyas\u0131 oldu\u011funu belirtip , <strong>@EnableMongoRepositories&nbsp;<\/strong>anotasyonunun <strong>basePackages&nbsp;attribute&#39;&uuml;ne repository&#39;nin <\/strong>bulundu\u011fu <strong>package <\/strong>adresini<strong>&nbsp;<\/strong>veriyoruz.<\/p>\\n\\n<p>S\u0131n\u0131f\u0131&nbsp;<strong>AbstractMongoConfiguration <\/strong>s\u0131n\u0131f\u0131&nbsp;ile<strong> <\/strong>geni\u015fleterek gerekli methodlar\u0131 override edip kullanabilece\u011fiz.<\/p>\\n\\n<p><strong>getDatabaseName()&nbsp;<\/strong>methodu ile veritaban\u0131 ismini d&ouml;nd&uuml;r&uuml;yoruz.Ard\u0131ndan <strong>Mongo <\/strong>s\u0131n\u0131f\u0131n\u0131n <strong>mongo()<\/strong> methodu ile yeni bir <strong>MongoDB<\/strong> ba\u011flant\u0131s\u0131 olu\u015fturup <strong>ServerAdress <\/strong>ilk&nbsp;constructor&#39;&uuml;ne localhost&#39;a &ccedil;al\u0131\u015faca\u011f\u0131n\u0131 ikincisine ise <strong>MongoDB&#39;nin <\/strong>default portunu giriyoruz.&nbsp;<\/p>\\n\\n<p>\u015eimdi&nbsp;<strong>POJO<\/strong> s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturabiliriz.<\/p>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 2 - Person.java\\n@Document(collection = \\\"person\\\")\\npublic class Person\\n{\\n\\n\\t@Id\\n\\tprivate String\\tid;\\n\\n\\tprivate String\\tname;\\n\\tprivate String\\tsurname;\\n\\t\\n\\t\/\/ getters and setters\\n}\\n<\/sh>\\n\\n<p><strong>@Document <\/strong>anotasyonu i&ccedil;erisinde <strong>collection attribute&#39;&uuml;nde <\/strong>ki <strong>&quot;person&quot; <\/strong>de\u011feri&nbsp;<strong>MongoDB <\/strong>i&ccedil;erisindeki <strong>person collection&#39;a<\/strong> denk gelmektedir.<\/p>\\n\\n<p>Ard\u0131ndan <strong>DAO&#39;muzu <\/strong>olu\u015fturuyoruz <strong>@Repository <\/strong>anotasyonu ile bunun bir repository oldu\u011funu belirtiyoruz&nbsp;<strong>PersonRepository&nbsp;<\/strong>interface&#39;ini <strong>MongoRepository <\/strong>ile geni\u015fleterek <strong>collection <\/strong>de\u011ferinin ilkini kullanaca\u011f\u0131m\u0131z <strong>POJO <\/strong>s\u0131n\u0131f\u0131n\u0131 di\u011ferine <strong>String <\/strong>tipini belirtiyoruz.<\/p>\\n\\n<p>Zaten geni\u015fletti\u011fimiz s\u0131n\u0131f i&ccedil;erisinde ki temel i\u015flemleri kullanca\u011f\u0131m\u0131z i&ccedil;in herhangi bir yeni tan\u0131mlama yapmam\u0131za gerek yok.<\/p>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 3 - PersonRepository.java\\n@Repository\\npublic interface PersonRepository extends MongoRepository&ltPerson, String&gt\\n{\\n\\n}\\t\\n<\/sh>\\n\\n<p>\u015eimdi servis k\u0131sm\u0131n\u0131 yazmaya ba\u015flayabiliriz.&Ouml;ncelikle <strong>PersonService<\/strong> <strong>interface&#39;imizi <\/strong>olu\u015fturuyoruz.Ard\u0131ndan implementasyon s\u0131n\u0131f\u0131n\u0131 olu\u015fturuyoruz.<strong>@Service&nbsp;<\/strong>anotasyonu ile bunun bir servis oldu\u011funu belirtiyoruz.Veritaban\u0131 i\u015flemlerini yapabilmemiz i&ccedil;in bir repository nesnesine ihtiyac\u0131m\u0131z var , bunun i&ccedil;in bir&nbsp;<strong>PersonRepository&nbsp;<\/strong>&ouml;rne\u011fi olu\u015fturup <strong>@Autowired&nbsp;<\/strong>anotasyonu ile nesnemizi <strong>Spring&#39;in<\/strong> bizim i&ccedil;in enjekte etmesini istiyoruz.Yapaca\u011f\u0131m\u0131z temel methodlar\u0131 <strong>repository<\/strong> nesnesi &uuml;zerinden ger&ccedil;ekle\u015ftirip olu\u015fturuyoruz.<\/p>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 4 - PersonService.java\\npublic interface PersonService\\n{\\n\\n\\tpublic void addPerson(Person person);\\n\\n\\tpublic Person getPerson(String id);\\n\\n\\tpublic List&ltPerson&gt getAllPersons();\\n\\n\\tpublic void deletePerson(String id);\\n\\n}\\n<\/sh>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 5 - PersonServiceImpl.java\\n@Service\\npublic class PersonServiceImpl implements PersonService\\n{\\n\\n\\t@Autowired\\n\\tprivate PersonRepository repository;\\n\\n\\tpublic PersonRepository getRepository()\\n\\t{\\n\\t\\treturn repository;\\n\\t}\\n\\n\\tpublic void setRepository(PersonRepository repository)\\n\\t{\\n\\t\\tthis.repository = repository;\\n\\t}\\n\\n\\t@Override\\n\\tpublic void addPerson(Person person)\\n\\t{\\n\\t\\trepository.save(person);\\n\\t}\\n\\n\\t@Override\\n\\tpublic Person getPerson(String id)\\n\\t{\\n\\t\\treturn repository.findOne(id);\\n\\t}\\n\\n\\t@Override\\n\\tpublic List&ltPerson&gt getAllPersons()\\n\\t{\\n\\t\\treturn repository.findAll();\\n\\t}\\n\\n\\t@Override\\n\\tpublic void deletePerson(String id)\\n\\t{\\n\\t\\trepository.delete(id);\\n\\t}\\n\\n}\\t\\n<\/sh>\\n\\n<p>Art\u0131k <strong>Controller<\/strong>&nbsp;s\u0131n\u0131f\u0131m\u0131z\u0131 olu\u015fturabiliriz , <strong>@Controller&nbsp;<\/strong>anotasyonu ile bunun bir controller oldu\u011funu belirtiyoruz.\u0130\u015flemlerimizi yapabilmemiz i&ccedil;in bir servis nesnesine ihtiyac\u0131m\u0131z var &nbsp;, bunun i&ccedil;in bir&nbsp;<strong>PersonService&nbsp;<\/strong>&ouml;rne\u011fi olu\u015fturup&nbsp;<strong>@Autowired&nbsp;<\/strong>anotasyonu ile nesnemizi <strong>Spring&#39;in<\/strong> bizim i&ccedil;in enjekte etmesini istiyoruz.Buradaki <strong>@RequestMapping(&quot;\/&quot;)<\/strong>&nbsp;anotasyonu i&ccedil;erisinde ki <strong>&quot;\/&quot;<\/strong> de\u011feri sayfaya yap\u0131lan her istekde bu methodun &ccedil;a\u011fr\u0131laca\u011f\u0131 anlam\u0131na gelmektedir.&nbsp;<strong>ModelAndView <\/strong>bizim nesne ile aray&uuml;z yap\u0131s\u0131n\u0131 ili\u015fkilendirmemizi sa\u011flayan bir s\u0131n\u0131f. <strong>index()&nbsp;<\/strong>methodu i&ccedil;erisine bir <strong>modelAndView <\/strong>nesnesi ile servis katman\u0131ndan getirdi\u011fimiz ki\u015fileri <strong>addObject&nbsp;<\/strong>methodu sayesinde aray&uuml;zde&nbsp;<strong>&quot;persons&quot;<\/strong>&nbsp;olarak eri\u015febiliyoruz. <strong>&quot;person&quot;<\/strong>&nbsp;de\u011feri ise sayfa her g&uuml;ncellendi\u011finde <strong>Ki\u015fi Ekle<\/strong>&nbsp;b&ouml;l&uuml;m&uuml;nde yeni bir ki\u015fi olu\u015fturmaktad\u0131r.<strong>setViewName&nbsp;<\/strong>ile bir view tan\u0131mlay\u0131p <strong>modelAndView <\/strong>nesnesini d&ouml;nd&uuml;r&uuml;yoruz.<\/p>\\n\\n<p><strong>addPerson() <\/strong>methodu ki\u015fi ekleme i\u015flemi yapmaktad\u0131r.<strong>addPerson() <\/strong>&nbsp;methodu &uuml;zerindeki <strong>@RequestMapping<\/strong>&nbsp;anotasyonunda ise <strong>addPerson <\/strong>&uuml;zerinden gelen <strong>POST<\/strong>&nbsp;methodundaki istekleri kar\u015f\u0131lamaktad\u0131r.<strong>Constructor <\/strong>i&ccedil;erisindeki <strong>@ModelAttribute&nbsp;<\/strong>aray&uuml;z&#39;den gelen <strong>input <\/strong>de\u011ferlerinin <strong>Person <\/strong>tipinde bir nesneye i\u015faret etti\u011fini belirtmektedir.Servis nesnesi ile ki\u015fi ekleme i\u015flemini yapt\u0131ktan sonra <strong>&quot;redirect:\/&quot;<\/strong>&nbsp;i\u015flemi ile anasayfaya y&ouml;nlendirmesini sa\u011fl\u0131yoruz.<\/p>\\n\\n<p><strong>deletePerson() <\/strong>methodu ki\u015fi silme i\u015flemi yapmaktad\u0131r.<strong>deletePerson() <\/strong>&nbsp;methodu &uuml;zerindeki <strong>@RequestMapping<\/strong>&nbsp;anotasyonunda ise <strong>deletePerson&nbsp;<\/strong>&uuml;zerinden gelen <strong>GET&nbsp;<\/strong>methodundaki istekleri kar\u015f\u0131lamaktad\u0131r.( <strong>@RequestMapping<\/strong>&nbsp;anotasyonu i&ccedil;erisinde method tan\u0131mlamas\u0131 yap\u0131lmaz ise <strong>default method attribute<\/strong> de\u011feri <strong>RequestMethod.GET <\/strong>&#39;tir ve i&ccedil;erisindeki <strong>String<\/strong> de\u011fer value de\u011ferine denk gelmektedir.&nbsp;)<strong>Constructor <\/strong>i&ccedil;erisindeki <strong>@RequestParam&nbsp;GET&#39;ten<\/strong> gelen <strong>id&nbsp;<\/strong>de\u011ferini al\u0131r.Servis nesnesi ile ki\u015fi silme&nbsp;i\u015flemini yapt\u0131ktan sonra <strong>&quot;redirect:\/&quot;<\/strong>&nbsp;i\u015flemi ile anasayfaya y&ouml;nlendirmesini sa\u011fl\u0131yoruz.<\/p>\\n\\n<p><strong>updatePerson() <\/strong>methodu ki\u015fi g&uuml;ncelleme&nbsp;i\u015flemi yapmaktad\u0131r.<strong>updatePerson() <\/strong>&nbsp;methodu &uuml;zerindeki <strong>@RequestMapping<\/strong>&nbsp;anotasyonunda ise <strong>updatePerson&nbsp;<\/strong>&uuml;zerinden gelen <strong>GET&nbsp;<\/strong>methodundaki istekleri kar\u015f\u0131lamaktad\u0131r.<strong>Constructor <\/strong>i&ccedil;erisindeki <strong>ModelAndView&nbsp;<\/strong>ve <strong>@RequestParam<\/strong>&nbsp;ile g&uuml;ncellenecek olan ki\u015finin bilgilerini getirip <strong>Ki\u015fi Ekle&nbsp;<\/strong>b&ouml;l&uuml;m&uuml;n&uuml; <strong>Ki\u015fi G&uuml;ncelle<\/strong>&nbsp;olarak de\u011fi\u015ftirmekteyiz.<strong>Kaydet <\/strong>butonuna bas\u0131ld\u0131\u011f\u0131nda yeni bir g&uuml;ncelleme i\u015flemi yerine yine <strong>addPerson() <\/strong>methodu &uuml;zerinden sa\u011flamaktay\u0131z.Ard\u0131ndan yeni ki\u015fi listesini tekrar getirip listeyi g&uuml;ncelliyoruz.<\/p>\\n\\n<sh class=\\\"brush: java\\\">\\n\/\/ Kod 6 - PersonController.java\\n@Controller\\npublic class PersonController\\n{\\n\\n\\t@Autowired\\n\\tprivate PersonService service;\\n\\n\\t@RequestMapping(\\\"\/\\\")\\n\\tpublic ModelAndView index(ModelAndView modelAndView)\\n\\t{\\n\\t\\tList&ltPerson&gt persons = service.getAllPersons();\\n\\t\\tmodelAndView.addObject(\\\"persons\\\", persons);\\n\\t\\tmodelAndView.addObject(\\\"person\\\", new Person());\\n\\t\\tmodelAndView.setViewName(\\\"index\\\");\\n\\n\\t\\treturn modelAndView;\\n\\t}\\n\\n\\t@RequestMapping(value = \\\"addPerson\\\", method = RequestMethod.POST)\\n\\tpublic String addPerson(@ModelAttribute Person person)\\n\\t{\\n\\n\\t\\tservice.addPerson(person);\\n\\n\\t\\treturn \\\"redirect:\/\\\";\\n\\t}\\n\\n\\t@RequestMapping(\\\"deletePerson\\\")\\n\\tpublic String deletePerson(@RequestParam String id)\\n\\t{\\n\\t\\tservice.deletePerson(id);\\n\\t\\treturn \\\"redirect:\/\\\";\\n\\t}\\n\\n\\t@RequestMapping(\\\"updatePerson\\\")\\n\\tpublic ModelAndView updatePerson(ModelAndView modelAndView, @RequestParam String id)\\n\\t{\\n\\n\\t\\tList&ltPerson&gt persons = service.getAllPersons();\\n\\t\\tmodelAndView.addObject(\\\"persons\\\", persons);\\n\\t\\tmodelAndView.addObject(\\\"person\\\", service.getPerson(id));\\n\\t\\tmodelAndView.setViewName(\\\"index\\\");\\n\\n\\t\\treturn modelAndView;\\n\\t}\\n\\n}\\n<\/sh>\\n\\n<p>proje'ye <b>GitHub<\/b> \u00fczerinden eri\u015febilirsiniz. <b><\/p>\\n<p>MongoDB Versiyon Link :<\/b> <a href=\\\"https:\/\/github.com\/alicankustemur\/PersonalContact\\\"><i class=\\\"fa fa-github-square fa-2x\\\"><\/i><\/a><\/p>\\n<p>Redis Versiyon Link :<\/b> <a href=\\\"https:\/\/github.com\/alicankustemur\/PersonalContactRedis\\\"><i class=\\\"fa fa-github-square fa-2x\\\"><\/i><\/a><\/p>","date":"1462972079","tags":"java , springmvc , mvc , spring mvc , mongo , mongodb , bootstrap , spring","link":"spring-mvc-mongodb-ve-bootstrap-3-ile-kisisel-rehber-projesi"},{"id":"144","title":"Eclipse Java Kod Renklendirme","content_half":"Merhaba arkada\u015flar bu yaz\u0131mda Eclipse &uuml;zerinde Java kodunun daha okunulabilir bir hale gelmesi i&ccedil;in renklendirme i\u015flemi yapaca\u011f\u0131z.Resimde g&ouml;rd&uuml;\u011f&uuml;n&uuml;z b&ouml;l&uuml;m&uuml; Eclipse i&ccedil;erisinde Window &gt; Prefences &gt; Editor &gt; Syntax Coloring path&#39;ini takip ederek a&ccedil;\u0131yoruz.Dikkat : Bu de\u011fi\u015fiklikleri zaten varolan ayarlar\u0131n &uuml;zerine uygulay\u0131n , (&ouml;rn : baz\u0131 k\u0131s\u0131mlarda sadece renk ayar\u0131 de\u011fi\u015fmekte , enable zat...\\n","content_full":"<p>Merhaba arkada\u015flar bu yaz\u0131mda <strong>Eclipse <\/strong>&uuml;zerinde <strong>Java <\/strong>kodunun daha okunulabilir bir hale gelmesi i&ccedil;in renklendirme i\u015flemi yapaca\u011f\u0131z.<\/p><img class=\\\"content-img\\\" src=\\\"http:\/\/alicankustemur.github.io\/images\/Eclipse\/syntax_coloring_default.jpg\\\"><\/img><p>Resimde g&ouml;rd&uuml;\u011f&uuml;n&uuml;z b&ouml;l&uuml;m&uuml; <strong>Eclipse<\/strong> i&ccedil;erisinde <strong>Window &gt; Prefences &gt; Editor &gt; Syntax Coloring<\/strong> path&#39;ini takip ederek a&ccedil;\u0131yoruz.<\/p><p><strong>Dikkat : Bu de\u011fi\u015fiklikleri zaten varolan ayarlar\u0131n &uuml;zerine uygulay\u0131n , (&ouml;rn : baz\u0131 k\u0131s\u0131mlarda sadece renk ayar\u0131 de\u011fi\u015fmekte , enable zaten aktif durumda)<\/strong><\/p><p><strong><em>D&uuml;zenlenmi\u015f hali ;<\/em><\/strong><\/p><img class=\\\"content-img\\\" src=\\\"http:\/\/alicankustemur.github.io\/images\/Eclipse\/syntax_coloring_changed.jpg\\\"><\/img><p>Renklendirmenin yukar\u0131daki gibi olmas\u0131 i&ccedil;in <strong>Element <\/strong>k\u0131sm\u0131nda ki &ouml;\u011felerin a\u015fa\u011f\u0131daki ayarlarda olmas\u0131 gerekmektedir.<\/p><p><strong>Abstract method invocations<\/strong> -&nbsp; Enable , <em>Italic<\/em> ,&nbsp; ( Color = Black )<\/p><p><strong>Annotations<\/strong> - Color = Red : 255 , Green : 0 , Blue : 255<\/p><p><strong>Classes <\/strong>- Enable , <strong>Bold<\/strong> , ( Color = Red : 0 , Green : 106 , Blue : 67 )<\/p><p><strong>Deprecated members <\/strong>- Color = Red : 128 , Green : 128 , Blue : 128<\/p><p><strong>Enum <\/strong>- Enable , Underline , ( Color = Red : 0 , Green : 106 , Blue : 67 )<\/p><p><strong>Fields <\/strong>- <strong>Bold<\/strong><\/p><p><strong>Inherited method invocations <\/strong>- Enable , ( Color : Black )<\/p><p><strong>Interface -<\/strong> Enable , <em>Italic<\/em> , ( Color = Red : 0 , Green : 106 , Blue : 67 )<\/p><p><strong>Local variable declarations<\/strong> -&nbsp; Enable , <strong>Bold <\/strong>, ( Color = Red : 255 , Green : 126 , Blue : 64 )<\/p><p><strong>Local variables<\/strong> -&nbsp; Color = Red : 255 , Green : 126 , Blue : 64<\/p><p><strong>Method declarations<\/strong> - Enable , <strong>Bold <\/strong>, ( Color = Black )<\/p><p><strong>Methods<\/strong> - Enable<strong> <\/strong>, <strong>Bold <\/strong>, ( Color = Black )<\/p><p><strong>Parameter variables<\/strong> - Enable , <strong>Bold <\/strong>, ( Color = Red : 128 , Green : 128 , Blue : 0 )<\/p><p><strong>Static fields<\/strong> - <strong>Bold<\/strong><\/p><p><strong>Static final fields<\/strong> - Color = Red<\/p><p><strong>Static method invocations<\/strong> - Color = Red : 255 , Green : 126 , Blue : 64<\/p><p><strong>Type arguments<\/strong> - <strong>Enable <\/strong>, ( Color = Red : 128 , Green : 0 , Blue : 0 )<\/p><p><strong>Type variables<\/strong> - Enable , <strong>Bold<\/strong> , ( Color = Red : 128 , Green : 0 , Blue : 0&nbsp; )<\/p>","date":"1463578982","tags":"eclipse , java , color , syntax coloring , java syntax coloring , eclipse syntax coloring , eclipse java syntax coloring","link":"eclipse-java-kod-renklendirme"},{"id":"145","title":"Modern Bir Ailede \u0130ftar Sofras\u0131","content_half":"- Ak\u015fama bize buyur da iftar\u0131 bi\u015flikte yapal\u0131m, dedi.- Oru&ccedil; tutmuyorum, dedim.- Can\u0131m hangimiz tutuyoruz sanki?...&Ccedil;oktan beri iftara davet eden bu zat\u0131n evine bir ak\u015fam gittim. \u0130ftara daha yar\u0131m saat vard\u0131.Sofra kurulmu\u015f ama, iftar sofras\u0131ndan &ccedil;ok &ccedil;ilingir sofras\u0131na benziyor. Buzlu rak\u0131, meyvalar, salatalar, tur\u015fular, k\u0131zartmalar... Evin c\u0131va gibi, g&uuml;zel, hareketli bir de k\u0131z\u0131 var. Kar\u015f\u0131ma oturdu. Bacak bacak &uuml;st&uuml;ne att?...\\n","content_full":"<p>- Ak\u015fama bize buyur da iftar\u0131 bi\u015flikte yapal\u0131m, dedi.<\/p><p>- Oru&ccedil; tutmuyorum, dedim.<\/p><p>- Can\u0131m hangimiz tutuyoruz sanki?...<\/p><p>&Ccedil;oktan beri iftara davet eden bu zat\u0131n evine bir ak\u015fam gittim. \u0130ftara daha yar\u0131m saat vard\u0131.Sofra kurulmu\u015f ama, iftar sofras\u0131ndan &ccedil;ok &ccedil;ilingir sofras\u0131na benziyor. Buzlu rak\u0131, meyvalar, salatalar, tur\u015fular, k\u0131zartmalar... Evin c\u0131va gibi, g&uuml;zel, hareketli bir de k\u0131z\u0131 var. Kar\u015f\u0131ma oturdu. Bacak bacak &uuml;st&uuml;ne att\u0131 ama, &ouml;yle bir at\u0131\u015f ki, ba\u015f\u0131m\u0131 ondan yana &ccedil;evirmeye utan\u0131yorum. Elde de\u011fil, ne kadar da bakmayay\u0131m desen, insan\u0131n g&ouml;z&uuml; kay\u0131 kay\u0131veriyor. Durmadan konu\u015fan gen&ccedil; k\u0131za, g&ouml;zlerim tavanda, laf olsun diye sordum:<\/p><p>- Hangi okula gidiyorsunuz?<\/p><p>Annesi,<\/p><p>- A&ccedil;\u0131lmas\u0131n diye orta&#39;dan sonra okula g&ouml;ndermedik, dedi.<\/p><p>Babas\u0131 kadehime rak\u0131 dolduracakt\u0131 ki k\u0131z, kaba etine i\u011fne bat\u0131r\u0131lm\u0131\u015f gibi ba\u011f\u0131rd\u0131.<\/p><p>- Aaa, vallahi olmaz, daha iftar topu patlamad\u0131.<\/p><p>- Oru&ccedil;lu musunuz? diye sordum.<\/p><p>- Yoo, fakat &ouml;rf ve adetlerimize son derece ba\u011fl\u0131y\u0131md\u0131r, dedi.<\/p><p>Babas\u0131na, anas\u0131na, danas\u0131na a\u011f\u0131z a&ccedil;t\u0131rmayan &ouml;ten k\u0131z.<\/p><p>- Kitap sever misiniz? diye bana sorunca, damdar d&uuml;\u015fer de\u011fil de, damdan i\u015fer gibi sorulan bu soruya \u015fa\u015f\u0131rd\u0131m.<\/p><p>- Severim, dedim.<\/p><p>Yayl\u0131 gibi f\u0131rlad\u0131, etajerden getirdi\u011fi kitab\u0131 uzatt\u0131:<\/p><p>- Bu kitab\u0131 okudunuz mu?<\/p><p>Kitaba bakt\u0131m : &lt;&lt; Tenas&uuml;l Hayat\u0131m\u0131z &gt;&gt;<\/p><p>Babas\u0131na,<\/p><p>- Ma\u015fallah k\u0131z\u0131n\u0131z okumaya merakl\u0131, dedim.<\/p><p>Annesi at\u0131ld\u0131 :<\/p><p>- A&ccedil;\u0131lmas\u0131n diye okula g&ouml;ndermedik ama, &ouml;zel &ouml;\u011fretmen tuttuk, evde okuttuk.<\/p><p>Top patlad\u0131, iftar sofras\u0131na oturduk. K\u0131z hepimizin kadehini doldurup, ilk kadehi kendisi kald\u0131rd\u0131 :<\/p><p>- Ho\u015f geldiniz!<\/p><p>Biz kadehleri yuvarlarken, annesi,<\/p><p>- A&ccedil;\u0131lmas\u0131n diye k\u0131z\u0131m\u0131z\u0131 dizimizin dibinden ay\u0131rmad\u0131m, dedi.<\/p><p>- Meze almaz m\u0131s\u0131n\u0131z?<\/p><p>- K\u0131z\u0131m a&ccedil;\u0131lmas\u0131n diye...<\/p><p>Babas\u0131 devam ediyor :<\/p><p>- D\u0131\u015far\u0131ya pek g&ouml;ndermeyiz...<\/p><p>- Beyefendi, k\u0131z\u0131m\u0131n...<\/p><p>Babas\u0131 :<\/p><p>- A&ccedil;\u0131lmamas\u0131 i&ccedil;in, yabanc\u0131larla...<\/p><p>Annesi :<\/p><p>- Gezip tozmas\u0131na m&uuml;saade edemem...<\/p><p>Babas\u0131 da, anas\u0131 da, k\u0131z\u0131 da i&ccedil;kiyi fazla ka&ccedil;\u0131rm\u0131\u015flar, c\u0131v\u0131m\u0131\u015flard\u0131.<\/p><p>- Buyurun Allaa\u015fk\u0131na, Mezeden de al\u0131n, iftarl\u0131kt\u0131r.<\/p><p>K\u0131z, pikaba bir plak koydu; oynak, g&uuml;r&uuml;lt&uuml;l&uuml; bir dans havas\u0131...<\/p><p>Annesi,<\/p><p>- A&ccedil;\u0131lmas\u0131n diye d\u0131\u015farda dansetmesine m&uuml;saade etmiyoruz da... dedi.<\/p><p>Babas\u0131 da ald\u0131 s&ouml;z&uuml; :<\/p><p>- Katiyyen m&uuml;saade etmeyiz, hele big&uuml;n g&ouml;reyim, hele bir... Namus ba\u015fka \u015feye benzemez birader. \u0130&ccedil;miyorsun yahu...<\/p><p>Babas\u0131, koltu\u011fa uzand\u0131, horlamaya ba\u015flad\u0131.<\/p><p>Vakit ge&ccedil;mi\u015fti. Ben evden ayr\u0131l\u0131rken adam\u0131 zorla uyand\u0131rd\u0131lar.<\/p><p>- Yar\u0131n ak\u015fam yine iftara...<\/p><p>Annesi,<\/p><p>- Hadi k\u0131z\u0131m, misafiri ge&ccedil;ir dura\u011fa kadar g&ouml;t&uuml;r&uuml;ver, diyordu.<\/p><p>Bana d&ouml;nd&uuml; :<\/p><p>- Yabanc\u0131larla m&uuml;saade etmem, ama sizi yabanc\u0131 saym\u0131yoruz.<\/p><p>Babas\u0131 sarho\u015f peltekli\u011fiyle,<\/p><p>- Ne demek, diye ba\u011f\u0131rd\u0131, hele bir yabanc\u0131 ile... Alimallah...<\/p><p>Bana s&ouml;z s\u0131ras\u0131 vermiyorlard\u0131, bir f\u0131rsat\u0131n\u0131 bulup,<\/p><p>- Affedersiniz, dedim, bundan fazla a&ccedil;\u0131lmayal\u0131m, ben yaln\u0131z giderim, yolu biliyorum. Alla\u0131smarlad\u0131k.<\/p><hr \/><p><strong>Aziz Nesin - Geriye Kalan<\/strong><\/p><p><strong>Modern Bir Ailede \u0130ftar Sofras\u0131<\/strong><\/p><p><strong>Mart 1950<\/strong><\/p><p><strong>Markopa\u015fa.<\/strong><\/p>","date":"1466116400","tags":"ak\u015fam ne\u015friat\u0131 , aziz nesin , modern bir ailede iftar sofras\u0131","link":"modern-bir-ailede-iftar-sofrasi"},{"id":"146","title":"Nas\u0131l \u0130ntihar Ettim?","content_half":"   Gazetelerin intihar haberlerini yazmas\u0131 yasaksa da (*), bu kendi intihar haberim oldu\u011fundan, pek ciddi olan resmi makamlar\u0131n, benim gibi ciddi olmayan bir adam\u0131n intihar\u0131na memnun bile olacaklar\u0131n\u0131 umar\u0131m.  (*) Bu hikayenin yaz\u0131ld\u0131\u011f\u0131 d&ouml;nemde intihar olaylar\u0131n\u0131n gazetelerde yay\u0131nlanmas\u0131 yurtta\u015flar\u0131 intihara &ouml;zendirme ve k\u0131\u015fk\u0131rtma say\u0131larak yasaklanm\u0131\u015ft\u0131r.   Bir zamanlar mortimari hastal\u0131\u011f\u0131na tutulmu\u015ftum.\u0130kidebir i&ccedi...\\n","content_full":"<p>&nbsp;&nbsp; Gazetelerin intihar haberlerini yazmas\u0131 yasaksa da <strong>(*)<\/strong>, bu kendi intihar haberim oldu\u011fundan, pek ciddi olan resmi makamlar\u0131n, benim gibi ciddi olmayan bir adam\u0131n intihar\u0131na memnun bile olacaklar\u0131n\u0131 umar\u0131m.<\/p><hr \/><p>&nbsp; <strong>(*) <\/strong><em>Bu hikayenin yaz\u0131ld\u0131\u011f\u0131 d&ouml;nemde intihar olaylar\u0131n\u0131n gazetelerde yay\u0131nlanmas\u0131 yurtta\u015flar\u0131 intihara &ouml;zendirme ve k\u0131\u015fk\u0131rtma say\u0131larak yasaklanm\u0131\u015ft\u0131r.<\/em><\/p><p>&nbsp;&nbsp; Bir zamanlar mortimari hastal\u0131\u011f\u0131na tutulmu\u015ftum.\u0130kidebir i&ccedil;imden intihar etmek arzusu geliyordu.<\/p><p>&nbsp;&nbsp; \u0130lk intihar\u0131m \u015f&ouml;yle oldu.<\/p><p>&lt;&lt; Hey a\u015f\u0131k! &gt;&gt; dedim, kendikendime, &lt;&lt; &ouml;l&uuml;mlerden &ouml;l&uuml;m be\u011fen bakal\u0131m. Tabanca m\u0131, b\u0131cak m\u0131, k\u0131rk kat\u0131r m\u0131, k\u0131rk sat\u0131r m\u0131? &gt;&gt;<\/p><p>&nbsp;&nbsp; &Ouml;l&uuml;m &ouml;l&uuml;m bir &ouml;l&uuml;m... Bari \u015fahane olsun diye,eski saray insanlar\u0131 gibi zehirle intihara karar verdim. M&uuml;thi\u015f bir zehir ald\u0131m. Odama kapand\u0131m. Uzun, romantik bir mektup yazd\u0131m.<\/p><p>Sonuna da, &lt;&lt; Elveda ey fani d&uuml;nya, elveda ey kahpe felek, elveda ey sadrazam... &gt;&gt; dedikten sonra, bir kadeh zehiri yuvarlad\u0131m ve yere uzand\u0131m. \u015eimdi damarlar\u0131m b&uuml;z&uuml;lecek, \u015fimdi elim aya\u011f\u0131m &ccedil;arp\u0131lacak, \u015fimdi kan\u0131m &ccedil;ekilecek diye bekledim. Bi\u015fey olmay\u0131nca, bir kadeh zehir daha i&ccedil;tim, bir daha. Yine bi\u015fey yok. Sonradan &ouml;\u011frendim ki, me\u011fer bu memlekette yaln\u0131z s&uuml;tler sulu, ya\u011flar kar\u0131\u015f\u0131k, peynirler hiyleli de\u011fil, zehirler bile bozukmu\u015f. Hani, insan \u015f&ouml;yle d&ouml;rt ba\u015f\u0131 mamur bir intihar bile edemiyor.<\/p><p>&nbsp;&nbsp; Akl\u0131ma bi\u015fey koydum mu mutlaka yapar\u0131m. Bu sefer de beynime bir kur\u015fun s\u0131k\u0131p &ouml;lmeye karar verdim. T&uuml;fe\u011fi \u015faka\u011f\u0131ma dayad\u0131m, teti\u011fe as\u0131ld\u0131m.<\/p><p>&nbsp;&nbsp; - P\u0131ff!<\/p><p>&nbsp;&nbsp; Bir daha as\u0131ld\u0131m,<\/p><p>&nbsp;&nbsp; - Peff,<\/p><p>&nbsp;&nbsp; Bir daha...<\/p><p>&nbsp;&nbsp; - P&uuml;ff!...<\/p><p>&nbsp;&nbsp; Me\u011fer bu t&uuml;fek yedek par&ccedil;as\u0131z Amerikan yard\u0131m\u0131ndanm\u0131\u015f. Kur\u015funla intihar\u0131n da imkans\u0131zl\u0131\u011f\u0131n\u0131 anlay\u0131nca, garanti bir &ouml;l&uuml;m diye havagaz\u0131 ile &ouml;l&uuml;m&uuml; d&uuml;\u015f&uuml;nd&uuml;m. Malum ya, anlatt\u0131klar\u0131na g&ouml;re, havagaz\u0131 ile zehirlenme pek \u015fairane olurmu\u015f. Havagaz\u0131 muslu\u011funu sonuna kadar a&ccedil;t\u0131m. Odan\u0131n b&uuml;t&uuml;n deliklerini de t\u0131kam\u0131\u015ft\u0131m. Koltu\u011fa uzand\u0131m. Cesedimi ciddi bir bi&ccedil;imde bulmalar\u0131 i&ccedil;in kendime en uygun pozu verdim ve Azrail&#39;i beklemeye ba\u015flad\u0131m.<\/p><p>&nbsp;&nbsp; &Ouml;\u011fle oldu, ak\u015fam oldu, birt&uuml;rl&uuml; can veremiyordum. Ak\u015fam &uuml;zeri bir arkada\u015f\u0131m odaya girdi.<\/p><p>&nbsp;&nbsp; - Girme! diye ba\u011f\u0131rd\u0131m.<\/p><p>&nbsp;&nbsp; - Ne var?<\/p><p>&nbsp;&nbsp; - Ben &ouml;l&uuml;yorum.<\/p><p>&nbsp;&nbsp; - Sen &ouml;lm&uuml;yorsun, &ccedil;\u0131ld\u0131r\u0131yorsun, dedi.<\/p><p>&nbsp;&nbsp; Arkada\u015f\u0131ma projemi anlat\u0131nca, bir kahkaha att\u0131,<\/p><p>&nbsp;&nbsp; - Az salak de\u011filsin dedi, havagaz\u0131 muslu\u011fundan gaz de\u011fil, yaln\u0131z hava &ccedil;\u0131kar.<\/p><p>&nbsp;&nbsp; Sonra bana sordu:<\/p><p>&nbsp;&nbsp; - Sen ger&ccedil;ekten intihar etmek istiyor musun?<\/p><p>&nbsp;&nbsp; - Elbette, dedim.<\/p><p>&nbsp;&nbsp; - Sana bir dostluk etmek isterim, dedi.<\/p><p>&nbsp;&nbsp; B\u0131&ccedil;ak&ccedil;\u0131lara gidip bir Bursa b\u0131&ccedil;a\u011f\u0131 almam\u0131, sonra karn\u0131ma dayay\u0131p kahram Japonlar gibi, barsaklar\u0131m\u0131 avucuma d&ouml;kmemi tavsiye etti. Arkada\u015f\u0131m\u0131n dostlu\u011funa te\u015fekk&uuml;r ederek, gidip hemen t\u0131\u011f gibi bir Bursa b\u0131&ccedil;a\u011f\u0131 ald\u0131m.<\/p><p>Do\u011frusu &lt;&lt; cart! &gt;&gt; diye b\u0131&ccedil;akla insan\u0131n barsaklar\u0131n\u0131 de\u015fmesi ho\u015f, bi\u015fey de\u011fil.Cesedin muayenesi i&ccedil;in morga kald\u0131r\u0131l\u0131p, barsaklarda besin ad\u0131na bi\u015fey bulamayan doktorlara mah&ccedil;up olmak da caba. Ne olursa olsun, b\u0131&ccedil;ak koynumda sevine sevine eve gelirken iki polis &uuml;st&uuml;me at\u0131ld\u0131. Polislere kendimi anlatma\u011fa ba\u015flad\u0131m.<\/p><p>&nbsp;&nbsp; - Efendiler, durun, bir dakika beni dinleyin. Ben muntazaman vergimi veririm. H&uuml;k&uuml;metimiz hakk\u0131nda ufac\u0131k bir \u015fey s&ouml;ylemem. Benim gibi namuslu...<\/p><p>&nbsp;&nbsp; Onlar laf\u0131m\u0131 yar\u0131da kestiler. Koynumda ki b\u0131&ccedil;a\u011f\u0131 bulup,<\/p><p>&nbsp;&nbsp; - Bu ne? diye ba\u011f\u0131rd\u0131lar.<\/p><p>&nbsp;&nbsp; Me\u011fer cinayetleri &ouml;nlemek i&ccedil;in arama, tarama ekiplerinden birine &ccedil;atm\u0131\u015f\u0131m.<\/p><p>&nbsp;&nbsp; - Hey Allah\u0131m, dedim, al\u0131nan isabetli kararlar sayesinde, \u015fu memlekette ya\u015fayam\u0131yoruz, ama &ouml;lemiyoruz da... Hep b&ouml;yle &ccedil;eke &ccedil;ekecek miyiz?<\/p><p>&nbsp;&nbsp; Azim ve irade sahibi adam dedi\u011fin benim gibi olmal\u0131. Bir kez &ouml;lece\u011fim dedim mi &ouml;l&uuml;r&uuml;m. Bakkaldan kal\u0131n bir urgan ald\u0131m, bir kal\u0131pda sabun. \u0130pi iyice sabunlad\u0131m. Tavandaki halkaya ipi ba\u011flad\u0131m. Vergi dairesine girer gibi, boynumu ya\u011fl\u0131 ilmi\u011fe ge&ccedil;irip, alt\u0131mdan sandalyeyi ittim. Daha bir kez bile sallanmaya kalmadan, pat diye yere d&uuml;\u015ft&uuml;m, Me\u011fer ipler de &ccedil;&uuml;r&uuml;km&uuml;\u015f ve sa\u011flam\u0131n\u0131 bulman\u0131n da imkan\u0131 yokmu\u015f. Bakkal,<\/p><p>&nbsp;&nbsp; - Sa\u011flam mal olsa satarlar m\u0131? dedi.<\/p><p>&nbsp;&nbsp; \u0130yice anlad\u0131m ki, art\u0131k &ouml;lmenin de olana\u011f\u0131 yok. Bari ya\u015fayay\u0131m, dedim. Bilirsiniz ya, ya\u015famak, &ouml;nce mideden ba\u015flar. Ben de past\u0131rmal\u0131 yumurta yedim. Bir de konserve yalanc\u0131 dolma. &Uuml;st&uuml;ne bir makarna.<\/p><p>&nbsp;&nbsp; Sonra bir pastac\u0131ya girdim. D&ouml;rt be\u015f pasta yedim. Pastac\u0131ya bir gazete sat\u0131c\u0131s\u0131 girdi,<\/p><p>&nbsp;&nbsp; - Onalt\u0131 sahife... Okumazsan da paket yap! diye ba\u011f\u0131r\u0131yordu.<\/p><p>&nbsp;&nbsp; \u0130ktidar gazetelerini okumak adetim de\u011fildir, bir okuyay\u0131m dedim, ba\u015fyaz\u0131y\u0131 okurken, uyuya kalm\u0131\u015f\u0131m.<\/p><p>&nbsp;&nbsp; Karn\u0131ma b\u0131&ccedil;ak sokulur gibi bir a\u011fr\u0131 duydum. Ama nas\u0131l... Anlat\u0131l\u0131r gibi de\u011fil... Dayanamad\u0131m, ba\u011f\u0131r\u0131p &ccedil;a\u011f\u0131rmaya ba\u015flad\u0131m. Bir cankurtaran arabas\u0131yla zor hastaneye att\u0131lar. Bay\u0131lm\u0131\u015f\u0131m. G&ouml;zlerimi a&ccedil;t\u0131\u011f\u0131m zaman ba\u015fucumda doktor soruyordu:<\/p><p>&nbsp;&nbsp; - Siz zehirlenmi\u015fsiniz. Hekimden bi\u015fey saklanmaz, intihar m\u0131 ettiniz?<\/p><p>&nbsp;&nbsp; Nerede o mutlu g&uuml;nler doktor, dedim nerede?<\/p><p>&nbsp;&nbsp; - Siz zehirlenmi\u015fsiniz diyorum, ne yediniz?<\/p><p>&nbsp;&nbsp; - Past\u0131rma.<\/p><p>&nbsp;&nbsp; Doktor ba\u011f\u0131rd\u0131:<\/p><p>&nbsp;&nbsp; - Ne, past\u0131rma m\u0131 yediniz? Siz deli misiniz? Hi&ccedil; past\u0131rma yenir mi? Gazeteleri okumad\u0131n\u0131z m\u0131, past\u0131rmadan zehirlenenlerin haberleri dolu... Ama bu past\u0131rma zehrine benzemiyor.<\/p><p>Ba\u015fka ne yediniz?<\/p><p>&nbsp;&nbsp; - Lokantaya gittim.<\/p><p>&nbsp;&nbsp; - Siz &ccedil;\u0131ld\u0131rm\u0131\u015fs\u0131n\u0131z.<\/p><p>&nbsp;&nbsp; - Lokantada konserve yedim.<\/p><p>&nbsp;&nbsp; - Bo\u015funa de\u011fil. Ba\u015fka?<\/p><p>&nbsp;&nbsp; - Makarna, pasta...<\/p><p>&nbsp;&nbsp; - Elbette zehirlenirsiniz, konserve, makarna, pasta!.. Daha ba\u015fka?<\/p><p>&nbsp;&nbsp; - Vallahi ba\u015fka bi\u015fey yemedim, iktidar gazetesini okurken...<\/p><p>&nbsp;&nbsp; - Ne? diye hayk\u0131rd\u0131, &ouml;lmedi\u011fine dua et. Haydi yine ucuz kurtuldun.<\/p><p>&nbsp;&nbsp; Hastaneden &ccedil;\u0131karken d&uuml;\u015f&uuml;n&uuml;yordum: Peki biz ne yapaca\u011f\u0131z? Ya\u015famaya b\u0131rakm\u0131yorlar, &ouml;lmeye b\u0131rakm\u0131yorlar...<\/p><p>Amma rahat rahat s&uuml;r&uuml;nebiliriz.<\/p><hr \/><p><strong>Aziz Nesin - \u0130t Kuyru\u011fu<\/strong><\/p><p><strong>Nas\u0131l \u0130ntihar Ettim?<\/strong><\/p>","date":"1466812268","tags":"ak\u015fam ne\u015friat\u0131 , aziz nesin , it kuyru\u011fu , nas\u0131l intihar ettim ","link":"nasil-intihar-ettim"}]